<?xml version="1.0" encoding="UTF-8"?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your blog. -->
<!-- It contains information about your blog's posts, comments, and categories. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your blog. -->

<!-- To import this information into a WordPress blog follow these steps. -->
<!-- 1. Log into that blog as an administrator. -->
<!-- 2. Go to Tools: Import in the blog's admin panels (or Manage: Import in older versions of WordPress). -->
<!-- 3. Choose "WordPress" from the list. -->
<!-- 4. Upload this file using the form provided on that page. -->
<!-- 5. You will first be asked to map the authors in this export file to users -->
<!--    on the blog.  For each author, you may choose to map to an -->
<!--    existing user on the blog or to create a new user -->
<!-- 6. WordPress will then import each of the posts, comments, and categories -->
<!--    contained in this file into your blog -->

<!-- generator="WordPress/2.8.4" created="2009-10-12 11:17"-->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.0/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.0/"
>

<channel>
	<title>mike desjardins</title>
	<link>http://mikedesjardins.us/wordpress</link>
	<description>freelance software developer consultant in portland, maine</description>
	<pubDate>Mon, 14 Sep 2009 13:47:59 +0000</pubDate>
	<generator>http://wordpress.org/?v=2.8.4</generator>
	<language>en</language>
	<wp:wxr_version>1.0</wp:wxr_version>
	<wp:base_site_url>http://mikedesjardins.us/wordpress</wp:base_site_url>
	<wp:base_blog_url>http://mikedesjardins.us/wordpress</wp:base_blog_url>
	<wp:category><wp:category_nicename>ant</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[ant]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>applet</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[applet]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>avant</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[avant]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>awn</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[awn]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>bluebird</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[bluebird]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>cache</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[cache]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>cairo</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[cairo]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>career</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[career]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>ejb</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[ejb]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>ejb3</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[ejb3]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>gconf</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[gconf]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>glassfish</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[glassfish]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>hibernate</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[hibernate]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>i18n</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[i18n]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>industry</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[industry]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>ipod</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[ipod]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>java</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[java]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>javamail</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[javamail]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>javascript</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[javascript]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>jee</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[jee]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>jmeter</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[jmeter]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>jpa</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[jpa]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>l10n</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[l10n]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>mac</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[mac]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>maven</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[maven]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>minidom</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[minidom]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>motivation</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[motivation]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>music</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[music]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>opensource</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[opensource]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>osx</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[osx]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>outsourcing</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[outsourcing]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>personal</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[personal]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>pizzashop</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[pizzashop]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>portland</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[portland]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>programming</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[programming]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>programming-career</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[programming career]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>python</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[python]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>python-django</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[python django]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>rails</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[rails]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>remoting</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[remoting]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>rest</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[REST]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>silly</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[silly]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>soapui</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[soapUI]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>social</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[social]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>spring</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[spring]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>tapestry</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[tapestry]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>twitter</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[twitter]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>ubuntu</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[ubuntu]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>weather</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[weather]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>wireless</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[wireless]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>work</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[work]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>xml</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[xml]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>xul</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[xul]]></wp:cat_name></wp:category>
	<wp:tag><wp:tag_slug>followfriday</wp:tag_slug><wp:tag_name><![CDATA[followfriday]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>music</wp:tag_slug><wp:tag_name><![CDATA[music]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>personal</wp:tag_slug><wp:tag_name><![CDATA[personal]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>portland</wp:tag_slug><wp:tag_name><![CDATA[portland]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>social</wp:tag_slug><wp:tag_name><![CDATA[social]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>social-media</wp:tag_slug><wp:tag_name><![CDATA[social media]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>twitter</wp:tag_slug><wp:tag_name><![CDATA[twitter]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>work</wp:tag_slug><wp:tag_name><![CDATA[work]]></wp:tag_name></wp:tag>
		<item>
<title>Testing my brand new blog</title>
<link>http://mikedesjardins.us/wordpress/2005/10/testing-my-brand-new-blog/</link>
<pubDate>Thu, 20 Oct 2005 10:00:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=3</guid>
<description></description>
<content:encoded><![CDATA[I'm not sure what I'm going to do with this thing yet, but I'd like to see if it works!]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>3</wp:post_id>
<wp:post_date>2005-10-20 04:00:00</wp:post_date>
<wp:post_date_gmt>2005-10-20 10:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>testing-my-brand-new-blog</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2005_10_01_archive.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>My First Blog Entry</title>
<link>http://mikedesjardins.us/wordpress/2005/11/my-first-blog-entry/</link>
<pubDate>Wed, 09 Nov 2005 02:18:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=4</guid>
<description></description>
<content:encoded><![CDATA[“A blog?”&nbsp;&nbsp;My wife rolled her eyes dismissively.&nbsp;&nbsp;“What are you going to write about?”<br/><br/>She’s right.&nbsp;&nbsp;I have no idea what I’m going to do with this yet.&nbsp;&nbsp; I have no idea why anyone would read it.&nbsp;&nbsp;Heck, why are you reading it?&nbsp;&nbsp;As corny as it sounds, I think I’m hoping that it’ll be therapeutic for me.&nbsp;&nbsp;When I was a lot younger, I used to write a <u>lot</u>.&nbsp;&nbsp;I’d write everything.&nbsp;&nbsp;I don’t do that anymore – and sometimes I feel like I need to reach for whatever is within my grasp to hold myself together.<br/><br/>I’ve got a great life – two adorable kids, a fantastic wife, a beautiful house in the country, and a job that, at worst, I can tolerate.&nbsp;&nbsp;It’s enough to make one feel guilty about complaining at all.&nbsp;&nbsp;Yet I seem to be afflicted with the same dissatisfaction that haunts many of the members of my generation.&nbsp;&nbsp;This dissatisfaction it’s not so much a feeling as a lack of one.&nbsp;&nbsp;&nbsp;&nbsp;The motivators that drove those before us to greatness have been eroded by a tireless wave of cynicism and disappointment.&nbsp;&nbsp;<br/><br/>And so we need to remain content going to work every day, buying more things, and falling asleep to a formulaic sitcom on TV.&nbsp;&nbsp;<br/><br/>At least I have my kids.&nbsp;&nbsp;When they aren’t teasing me to the edge of my sanity, they give me hope, and make me laugh, and try their level best to remind me that the importance of all the lifeless crap that I do to earn a living is fleeting at best.&nbsp;&nbsp;<br/><br/>Wow.&nbsp;&nbsp;This is a lot more depressing than I thought it’d be.&nbsp;&nbsp;It looks like I really needed to do this – I have a lot on my mind.&nbsp;&nbsp;Hopefully things will get a little more lighthearted and I’ll start talking about more geeky stuff like programming…]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>4</wp:post_id>
<wp:post_date>2005-11-08 20:18:00</wp:post_date>
<wp:post_date_gmt>2005-11-09 02:18:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>my-first-blog-entry</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2005_11_01_archive.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Coding Conventions are a Waste of Time</title>
<link>http://mikedesjardins.us/wordpress/2005/12/coding-conventions-are-a-waste-of-time/</link>
<pubDate>Sun, 18 Dec 2005 02:50:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=5</guid>
<description></description>
<content:encoded><![CDATA[Today, I figured out what the deal is with coding conventions, and I decided that I really don’t care about them very much anymore.<br /><br />First, it is easy, especially for a less-experienced programmer, to confuse elegant code and elegantly formatted code. It has been my experience that most programmers who write high-quality code tend to be attentive to detail, and thus they tend to format their code quite consistently. By imitating the format of the "good" code, the newbie attempts to capture some of that elegance. Sadly, it's rarely as simple as that.<br /><br />Secondly, because almost everyone writing software eventually needs to type something, the actual act of entering the language text in an editor is something to which programmers of all levels of expertise can relate. It takes almost no experience to acquire a preference for, e.g., where the token that begins a block should be. But someone who has written her very first program could argue about coding style, and her opinion would be just as valid as a veteran developer. So a college grad at his first job can easily enter a spirited debate with the more accomplished programmers over style, even if he couldn’t keep up with a discussion over more technical aspects of the language.<br /><br />And in the end, it really doesn’t matter than much. I used to argue that consistently formatted code made the source more readable. It does, a little. But frankly, I’ve never encountered a situation where programmers decided to mix different styles within the same file, much less the same function. For as much wasted bickering and energy that is spent on defending a formatting preference, most programmers are quite respectful of the code that was written before them when making small edits. And that’s the way that it should be.<br /><br />I have heard of workplaces where coding stylistic conventions were enforced by the source control management system. You have to wonder what the real, tangible, benefit of that is. Presumably, even programmers who have been indoctrinated with the corporate coding style rules will run into problems with such automated syntax Gestapo. And that will cost time, which will cost the company money. Presumably the people running these projects believe that the productivity loss is outweighed by all they are gaining with super-readable source code. They have every right to think that. But I’d like to see the numbers that prove it.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>5</wp:post_id>
<wp:post_date>2005-12-17 20:50:00</wp:post_date>
<wp:post_date_gmt>2005-12-18 02:50:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>coding-conventions-are-a-waste-of-time</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2005_12_01_archive.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>What to do about my job</title>
<link>http://mikedesjardins.us/wordpress/2006/03/what-to-do-about-my-job/</link>
<pubDate>Wed, 29 Mar 2006 01:35:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=6</guid>
<description></description>
<content:encoded><![CDATA[Okay, so I had all of these pretentious ambitions for this blog.&nbsp;&nbsp;I thought I would write insightful, witty, imaginative technical stuff.&nbsp;&nbsp;I secretly hoped that geeks would descend upon my site in droves to get pearls of wisdom from yours truly.<br/><br/>What kind of a**hole thinks like that, anyway?&nbsp;&nbsp;Besides, I don’t have time to be pretentious.<br/><br/>So I’ve gotten over that.&nbsp;&nbsp;I’m scaling way back.&nbsp;&nbsp;Now this is going to be what I originally intended it to be – therapeutic.&nbsp;&nbsp;I won’t even pretend to know anything about anything.<br/><br/>So here’s what has been bugging me a lot lately.&nbsp;&nbsp;The company I work for is offshoring their software development work.&nbsp;&nbsp;We’re not out<em>sourcing</em>… that’s different.&nbsp;&nbsp;You see, the company I work for actually went out and <u>purchased </u>a software development company in India.<br/><br/>I don’t think that is what bugs me the most about it, though.&nbsp;&nbsp;When I started working at my current job, it was at a smallish startup that was owned by local folks with big dreams.&nbsp;&nbsp;That sort of fell through a few years ago.&nbsp;&nbsp;Eventually, that smallish startup was bought out by a bigger company.&nbsp;&nbsp;<br/><br/>Since then, we (the developers that came on-board as part of the smallish startup) have never had parity with the developers who were with the mother-ship that bought us.&nbsp;&nbsp;If you look at the org chart, people doing the exact same job consistently (and I mean <u>consistently</u>) have titles that are one rung down in my shop than at company headquarters.&nbsp;&nbsp;In fact, they invented a whole rung of management below every rung at the acquiring company, presumably so they could start software managers at the acquired company at one slot beneath the people doing the very same job at company HQs.&nbsp;&nbsp;Why?&nbsp;&nbsp;<br/><br/>I can count on one hand the number of times the VP of development has ventured to our facility in the past twelve months.&nbsp;&nbsp;It’s a small wonder he has no appreciation for what we do – I can’t imagine he has much of an idea what I, or any of my colleagues, actually do from day to day.&nbsp;&nbsp;<br/><br/>So back to this whole offshoring thing.&nbsp;&nbsp;We’ve been told that none of us are getting laid off.&nbsp;&nbsp;However, new jobs will be transitioned to the new facility in India.&nbsp;&nbsp;The thing is, this is only happening to the people <u>at my site</u>.&nbsp;&nbsp;Meanwhile, Company HQ has all kinds of open req’s for new developers at their facility.&nbsp;&nbsp;WTF?!?<br/><br/>So now I’m at a crossroads.&nbsp;&nbsp;I think I’m pretty well respected for what I do.&nbsp;&nbsp;I have a lot of “domain knowledge.”&nbsp;&nbsp;I.e., I know a ton of historical decisions, folklore, business logic, etc., about the product we produce.&nbsp;&nbsp;I’m also a decent programmer, but I don’t think that’s my real value to the company.&nbsp;&nbsp;My real value is my knowledge of the product.&nbsp;&nbsp;But that isn’t going to get me squat at a new job... especially in Southern Maine, where technical jobs are quite scarce.&nbsp;&nbsp;My area is expertise is not in high demand in these parts.&nbsp;&nbsp;<br/><br/>Making matters worse, I have management aspirations.&nbsp;&nbsp;I’ve always pictured myself climbing the corporate ladder to become a director and maybe a VP someday in some technical capacity.&nbsp;&nbsp;But if my company is not expanding the development team at my site, what are the chances of that happening?&nbsp;&nbsp;Zero.&nbsp;&nbsp;Zilch.&nbsp;&nbsp;The director of my current group is not going anywhere.&nbsp;&nbsp;If they don’t grow, there will be no more group.&nbsp;&nbsp;I’ve lost any incentive to grow my career in this direction.<br/><br/>So now I need to make a choice.&nbsp;&nbsp;Keep this asset I built up (my “domain knowledge”), and stay with the current company.&nbsp;&nbsp;Or start looking for greener pastures at another company.&nbsp;&nbsp;If I leave, then all I have to fall back on is my technical skillset.&nbsp;&nbsp;If I stay, I have two more options… either I stay in software development and abandon all management aspirations, or I <em>really </em>move to the dark side, and venture into something more like product management.&nbsp;&nbsp;The nice thing about the product management route is, even if every tech job in Maine gets sent to India or China or Eastern Europe or whatever, the business jobs stay in the U.S.&nbsp;&nbsp;I.e., if I get the hell away from programming, I mitigate the risk of not being able to find work in 20 years.<br/><br/>This has been eating at me for a few months now.&nbsp;&nbsp;It got worsened when a Product Management position was created for my product.&nbsp;&nbsp;I applied.&nbsp;&nbsp;I didn’t get the job (there’s more to that story, but I’ve already written too much).<br/><br/><br/>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>6</wp:post_id>
<wp:post_date>2006-03-28 19:35:00</wp:post_date>
<wp:post_date_gmt>2006-03-29 01:35:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>what-to-do-about-my-job</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2006_03_01_archive.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title></title>
<link>http://mikedesjardins.us/wordpress/2006/04/7/</link>
<pubDate>Mon, 03 Apr 2006 00:46:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=7</guid>
<description></description>
<content:encoded><![CDATA[<h2>Weekend of assembling</h2><br /><br />I had a pretty productive weekend – I spent a lot of time assembling stuff.  Saturday, I helped put together a swing set that the neighbors gave us on the condition that they could use it.  They came over and we had a big old barbecue and we put the thing together.  It was cool… it reminded me why we moved to the ‘burbs.  Their kids came over, the kids across the street came over, and it was all wicked cool.<br /><br />The swing set was a slightly used thing from one of the other families in the neighborhood that moved away.<br /><br />The other neighbor, on the other side of us, acted a little weird about the thing, though.  We set it up on our property line with her.  I didn’t talk speak to her (my wife did), but I guess she acted like it wasn’t safe or something.  Whatever.  She drives a Lexus SUV.  I’m sure she can buy her daughter a brand new super-perfect one.<br /><br />Anyway, I also put together one of those department-store particle-board bookshelf things.  Got it at Lowe’s.  We needed it in the office, which is still filled with boxes.  It made me want to meet the person that invented the cam bolt.  That person in single-handedly responsible for more cheap laminated-formaldehyde-and-woodchip furniture in young peoples’ first apartments and working-class double-wides than anyone else.  It’s brilliant – one quarter of a turn, and it’s locked in.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>7</wp:post_id>
<wp:post_date>2006-04-02 18:46:00</wp:post_date>
<wp:post_date_gmt>2006-04-03 00:46:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>7</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2006_04_01_archive.html</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229861076</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>My C++ DateTime class</title>
<link>http://mikedesjardins.us/wordpress/2006/05/my-c-datetime-class/</link>
<pubDate>Thu, 04 May 2006 01:17:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=8</guid>
<description></description>
<content:encoded><![CDATA[My C++ Date/Time class is now available on this site under the “Geeky” tab on the navbar.  I was hoping to do so much more with it.  I wanted documentation (maybe with doxygen), I wanted to compile it on a bunch of different compilers and beef up the makefile, I wanted automated unit tests.  In the end I just realized that I’d never have the time to “finish” it, so I did what all of the other open source developers do, and put a half-finished, mostly-useful chunk of code out there.  The main difference is that <u>nobody </u>will care about my date class.  Probably nobody will even read this.<br /><br />I wrote it because I didn’t like the date class I was using where I worked, and I really didn’t want to use the one available at Boost.org.  I wanted something stupid simple to use, like Java’s java.util.Date, and it’s companion, SimpleDateFormatter.  Why can’t C++ be more like Java?  There are things that can make C++ more usable which don’t affect the language at all.  The biggest thing is the libraries and the packaging.  You can’t beat importing a package from a jar file.  And you can’t beat having things like HttpClient and Date available in the libraries that come with the language.  I know the latter will never happen… the beauty of having one company “control” a language is that decisions can be made about APIs quickly and easily.  That will never happen in a standardization committee. <br /><br />Oh, well.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>8</wp:post_id>
<wp:post_date>2006-05-03 19:17:00</wp:post_date>
<wp:post_date_gmt>2006-05-04 01:17:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>my-c-datetime-class</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2006_05_01_archive.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>A Day in the Life of a Middle-aged Nerd</title>
<link>http://mikedesjardins.us/wordpress/2006/05/day-in-life-of-middle-aged-nerd/</link>
<pubDate>Thu, 25 May 2006 00:56:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2006/05/a-day-in-the-life-of-a-middle-aged-nerd/</guid>
<description></description>
<content:encoded><![CDATA[I finally have my Linux PC setup. Now I have no idea what to do with it. It's an old HP Brio that my company was getting rid of... a whopping 400 MHz beast. Like I said, now that I've finished this project, I'm not sure what to use it for. I'm actually writing this on it now. It's pretty much like writing a post on my laptop. Yipee!<br /><br />I'm going to Atlanta in a couple of weeks for work. I don't know yet if it's for one day or two. The client we're meeting with can't get its collective act together to save its life. Anyway, the trip is right in the middle of when my family was planning a vacation. Naturally, they're all thrilled. We were hoping for a nice trip to Boston or something. Oh well. Some other weekend.<br /><br />So I've gotten to do more stuff with Java lately at work, which is awesome. I'm starting to really love Java and hate C++. My C++ zealot colleagues at work have stopped speaking to me. In just the last two weeks, I used castor, log4j, spring, and created an axis-generated webservice client that used all of them. It was so easy. No wonder our jobs are getting offshored! That's gotta be the thing that Java has that C++ doesn't... the packaging. The fact that I can just dump a jar file in my classpath and start using it (and the IDE just "knows" what the API looks like) is amazing. The Java language has its quirks that take some getting used to... e.g., the thing I miss the most is templates. I guess Java 5 has generics, but I'm doing enterprise stuff, which lags behind by a rev (Java EE 5 not ready for prime time yet). So I'd like to figure out a way to keep working in Java professionally for a while... I've just gotta figure out how to do that...<br /><br />P.S. The vasectomy is fine now.  Like I never even had one.  Still one month to go before I get tested to see if it worked...]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>60</wp:post_id>
<wp:post_date>2006-05-24 19:56:00</wp:post_date>
<wp:post_date_gmt>2006-05-25 00:56:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>day-in-life-of-middle-aged-nerd</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2006/05/day-in-life-of-middle-aged-nerd.html</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229861042</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>evening commute</title>
<link>http://mikedesjardins.us/wordpress/2006/06/evening-commute/</link>
<pubDate>Mon, 19 Jun 2006 12:19:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=9</guid>
<description></description>
<content:encoded><![CDATA[<span style="font-style: italic;">(haven't finished this one yet...)</span><br />               <p class="MsoNormal">watching the red light serpent wind its way<br />sliding past the white<br />past buildings sullen, stark<br />unmoved by impatient hurried minds<br />scurrying away<br />…from conversations, forced and narrow<br />…from deadlines self-imposed<br />…from weary focus on text, data, digits, policies</p>              <p class="MsoNormal">the tired sky sulks orange and grey<br />hurried broadcast invades the muffled traffic<br />providing not enough distraction<span style=""> </span><br />…from unyielding household chores<br />…from hunger<br />…from other anxious drivers</p>              <p class="MsoNormal">“hey asshole!<span style="">  </span>the light is <u>green</u>!’<br />the man shouts at the other car<br />mindful of machine, not occupant<br />the window atop his woodgrain desk<br />commands him without emotion, every day<br />a sad misplaced rebellion </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>9</wp:post_id>
<wp:post_date>2006-06-19 06:19:00</wp:post_date>
<wp:post_date_gmt>2006-06-19 12:19:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>evening-commute</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2006_06_01_archive.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2</wp:comment_id>
<wp:comment_author><![CDATA[hydrohoney]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2006-06-28 16:56:00</wp:comment_date>
<wp:comment_date_gmt>2006-06-28 22:56:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[hi mike,<br/>nice to see you are doing well.<br/>never know who will read these things.....:)<br/>take care,<br/>sherri welch]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3</wp:comment_id>
<wp:comment_author><![CDATA[eric]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2006-06-30 06:37:00</wp:comment_date>
<wp:comment_date_gmt>2006-06-30 12:37:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[onethirdacre.com may be available]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>I hate my URL</title>
<link>http://mikedesjardins.us/wordpress/2006/06/i-hate-my-url/</link>
<pubDate>Fri, 30 Jun 2006 11:40:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2006/06/i-hate-my-url/</guid>
<description></description>
<content:encoded><![CDATA[So, I own dragonflymarsh.com.  It's kinda lame.  Do you know how hard it is to get a decent URL?  The dragonflymarsh name used to be sorta relevant to me... I used to live in a house on a five acres at the end of a dirt road.  Those five acres were pretty swampy, and we had lots of dragonflies and other bugs.  buginfestedswamp.com didn't have the <span style="font-style: italic;">je ne se quois</span> I was looking for. Hence, dragonflymarsh.com.  I've since moved to suburbia, and live on my less-than-impressive third of an acre.  No swamp.  No bugs.  So the URL is not only lame, it doesn't even make sense.<br /><br />So I've been watching this site of daily expiring domain lists:  <a href="http://www.odditysoftware.com/page-dailydomains.htm">http://www.odditysoftware.com/page-dailydomains.htm</a>  So far, nothing has really appealed to me.  Half of them are obviously for adult sites, and I'm not sure I want to tell my mom and dad to e-mail me at mike@sluttyteenwhores.com.  The obvious <a href="http://www.mikedesjardins.com">http://www.mikedesjardins.com</a> is already taken by some marketing/motivational speaker guy who forwards it to a corporate site, and he just renewed it for another two years.  <span style="font-style: italic;">*Sigh*<br /><br /><span style="font-style: italic;"><span style="font-style: italic;"></span></span></span>So I guess I've just gotta live with dragonflymarsh.com for awhile.<br /><br /><span style="font-style: italic;"></span>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>62</wp:post_id>
<wp:post_date>2006-06-30 06:40:00</wp:post_date>
<wp:post_date_gmt>2006-06-30 11:40:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>i-hate-my-url</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2006/06/i-hate-my-url.html</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>37</wp:comment_id>
<wp:comment_author><![CDATA[eric]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2006-06-30 07:37:00</wp:comment_date>
<wp:comment_date_gmt>2006-06-30 12:37:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[onethirdacre.com may be available]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Up too late</title>
<link>http://mikedesjardins.us/wordpress/2006/07/up-too-late/</link>
<pubDate>Fri, 07 Jul 2006 03:01:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=10</guid>
<description></description>
<content:encoded><![CDATA[This is the umpteenth time I've been woken up at night by someone frantically calling me from work because something hasn't been working.  I'm just sitting here, alone, in the dark, waiting for another call.  I can't help but feel like this isn't what I signed up for.  When I was a kid, my mom and dad convinced me <span style="font-style: italic;">not</span> to be a doctor (strange, I know).  Their rationale was that a doctor could never take a day off - they'd always take their job home with them.  When a patient is sick in the middle of the night, you'd get paged.  That sounded icky to me.  Little did I know that cellular billing software was somewhere near saving human lives on the "important enough to invade your family and sleep time" list. <br /><br />I guess I should've been a doctor.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>10</wp:post_id>
<wp:post_date>2006-07-06 21:01:00</wp:post_date>
<wp:post_date_gmt>2006-07-07 03:01:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>up-too-late</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2006_07_01_archive.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>4</wp:comment_id>
<wp:comment_author><![CDATA[eric]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2006-07-26 07:00:00</wp:comment_date>
<wp:comment_date_gmt>2006-07-26 13:00:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hey, Mike, I just sent you a meeting invitation for a lunchtime "engineering planning" meeting...recurring daily. ;)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>The Lunch Time Meeting</title>
<link>http://mikedesjardins.us/wordpress/2006/07/lunch-time-meeting/</link>
<pubDate>Tue, 25 Jul 2006 01:52:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2006/07/the-lunch-time-meeting/</guid>
<description></description>
<content:encoded><![CDATA[OK - so I understand the desperation.  I've setup many meetings at work.  You go into Outlook, you add all the people who should come, and you look at the calendar.  Lo and behold, the next time that all of the required members, and a conference room, are available is so far into the future that the meeting will no longer be relevant.  Unless...<br /><br />A second look at the calendar reveals several gaps between noon and 1pm where everyone is free.  And it's just a few days away...<br /><br />I can understand the temptation.  I've felt it myself.  The usual offendor is an apologetic project manager who is exasperated by the fact that he/she cannot find a time to get everyone together on a conference call to discuss something of utmost importance (to him/her).  But nothing galls me more than to get invited to a meeting from 12-1.  Worse, I work at a remote site, away from the corporate mothership. The project manager is usually thoughtful enough to provide lunch as a consolation for stealing away everyone's precious lunch break, but only to those at the corporate site.  People like me, who call into meetings, are left to hear spit-filled chewing sounds and crackling potato chip bags.  I'm chained to my desk trying to make out the words while my colleagues go out to lunch, or go for a walk outdoors to get fresh air.<br /><br />I guess I feel like I don't ask for too much.  I work extra hours nearly every weekI come in early, I leave late, I login from home to read my e-mail before I go to bed.  I answer e-mail promptly.  I'm (usually) polite when people stop by my desk with questions. <br /><br />I have one hour each day to clear my mind, push all the crap aside, eat my sandwich, and maybe go for a walk.  It keeps me fresh and energized.  I <span style="font-style: italic;">think</span> for a living.  My brain needs to rest for a while or it won't work well. <br /><br />That's why it's really rude for you to schedule a lunch time meeting.  It implies that your meeting is 1.) more important than whatever I need to work on later that day, and 2.) more important than my break time.  You're probably scheduling the meeting at lunch because I'm in meetings for most of the rest of the day.  That probably means that 1.) you're using the only time that I have to eat, and 2.) I have almost no time to do any of my real work that day, and I was probably planning on working through lunch if I was going to have any hope of getting anything done.  I'm not really paid to go to meetings - people assign stuff to me and don't even consider that I'll spend more time in meetings than working on the stuff that's assigned to me.  Borrowing my lunch time just exacerbates the problem further.<br /><br />So if I don't accept your lunch-time meeting, now you know why.  Try to catch up with me later to get the information you needed.  I'll be quite willing to help you out then!]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>64</wp:post_id>
<wp:post_date>2006-07-24 20:52:00</wp:post_date>
<wp:post_date_gmt>2006-07-25 01:52:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>lunch-time-meeting</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2006/07/lunch-time-meeting.html</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229861003</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>38</wp:comment_id>
<wp:comment_author><![CDATA[eric]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2006-07-26 08:00:00</wp:comment_date>
<wp:comment_date_gmt>2006-07-26 13:00:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hey, Mike, I just sent you a meeting invitation for a lunchtime "engineering planning" meeting...recurring daily. ;)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Still Alive</title>
<link>http://mikedesjardins.us/wordpress/2006/09/still-alive/</link>
<pubDate>Tue, 05 Sep 2006 11:44:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=11</guid>
<description></description>
<content:encoded><![CDATA[I haven't written anything in a long, long, time.  It's something I keep meaning to do, but can never seem to get to.  I guess I've been busier than I thought with work and "family stuff." <br /><br />We just launched a big project at work.  It's a new kind of account for one of our wireless carriers.  The neat part was getting to work so closely with the carrier on this one.  I never, ever thought of myself as a "people person," but I actually seem to do pretty well with it.  It's odd... when I'm dealing directly with clients, I almost become this whole separate person.  It's like I put on the "customer-friendly" veneer.  It's particularly easy with this specific client because they have a dot-commy not-quite-professional culture. <br /><br />So anyway, I got to travel to their headquarters, and I got to go on another trip to meet with them in Atlanta, and I discovered that I like business travel quite a bit.  It's not something I'd like to do all the time - I know people who are on the road three or four days a week every week.  That would suck, as I'd never get to see my kids.  But I wouldn't mind like 5 or 6 times a year. <br /><br />So they're talking about making that more like my full-time job at work.  The thing is, my division is in pretty dire financial straits right now.  Our clients are dropping like flies.  I suppose the good thing is that most of them are getting bought up by bigger carriers, and they aren't leaving voluntarily - industry consolidation sucks.  But I don't know how much I can count on getting a fabulous new title with new responsibilities when we're looking at losing so much revenue. <br /><br />I guess I think about my job a lot.  Probably too much.  It's just a job, right?  As long as they keep paying me, and I enjoy it, I really <span style="font-style: italic;">shouldn't</span> worry about things like this. But I guess that's just a part of who I am.  I'm kind of a "career guy."  It's probably caused by the super-competitiveness in me. <br /><br />I just spilled coffee on my shirt.  Never fails when I wear a white shirt.  Man, I hate that.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>11</wp:post_id>
<wp:post_date>2006-09-05 05:44:00</wp:post_date>
<wp:post_date_gmt>2006-09-05 11:44:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>still-alive</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2006_09_01_archive.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Note to CSI</title>
<link>http://mikedesjardins.us/wordpress/2006/10/note-to-csi/</link>
<pubDate>Sat, 21 Oct 2006 01:13:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=12</guid>
<description></description>
<content:encoded><![CDATA[My wife is a big fan of CSI.  We've seen like every Las Vegas one, so now we're watching Miami which is, frankly, really hard to stomach.  I can't stand that Caruso guy.  Anyway... it really bothers me that they never turn on the freakin' lights at a crime scene!  Why on earth do they wander around using their flashlights when they could just turn on the darned lights?!?  Sheesh...<br /><br />Oh, BTW, we bought the Prius and it rocks.  It's a light-green '06 with 8000 miles on it.  We picked it up a few weeks ago and we've been getting about 47-48 MPG.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>12</wp:post_id>
<wp:post_date>2006-10-20 19:13:00</wp:post_date>
<wp:post_date_gmt>2006-10-21 01:13:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>note-to-csi</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2006_10_01_archive.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>5</wp:comment_id>
<wp:comment_author><![CDATA[eric]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2006-10-23 09:04:00</wp:comment_date>
<wp:comment_date_gmt>2006-10-23 15:04:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I can't wait to get more mileage updates! Maybe you can get the kit to convert it to full electric mode (<a HREF="http://www.makezine.com/blog/archive/2005/03/prius_owners_we.html" REL="nofollow" TITLE="make prius">make magazine</a>) and start out-blogging dave and <i>his</i> prius mileage (<a HREF="http://daveblog.wordpress.com/?s=prius&searchbutton=go%21" REL="nofollow" TITLE="daveblog">daveblog</a>). Keep up the good Karma!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Still Alive... Nothing interesting to see here...</title>
<link>http://mikedesjardins.us/wordpress/2006/11/still-alive-nothing-interesting-to-see/</link>
<pubDate>Tue, 28 Nov 2006 01:21:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=13</guid>
<description></description>
<content:encoded><![CDATA[I  haven't written anything in a long time.  Probably because I don't have much to say. <br /><br />I decided to stay with my current employer after receiving an offer elsewhere.  I'm taking a "wait and see" attitude for now.  They've made a few changes that I think will be good for the product...  time will tell whether or not those changes will be good for my career.<br /><br />In my new role, I'm going to be promoted again and still do the same job as I had two promotions ago (funny, that).  But it'll be a lot more Java and with a real team that does the  SQL and Java layers of our new webservice.  So I'm reading <span style="font-style: italic;">Spring In Action</span> by Walls and Briedenbach.  It's a really good book so far - just got finished with the section on AOP.  Looking forward to the database stuff.<br /><br />We had four Thanksgiving celebrations last week... one Sunday, Two on Thursday, and one on Friday.  I'm all set with turkey for a while.  Probably the only annoying part is all the traveling we had to do - thank God we have a DVD player in the car for the kids.<br /><br />I recently downloaded a couple of albums from iTunes by Trespassers William.  I found out about them because their singer is on one of my Chemical Brothers albums.  Anyway, the Trespassers William stuff is awesome.  It's really emotional and environmental... with lots melancholy, moaning, echoing guitars and sad, poignant lyrics.  It kinda reminds me of Mazzy Star from the 90's. <br /><br />Before that I had been addicted to Morcheeba, Zero 7, and Thievery Corporation - I've been really into the cheesy techo-lounge crap lately.  It's great music for programming... it's enough to distract me from my ADHD but not overbearing.<br /><br />It looks like my homepage doesn't render quite right w/ IE7.  For some reason, the navbar gets all hosed up when you click the "Photos" link.  I have no idea why it would do that, and I'm kinda too lazy to care right now.  Probably my CSS is not playing nice with IE7 (surprise).<br /><br />Guess that's all for now.  Just thought I'd write something to keep this thing alive.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>13</wp:post_id>
<wp:post_date>2006-11-27 20:21:00</wp:post_date>
<wp:post_date_gmt>2006-11-28 01:21:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>still-alive-nothing-interesting-to-see</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2006_11_01_archive.html</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860956</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>6</wp:comment_id>
<wp:comment_author><![CDATA[Julianne]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2006-12-11 12:47:00</wp:comment_date>
<wp:comment_date_gmt>2006-12-11 18:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Trespassers William is great.  I stumbled onto them from the Tiny Mix Tapes site.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Fresh New Look</title>
<link>http://mikedesjardins.us/wordpress/2007/02/fresh-new-look/</link>
<pubDate>Mon, 26 Feb 2007 21:48:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=16</guid>
<description></description>
<content:encoded><![CDATA[I had a week off last week. I spent a little bit of that time spiffing up my website. The old look was basically ripped off from a design at <a href="http://www.oswd.org/"><span class="blsp-spelling-error" id="SPELLING_ERROR_0">OSWD</span></a> - unfortunately, I don't even remember its name. This new design is based on that one, but I've changed all of the <span class="blsp-spelling-error" id="SPELLING_ERROR_1">CSS</span> to make it truly my own. I decided to go with a hip "dark" looking page, because that seems to be trendy lately. I also added another trendy touch - <span class="blsp-spelling-error" id="SPELLING_ERROR_2">CSS</span> rounded corners.  I'm using a technique that I learned <a href="http://www.html.it/articoli/nifty/index.html">here</a>. Lastly, I got rid of the wannabe Mac OS "<span class="blsp-spelling-error" id="SPELLING_ERROR_3">lickable</span>" logo, too. I actually purchased the one that I'm using now from a stock image website... <a href="http://www.fotalia.com/"><span class="blsp-spelling-error" id="SPELLING_ERROR_4">Fotalia</span></a>. The content has changed slightly, but those changes are not very <span class="blsp-spelling-corrected" id="SPELLING_ERROR_5">noticeable</span>.  Anyway, hope you like it...]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>16</wp:post_id>
<wp:post_date>2007-02-26 15:48:00</wp:post_date>
<wp:post_date_gmt>2007-02-26 21:48:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>fresh-new-look</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2007_02_01_archive.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Quality in Burgers and Software</title>
<link>http://mikedesjardins.us/wordpress/2007/03/quality-in-burgers-and-software/</link>
<pubDate>Mon, 05 Mar 2007 00:58:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=17</guid>
<description></description>
<content:encoded><![CDATA[When I was in high school, I had a job at the local McDonald's.  I started out on the grill, and worked out back making burgers, and initially starting working as a "closer," which meant I stayed until after the store closed, cleaned out the "vats" (the deep-fryers), scrubbed the grill, mopped, etc.  I eventually worked my way "up" to opener, which was basically the opposite of closing.  I came in before the store opened, prepared the ingredients, fired up the grill, pre-made the muffins and biscuits, etc.<br /><br />The job was pretty rote.  A manager would scan the crowd and determine how much food needed to be staged, and called back orders to the people working grill.  You'd carefully place the meat on the grill, hit the button, and follow the grill's commands ("flip patties") when it beeped at you.  Eventually you'd manufacture the sandwiches.  Everything was on a timer.  Patties, buns, McNuggets, Breakfast Burritos, etc., could only be kept a certain number of minutes before they were unceremoniously tossed into a bucket resembling an empty joint-compound container.  It was some manager's job to go through the waste later to calculate how much was lost.<br /><br />Even in a mundane place like a fast-food restaurant, there were processes and controls in place to ensure that a consistent, quality product was given to the customer.  Sure, some people would bend the rules occasionally (some employees more often than others), but McDonald's spent a lot of time codifying and parameterizing what was acceptable, and what wasn't.  Chicken patties that are in the warmer for 19 minutes are acceptable.  Twenty minutes, and it's tossed.  There are horror stories and urban legends about rats and food being served off the floor, but I like to think that those horror stories are just rumor and exaggeration - at least <span style="font-style: italic;">I</span> never saw any of it!<br /><br />Sometimes it seems like similar rules just don't apply to software engineering.  While McDonald's might expressly forbid serving an impatient customer a hamburger that is more than <span style="font-style: italic;">x</span> minutes old, software engineering companies would rather serve crap from the garbage<br />or off from the floor than make a customer wait.  When a bus filled with a hungry teen-aged high school soccer team pulls into McDonald's, the managers don't get dollar signs in their eyes, and order the cooks to stop cooking the burgers to a safe temperature, to get a few more Quarter Pounders with Cheese out the door more quickly.  If they did, they'd risk being the next fast-food chain on the evening news, with the E. Coli outbreak <span style="font-style: italic;">du jour</span>. <br /><br />But I think the majority of software engineering firms do exactly that - when an impatient customer comes to the counter with their order and an expectation of the turnaround time to complete it, the pimply-faced teenager at McDonald's shows more bravery and honesty than the customer-facing professionals at a programming shop.  Anyone who has had to come up with a credible schedule for a software project knows that it's true... the first thing to go is quality.  And I'm not just talking about that under-appreciated "last step" of Quality Assurance; nope... design, proper architectural decisions, planning, scoping... all of it is tossed in order to ship that under-cooked, over-clocked, slopped together drippy wax-paper-wrapped burger to the customer. <br /><br />And we have the audacity to wonder why the customer is always unhappy with us.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>17</wp:post_id>
<wp:post_date>2007-03-04 18:58:00</wp:post_date>
<wp:post_date_gmt>2007-03-05 00:58:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>quality-in-burgers-and-software</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2007_03_01_archive.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Agile Minds stuck in a BDUF company</title>
<link>http://mikedesjardins.us/wordpress/2007/03/agile-minds-stuck-in-bduf-company/</link>
<pubDate>Mon, 19 Mar 2007 22:51:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2007/03/agile-minds-stuck-in-a-bduf-company/</guid>
<description></description>
<content:encoded><![CDATA[I picked a really bad time to start reading about Agile software development methodologies.  Right now we're working on a project with ridiculous deadlines.  What else is new, right?  Everyone in the software industry has impossible deadlines.  But this one is just silly - I keep telling people that it's the most unrealistic timeline I've ever seen in my career (granted, I've only been at this for a little over ten years now). <br /><br />I recently picked up <span style="font-style: italic;">Crystal Clear: A Human-Powered Methodology for Small Teams</span> by Alistair Cockburn.  I've also read a couple of other less remarkable books, and I've done some online reading (like Scott Ambler's site, <a href="http://agilemodeling.com/">http://agilemodeling.com</a>).  Of course, as advocates of the Agile cause, they make their methodologies sound fantastic.  But something about the agile approaches really resonated with me.  Particularly the idea that the artifacts (or "documentation") of software development are for creating a shared understanding of the problem and solution.  Perfect documentation, in whatever format, is not a goal unto itself.<br /><br />Anyway - a lot of what they are saying seems perfect for the project I'm on - vague, somewhat contradictory specifications from the client, massive user interface tweaks, etc.  It's something that would be a great candidate for iterative development with close daily involvement from the client. <br /><br />So you can probably imagine how frustrated I was today when I was sitting in a conference room, listening to one of our executives give a demonstration on Microsoft Sharepoint.  It features ways to version your documents such that versions prior to "publishing" aren't seen by unpriviledged users, but are to your team, provided you check them into the right folder or location... because over here, it's got these priviledges, and over there, it has some other priviledges.  And it's configurable so that our eight (no exaggeration) different documents that are required for a code change are selectable from a list when we check the documents in.  And we should check our documents in daily.  And (here's the best part), the rest of the company isn't on Sharepoint - they're on this expedio-based document library so, when we publish, we need to check a <span style="font-style: italic;">separate</span> document into that library with a hyperlink to the proper place in <span style="font-style: italic;">our </span>sharepoint library.<br /><br />Our development process, which is entirely comprised of documentation-based milestones, is painstakingly detailed on an intranet site with a flowchart that is spread out over scores of pages.<br /><br />Who do you think I work for?  IBM?  EDS?  Some giant banking firm?  Nope.  It's a small shop.  <span style="font-style: italic;">Well</span> under 200 developers.  Probably fewer than 100. <br /><br />I feel like I've learned some things that could help us out of the darkness, and into unbridled efficiency and creativity.  But I'm powerless to affect our development process because the people in charge are so steeped in the Big-Design-Up-Front (BDUF) process that they've "perfected" through the years.  I tried introducing some very small ideas into my own small team (five, including me), but even that is difficult to do.  I'm expected to check my project plan (did I mention that I hate MS Project?) into that wretched sharepoint site this week, with it's perfect Gantt chart showing the requirements gathering, analysis, design, code, and testing estimates.  Blech. <br /><br />I wish I had never read that stuff.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>75</wp:post_id>
<wp:post_date>2007-03-19 17:51:00</wp:post_date>
<wp:post_date_gmt>2007-03-19 22:51:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>agile-minds-stuck-in-bduf-company</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860902</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2007/03/agile-minds-stuck-in-bduf-company.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Barracuda Yellow Alone</title>
<link>http://mikedesjardins.us/wordpress/2007/03/barracuda-yellow-alone/</link>
<pubDate>Wed, 21 Mar 2007 23:47:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2007/03/barracuda-yellow-alone/</guid>
<description></description>
<content:encoded><![CDATA[We just bought our four-year-old son a pet betta for his tiny five gallon aquarium at home.  This is the third or fourth fish we've purchased for the thing... sadly, they don't seem to live very long despite our best efforts.  He named the fish "Barracuda Yellow Alone." <br /><br />I love that name.  It's cool on so many levels. <br /><ul><li>He's named his pretty little fish after such an aggressive sport fish.</li><li>We can call him "Barry" for short.</li><li>It's colorful, literally.<br /></li><li>The last name (would that be his "surname"?): Alone.  It's so poignant.  Bettas have to live on their own because they fight other bettas to the death.  It's such a stark, sad name... but it's his fish's destiny to be lonely because it is his nature. <br /></li></ul>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>76</wp:post_id>
<wp:post_date>2007-03-21 18:47:00</wp:post_date>
<wp:post_date_gmt>2007-03-21 23:47:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>barracuda-yellow-alone</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2007/03/barracuda-yellow-alone.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>I&#039;ve switched</title>
<link>http://mikedesjardins.us/wordpress/2007/04/ive-switched/</link>
<pubDate>Mon, 16 Apr 2007 00:13:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=18</guid>
<description></description>
<content:encoded><![CDATA[I'm typing this from my spankin' new Macbook Pro.  I've wanted a Mac since before I purchased my last laptop. I chickened out last time, and went with a Dell.  That laptop served me well, but it came time to replace it, so I again faced the decision of whether or not to make the leap and become an iSheep. <br /><br />So far, I like it.  I used Gnome on Linux for a while, and it reminds me a little of a much more polished version of that.  It's now clear who the Gnome guys were ripping off - things like the control panel and finder feel a lot like the control panel and nautilus did on Linux.  The hardware itself feels noticeably more polished than the Dell. <br /><br />I got the cheapest Macbook Pro, and upgraded it to 2GB.  That basically makes it the same as the middle-of-the road Mac, without an extra 128MB of video RAM, but $350 cheaper.  I also bought Parallels, which is software that lets you run Windows within a window in OS X.  If other converts stories are to be believed, it is a valuable safety net, but I'll find myself using it very little.  We'll see.  I also bought the cheapest version of Office, and the wireless "mighty mouse."<br /><br />I had been holding out until Apple released Leopard, but when Apple announced last week that Leopard wasn't coming until October, I decided I just couldn't wait any longer.<br /><br />The setup was OK - I did run into trouble when I tried to get it into my wireless network, though.  For reasons I won't get into here, I had setup my wireless network with 64 bit encryption instead of the now-standard 128.  It wouldn't connect no matter what I tried.  Eventually I gave up, questioning the "it just works" mantra that all of the Apple fanboys live by.  I was able to eventually get the WiFi working without any problems once I got into the OS (instead of the cute setup application). <br /><br />It immediately recognized my old Dell, so I started transfering files.  I also downloaded Firefox and Adium, and setup Mail.app to go to my ISP's mail servers.  I'm still in the process of getting my MP3's off from my iPod and onto the MacBook.  Apple doesn't make this part easy, you need to download third-party apps to do it.  I guess it's to discourage illegal copying.  Whatever.  But pulling my MP3 collection off the iPod will be a lot faster than over the network.<br /><br />The Mac is actually a little harder to get used to than I was expecting.  The single mouse button thing really is a bigger deal than you might think... I keep wanting to right-click to get context menus.  I'm also having a hard time adjusting to all my applications sharing one menu bar.  The process for installing software was a little shocking at first, too.  You basically download a .dmg file, and clicking it opens this window with a single (or sometimes, more than one) icon which you drag into your Applications folder.  That's it.  You just click that icon to run the program.  I'm also having a difficult time adjusting to the lack of Home and End keys on the keyboard. <br /><br />My son loves the remote.  We were playing some of the stuff from my iTunes library with it... it was kinda neat in a gee-whiz sort of way, don't know if it'll be useful or not, though.<br /><br />I'll try to keep this thing updated to chronicle the trials and tribulations of switching from Windows to Mac.  I know lots of other people have done this, but this will be my little story.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>18</wp:post_id>
<wp:post_date>2007-04-15 18:13:00</wp:post_date>
<wp:post_date_gmt>2007-04-16 00:13:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>ive-switched</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2007_04_01_archive.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>7</wp:comment_id>
<wp:comment_author><![CDATA[Amanda Esposito]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2007-04-24 09:02:00</wp:comment_date>
<wp:comment_date_gmt>2007-04-24 15:02:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Mike,<br/>I hope you are doing well!  I am contacting you this way, because I couldn't find an email address posted on your webpage, which, incidentally, I found on Linkedin.  <br/><br/>In any case, I wanted to speak with you because I have several local Sr. Java opportunities that you look to be an excellent fit for.  Sapphire Technologies is the 3rd largest IT staffing firm in the nation, with an office right here in downtown Portland.  If you or anyone you know might be looking for a new opportunity, please call me.  We offer great referral bonuses, as well!  I look forward to speaking to you!<br/><br/>Sincerely,<br/><br/>Amanda Esposito<br/>Sr. Technical Recruiter<br/>Sapphire Technologies<br/>280 Fore St. Suite 402<br/>Portland, ME 04101<br/>Phone:  (207)523-3409 x 203<br/>Toll free:  (800)679-6544 x 203<br/>Fax:  (207)772-1549<br/>amanda.esposito@sapphire.com<br/>www.Sapphire.com<br/>We offer referral bonuses!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8</wp:comment_id>
<wp:comment_author><![CDATA[Eric Holsinger]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2007-05-23 13:49:00</wp:comment_date>
<wp:comment_date_gmt>2007-05-23 19:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Mike, you've got to listen to Jonathon Coulton's demo song, A Laptop Like You. You can listen to it for free on Jonathon's site, http://www.jonathancoulton.com/lyrics/a-laptop-like-you-demo]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>It &quot;Just Works&quot; my A%#!</title>
<link>http://mikedesjardins.us/wordpress/2007/04/it-just-works-my-a/</link>
<pubDate>Thu, 19 Apr 2007 00:48:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2007/04/it-just-works-my-a/</guid>
<description></description>
<content:encoded><![CDATA[High winds in southern Maine caused massive power outages, which kept me from playing with my new Mac for a couple of days.  I decided I needed to print stuff, so that would be the next task.<br /><br />So I have this crappy old Belkin "Wireless" print server - I put that in quotes, because the thing has never functioned wirelessly.  I  eventually ended up giving up entirely and relying on the thing's ethernet port.  I had planned on limping along with the old thing with the new laptop.  Imagine my surprise when I discovered that my old driver CD did not have any Mac support.  And it's not some standard, simple thing that a generic driver would work for.  This piece of art actually somehow pretends to be a USB port on the local machine, and the traffic is intercepted and somehow routed to the print server to get to the printer.  I.e., it's a hack that will never work for my Mac.<br /><br />So I figured, what the hell, I've already spent way too much on this laptop anyway, I might as well go whole-hog and buy Airport Extreme!  Which is what I did.<br /><br />But the HP-supplied drivers for my Photosmart 7350 could not find the printer.  I went to the printer tool, and the printer was not showing up on "bonjour" (Apple's cutesy name for wireless device discovery, I guess) like it was supposed to. <br /><br />I don't know what happened, I rebooted the Airport Extreme thingy a couple of times, and somehow managed to get it to work with an alternate driver (there was no driver for Photosmart 7350 on the list in the printer setup utility). <br /><br />Ironically, I actually got it to work with windows <span style="font-style: italic;">easier</span>!  The Windows-based bonjour utility actually found the printer and set it up on the first try.<br /><br />I still like my Mac and all, but I think the "just works" mantra is probably a myth. <br /><br />As an aside, there is no company that devotes as much attention to packaging as Apple.  They could teach seminars on packaging based entirely on Apple.  The airport's white box with its solitary, stark LED is sexy, but <span style="font-style: italic;">so is the box that it came in</span>.  This always seems to be true with Apple stuff.  The shiny, perfectly creased cellophane that wraps the items is always just a bit more crisp than ordinary cellophane.  The cardboard is placed perfectly for the box contents, with simple text "Designed by Apple in California" inside.  I once bought replacement ear pucks for my iPod and was amazed at the detail in the packaging. <br /><br />I'm sure it's intentional, but as far as creating an experience that exudes "high end" computing is concerned, Apple's packaging "just works."]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>78</wp:post_id>
<wp:post_date>2007-04-18 19:48:00</wp:post_date>
<wp:post_date_gmt>2007-04-19 00:48:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>it-just-works-my-a</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2007/04/it-just-works-my.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Latest news on the Mac</title>
<link>http://mikedesjardins.us/wordpress/2007/04/latest-news-on-the-mac/</link>
<pubDate>Tue, 24 Apr 2007 12:17:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2007/04/latest-news-on-the-mac/</guid>
<description></description>
<content:encoded><![CDATA[So, I guess I have two things to report...<br /><br />1.) I have an old Windows 2000 machine in our office.  I use it basically as a glorified terminal emulator to work.  It has a VPN client and a Remote Desktop client, and that's about all it's capable of running.  I do like to have a printer hooked up to it, though.  Well, the airport extreme didn't "just work" with it out of the box.  The airport extreme is different than other wireless routers I've had.  There's no goofy web interface to configure it, and there's little visibility into what it's actually doing.  You need to use Apple's client to do much of anything with it.  So you can imagine my disappointment when I inserted the airport extreme CD into my old Windows 2000 box, and got a sad little dialog window stating that I needed to have Windows XP for it to work.  Fortunately, I found <a href="http://tech.ifelix.net/1006.html">this website</a> that walked me through how to set it up manually.  After following the steps on that page, things worked great.<br /><br />2.) I find myself holding down the Control Key and clicking, instead of right-clicking, when I'm at work on my windows machine. <br /><br />From my recent blog rants, you might thing that I don't like the MacBook.  In fact, it's not true at all.  I <span style="font-style: italic;">love</span> the machine.  The interface and the hardware is gorgeous, and the software that is on it works perfectly.  OS X totally rocks.  But it seems like Macs are burdened with the  same interoperability problems that Windows machines have.  If anything, it's a little bit worse for the Macs.  I guess I'm a little disappointed by that, but I probably shouldn't have been naive enough to think that all of those problems would disappear when I upgraded.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>79</wp:post_id>
<wp:post_date>2007-04-24 07:17:00</wp:post_date>
<wp:post_date_gmt>2007-04-24 12:17:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>latest-news-on-the-mac</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2007/04/latest-news-on-mac.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>41</wp:comment_id>
<wp:comment_author><![CDATA[Amanda Esposito]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2007-04-24 10:02:00</wp:comment_date>
<wp:comment_date_gmt>2007-04-24 15:02:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Mike,<br/>I hope you are doing well!  I am contacting you this way, because I couldn't find an email address posted on your webpage, which, incidentally, I found on Linkedin.  <br/><br/>In any case, I wanted to speak with you because I have several local Sr. Java opportunities that you look to be an excellent fit for.  Sapphire Technologies is the 3rd largest IT staffing firm in the nation, with an office right here in downtown Portland.  If you or anyone you know might be looking for a new opportunity, please call me.  We offer great referral bonuses, as well!  I look forward to speaking to you!<br/><br/>Sincerely,<br/><br/>Amanda Esposito<br/>Sr. Technical Recruiter<br/>Sapphire Technologies<br/>280 Fore St. Suite 402<br/>Portland, ME 04101<br/>Phone:  (207)523-3409 x 203<br/>Toll free:  (800)679-6544 x 203<br/>Fax:  (207)772-1549<br/>amanda.esposito@sapphire.com<br/>www.Sapphire.com<br/>We offer referral bonuses!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>RESTful services on FTP?</title>
<link>http://mikedesjardins.us/wordpress/2007/04/restful-services-on-ftp/</link>
<pubDate>Tue, 24 Apr 2007 22:19:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2007/04/restful-services-on-ftp/</guid>
<description></description>
<content:encoded><![CDATA[I've been reading and thinking a lot about REST lately.  There's a good high-level intro to REST <a href="http://www.xfront.com/REST-Web-Services.html">here</a>, <a href="http://webservices.xml.com/pub/a/ws/2002/02/06/rest.html">here</a>, and (of course) <a href="http://en.wikipedia.org/wiki/Representational_State_Transfer">here</a>.  I suppose part of my interest in it stems from my recent projects at work.  I was part of a team that exposed a bunch of our product's functionality as a brand-new SOAP API.  What struck me was how complicated it all is.  It's <span style="font-style: italic;">supposed</span> to be a simple way to use standardized formats to enable an RPCs across and among disparate technologies, and for the most part, it delivers (Idiosyncrasies like getting a .Net SOAP client to pass dates to a Java SOAP servers, and vice versa, in different timezones, with null dates, <a href="http://www.thescripts.com/forum/thread429453.html">notwithstanding</a>).  But the steps involved in creating the service, exposing it, generating the WSDL, embedding that WSDL in the deployed war file, then getting the clients to generate stubs from those WSDLs and making it all work... well, it's cumbersome.  More cumbersome than it oughtta be.  Full disclosure - my only exposure to creating SOAP web services is through <a href="http://ws.apache.org/axis/">Apache Axis</a>.  I've heard that CodeHaus's <a href="http://xfire.codehaus.org/">XFire</a> and even .Net are easier to work with.<br /><br />So reading about RESTful services was like a breath of fresh air.  Now, every article I've ever read says that REST does not necessarily need to use HTTP as its transport protocol, but then they invariably proceed to discuss how HTTP's GET, POST, PUT, and DELETE commands map really nicely to the ubiquitous CRUD database operations, and explain how to implement REST on HTTP.  But I wonder if it wouldn't make just as much sense to implement a RESTful service on FTP.  Why not?  The "resources" in both cases are basically file pointers.  You could do get, put, and delete, and navigate through the hierarchy of resources with cwd.  For transferring large files, the FTP protocol might actually be <span style="font-style: italic;">better</span> suited for the task.  So, e.g., let's say you have a DSS application where you're transferring large batches of data to a data warehouse from an OLTP database.  Why wouldn't this be a perfect situation for creating a RESTful service over FTP?]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>80</wp:post_id>
<wp:post_date>2007-04-24 17:19:00</wp:post_date>
<wp:post_date_gmt>2007-04-24 22:19:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>restful-services-on-ftp</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2007/04/restful-services-on-ftp.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Reverse-scaling a company</title>
<link>http://mikedesjardins.us/wordpress/2007/05/reverse-scaling-company/</link>
<pubDate>Fri, 18 May 2007 01:31:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2007/05/reverse-scaling-a-company/</guid>
<description></description>
<content:encoded><![CDATA[The company that I work for recently underwent a pretty deep round of layoffs (our newly acquired India office was, not surprisingly, unaffected).  The thing is, even though we reduced our workforce by about 20%, the management structure is more-or-less intact. <br /><br />My company has fairly rigid boundaries between each group.  Group A has a very specific job that entails nothing that Group B does.  The responsibilities are usually very clear-cut, and heaven help the poor soul that unknowingly crosses a boundary into another group's zone of responsibility. <br /><br />So anyway, during our first layoff (the one prior to this one), we were promised by our then-COO that we'd work to become more agile, more nimble.  It was going to be important now that we were smaller... we'd need to wear more hats and think smarter yadda yadda yadda. <br /><br />I've decided now that if you ever hear an executive say things like that, it means that they really have no plan.<br /><br />The problem is that no one is willing to look at the hierarchy that was created in better times, and reduce the layers.  In a small company, you don't have the team-that-works-on-that-side-of-the-building who has so-and-so as their leader that performs role X, and the team-that-works-on-the-other-side-of-the-building who has such-and-such as their leader and performs role Y.  In a large company, people are divided into discrete rank and file that execute their particular team's tasks in the context of a larger company goal.  That structure evolves over time; as it becomes evident that specialization is needed in specific areas of a company's business, a group is formed and a leader is chosen.  It seems like lots of careful thought and practice has gone into how to scale the company as it grows larger, but no one prepares for the prospect of shrinking, and no one is quite sure how to do it.<br /><br />I can think of reasons why this is the case.  Firstly, I've always thought there was sort of a natural equilibrium point for direct-report-to-manager ratio, and that ratio depends on how much time the manager spends doing stuff that the direct reports also do. For example, in my line of work (programming), I'm a manager, but I still spend a lot of time programming.  That means my team has to say small, because otherwise, I wouldn't have enough time to adequately manage them (some might argue that I don't adequately manage them now, and they'd probably have a good case against me).  I think that point is somewhere around a team size of four people.  You can probably get away with up to 6 or 7 if the manager isn't doing any of the same stuff as the direct reports.  And my whole theory probably falls apart if you get up into executive levels, but I'm basing all of this on personal experience and I haven't had the honor of serving in an executive capacity.<br /><br />Anyway, when the company gets "healthy," it seems that the managers get to concentrate solely on managing, which leads to bigger teams with managers that have been out of the day-to-day work for a while.<br /><br />But what happens when the teams go from rather large, to rather small? <br /><br />During the layoff, it seems like you have two choices:<br />- Let go of the people in middle management who have lost most of their technical skills. These people usually have the most seniority, and are the most connected to the people decided who stays and who goes.  So it's more likely that you won't go this route.<br />- Let go of the people with the least seniority, fewest "connections," etc.  Methinks corporations often prefer this one.<br /><br />The problem is that managers haven't done any technical work in a long time, and aren't really as capable of pitching in and helping with the daily grind.  But they're still around.  And the old structure stays in place even though you're supposed to be "leaner" and more "nimble." <br /><br />I don't know how to work out of this conundrum.  I'm curious to find out how my company will pull it off.  I'm not claiming that the company should have laid off all of the middle managers... hell, I *am* one of those!  But it's very hard to take an organization that has built itself up over time and de-construct it, reversing time and returning it to the smaller group it once was.  I don't even know if it's possible.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>82</wp:post_id>
<wp:post_date>2007-05-17 20:31:00</wp:post_date>
<wp:post_date_gmt>2007-05-18 01:31:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>reverse-scaling-company</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860866</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2007/05/reverse-scaling-company.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>First Week on the New Job</title>
<link>http://mikedesjardins.us/wordpress/2007/06/first-week-on-the-new-job-2/</link>
<pubDate>Sun, 17 Jun 2007 01:14:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2007/06/first-week-on-the-new-job-2/</guid>
<description></description>
<content:encoded><![CDATA[I started a new job this week.  After over seven years with my last job (with two different companies), I've made the leap.  It was quite difficult for me - I feel like I invested a lot of myself into the product that we were producing at my last gig.  Perhaps that's a bad thing.  Learning to separate myself from the product that I generate has always been difficult for me. <br /><br />One might think that it's a good thing to be emotionally connected to what you create at work.  That's how the good artists and craftsmen feel, isn't it?  But programmers aren't really artists.  Appreciating and analyzing code requires a certain level of objectivity, free from personal biases.  This is particularly true when others are reviewing your own code. <br /><br />On the other hand, many of the best programmers I've known seem to think of themselves more as artisans or craftsmen than scientists or technicians.  An elegant algorithm or piece of code has a certain <span style="font-style: italic;">je ne se quois</span> that an experienced developer will instantly recognize.  Is it art?<br /><br />Anyway - I've gotten a little off track.  I've switched jobs.  And I'm now immersing myself in something that other people have created and (from what I can tell) are pretty attached to.  It's hard not to feel like I'm a bit of an outsider.  I'm sure that will go away with time.  The other artists have to objectively evaluate my work first.   :)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>83</wp:post_id>
<wp:post_date>2007-06-16 20:14:00</wp:post_date>
<wp:post_date_gmt>2007-06-17 01:14:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>first-week-on-the-new-job-2</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2007/06/first-week-on-new-job.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Bring Back the Applet!</title>
<link>http://mikedesjardins.us/wordpress/2007/07/bring-back-applet/</link>
<pubDate>Wed, 18 Jul 2007 18:24:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=21</guid>
<description></description>
<content:encoded><![CDATA[In my current job, I've taken the plunge into Java Web UI development.  Before this, I did middle-tier web servicy stuff, so this is somewhat new for me.  We are using the <a href="http://mc4j.org/confluence/display/stripes/Home">Stripes</a> framework.  The only other framework I've had any exposure to is <a href="http://struts.apache.org/">Jakarta Struts</a>, and I've gotta say that I like working with Stripes <span style="font-weight: bold;">a whole lot more</span>.  But that's a topic for another post...<br /><br />Anyway, now that I've actually gotten some front-end UI stuff under my belt, it strikes me just how terrible of a medium the web is for creating applications.  What on earth are we all thinking?  It seems like each web framework, and indeed the whole servlet/application server paradigm, are one giant hack to work around the fact that the web's client/server topology is ill-equipped to handle the type of interaction that the users are demanding.<br /><br />For example:<br /><ul><li>How many lines of code have been dedicated to maintaining session state?  </li><li>How much work and effort continues to be invested in technologies like AJAX and DHTML to make web pages feel more dynamic?  For that matter, how many web sites resort to using something like Flash to achieve these effects?<br /></li><li>How many lines of Javascript exist for the sole purpose of cross-browser incompatibility?</li><li>How much work does it take to create and maintain a framework like Stripes (or Tapestry, or Webwork, or whatever)?  These frameworks seem to exist as an attempt to provide and abstraction, allowing developers to work in a more familiar, intuitive, "event-driven" environment than the submission-driven web environment.</li><li>All of these frameworks promise to separate the "HTML designer" from the "programmer" (especially frameworks like Tapestry).  The theory is that more aesthetically-minded designers can focus on their jobs, while the grunt-work developers can concentrate on the mundane business logic.  But does that <span style="font-style: italic;">ever</span> really happen in practice?  Perhaps it does, but I've never seen it (maybe it's just the nature of the kind of work with which I've been involved).  Making an application that actually does anything of consequence almost always causes leakage between the presentation and business layers.</li></ul>I've understood that these things were problems for a while now, but I never really understood the magnitude of it until I got my hands dirty, and actually began developing a real web-based application for work.  I feel like I have an understanding of <span style="font-style: italic;">how</span> it all went wrong.  Browsers became the ubiquitous presentation client-of-choice in the 90's.  The internet's popularity exploded, IE was installed on everyone's desktop, and people pushed the technology to its limits as the user-base broadened and user's needs were identified.<br /><br />I remember when Applets came on the scene in the mid-90's.  I was one of the early adopters... I downloaded Sun's pre-alpha "HotJava" browser, and later the beta version of Java with Netscape 2.0.  Back then, applets suffered from a lot of drawbacks:<br /><ol><li>You had to download the Java plugin separately.</li><li>Programs started up SLOWLY as they were downloaded over your 14.4kbps dial-up connection and the JVM was launched.</li><li>The AWT was a bear to work with, and the output was pretty darned ugly</li></ol>Applets ended up being used for stupid stuff like animated stock tickers.  Eventually Microsoft made its own incompatible JVM, then stopped shipping it altogether, and the rest is history.<br /><br />It's really too bad.  A lot of the items above have been addressed.  Java WebStart can push a JVM to the user so that the download of the JVM is simple (admittedly, this applies more to applications than applets - but I still don't think that this is a reasonable barrier.  People download flash plugins all the time!).  Broadband is very prevalent today.  UI development has come a long way since the AWT in 1995.<br /><br />Swing applications already follow a natural, intuitive, event-driven UI model.  The controls are object oriented and have a familiar appearance.  The applications are stateful.  The JVM behaves the same way in any browser.<br /><br />It's a shame that we can't reduce the browser as a delivery mechanism for applets, instead of insisting on shoehorning interactive AJAX/DHTML/Flash applications into web pages that seem better suited to serving their original purpose - static content.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>21</wp:post_id>
<wp:post_date>2007-07-18 13:24:00</wp:post_date>
<wp:post_date_gmt>2007-07-18 18:24:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>bring-back-applet</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860819</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2007_07_01_archive.html</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Tech Projects that I wish I had time for</title>
<link>http://mikedesjardins.us/wordpress/2007/07/tech-projects-that-i-wish-i-had-time/</link>
<pubDate>Thu, 26 Jul 2007 12:36:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2007/07/tech-projects-that-i-wish-i-had-time-for/</guid>
<description></description>
<content:encoded><![CDATA[<ul><li>Re-doing my personal website.  Again.<br /></li><li>Finding a better way to present my personal photos on my website.</li><li>Figuring out what I'm doing with this blog - need a vision for this, not just mindless blather to myself.</li><li>Creating a website for Indie Web Design work.</li><li>Indie Web Design work.</li><li>Prototyping an online e-mail system with a spam-filter idea that I have.</li><li>Creating a new Hibernate-Pluggable second-level Cache that takes advantage of ghost caching and other exotic caching algorithms.</li><li>Creating a hot-switchable cache statistic generator that sits between Hibernate and your actual second-level cache.<br /></li><li>A business plan for a wireless postpaid billing provider.</li><li>Creating a clock and/or weather applet for Avant Window Navigator on Linux.  Mail notification that works w/ Evolution and/or Exchange would be nice, too.<br /></li><li>Documenting some Stripes examples for my blog.</li><li>Creating a Stripes "component" for a generic paginating grid.</li><li>Learning more JavaScript.</li><li>Establishing a corporate entity for potential future contracting work.</li><li>Creating a Firefox plugin that continuously reloads a page until it's available for use with web development.<br /></li><li>Developing a better Subversion standalone GUI client, perhaps in Java.</li><li>Developing a better standalone log reading GUI (like Apache Chainsaw, but better).<br /></li></ul>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>85</wp:post_id>
<wp:post_date>2007-07-26 07:36:00</wp:post_date>
<wp:post_date_gmt>2007-07-26 12:36:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>tech-projects-that-i-wish-i-had-time</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860842</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2007/07/tech-projects-that-i-wish-i-had-time.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Applets for AWN</title>
<link>http://mikedesjardins.us/wordpress/2007/10/applets-for-awn/</link>
<pubDate>Wed, 03 Oct 2007 16:12:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[avant]]></category>

		<category domain="category" nicename="avant"><![CDATA[avant]]></category>

		<category><![CDATA[awn]]></category>

		<category domain="category" nicename="awn"><![CDATA[awn]]></category>

		<category><![CDATA[python]]></category>

		<category domain="category" nicename="python"><![CDATA[python]]></category>

		<category><![CDATA[weather]]></category>

		<category domain="category" nicename="weather"><![CDATA[weather]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=22</guid>
<description></description>
<content:encoded><![CDATA[I use Linux on the desktop at work. As a Mac owner, I was frustrated by the lack of a usable Dock, until I stumbled across a project called the <a href="http://wiki.awn-project.org/">Avant Window Navigator</a>.  Not only is it a cool dock, but it comes with oodles of eye-candy, which I'm a sucker for.<br /><br />Here's a screenshot of my dock:<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://www.dragonflymarsh.com/blog/uploaded_images/Screenshot-761483.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://www.dragonflymarsh.com/blog/uploaded_images/Screenshot-761480.png" alt="" border="0" /></a>You hear a lot about open source developers who got involved because they needed to "scratch an itch."  I happen to do web development in Java, and I had come to rely on my Gnome CPU Meter applet to tell me when Tomcat had finished deploying (there was always a spike while it was deploying a war file, and then a dropoff when it was finished).  I didn't have that in AWN.  Fortunately, you can make applets for it.<br /><br />So the first applet I created, after a "Hello World" applet and a clock, was a C-based applet called CPU Meter (incidentally, my "Hello World" applet is now part of the awn-extras package).  For the CPU Meter, I stole some code from the <a href="http://www.blogger.com/img/gl.link.gif">Gnome System Monitor</a>, mashed it into my Hello World applet, read up on the <a href="http://www.cairographics.org/">Cairo Graphics API</a> and <a href="http://library.gnome.org/devel/gtk/2.12/"><span style="text-decoration: underline;">GTK+ API</span></a>, and cobbled together a working CPU load grapher.  Later on, another developer came up with an applet called "AwnTop" (a process listing applet), and he merged my stuff in with his stuff.  The new applet is now called the AWN System Monitor.<br /><br />Next, I decided to create a weather applet.  All of the other developers had started writing their applets in Python, so I figured it was as good time as any to learn Python!  I've gotta say I LOVE Python.  It's JavaScript's simplicity, Shell scripting's ease-of-use, and Perl's power... and it's incredibly easy to read and learn.  Here's a picture of the weather applet in action:<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://www.dragonflymarsh.com/blog/uploaded_images/Screenshot-1-779658.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://www.dragonflymarsh.com/blog/uploaded_images/Screenshot-1-779652.png" alt="" border="0" /></a>Cool, huh?<br /><br />Well, I really didn't intend for this post to be a brag session.  I wanted it to be a how-to develop applets for AWN using Python.  But now I guess I'll leave that for the next post!]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>22</wp:post_id>
<wp:post_date>2007-10-03 10:12:00</wp:post_date>
<wp:post_date_gmt>2007-10-03 16:12:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>applets-for-awn</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2007_10_01_archive.html</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229610770</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>9</wp:comment_id>
<wp:comment_author><![CDATA[Jim]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2007-10-19 05:33:00</wp:comment_date>
<wp:comment_date_gmt>2007-10-19 11:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hey, thanks for writing this response to my article.  Believe it or not, I was going to eventually write a similar article as I too appreciate many things about Ubuntu and miss them when using OS X.  You make some good points here.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Parsing XML with Python and minidom</title>
<link>http://mikedesjardins.us/wordpress/2007/10/parsing-xml-with-python-and-minidom/</link>
<pubDate>Thu, 04 Oct 2007 15:47:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[avant]]></category>

		<category domain="category" nicename="avant"><![CDATA[avant]]></category>

		<category><![CDATA[awn]]></category>

		<category domain="category" nicename="awn"><![CDATA[awn]]></category>

		<category><![CDATA[minidom]]></category>

		<category domain="category" nicename="minidom"><![CDATA[minidom]]></category>

		<category><![CDATA[python]]></category>

		<category domain="category" nicename="python"><![CDATA[python]]></category>

		<category><![CDATA[xml]]></category>

		<category domain="category" nicename="xml"><![CDATA[xml]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2007/10/parsing-xml-with-python-and-minidom/</guid>
<description></description>
<content:encoded><![CDATA[(Continued from my last post)<br />So, the first thing I needed to do when creating my weather applet for Avant Window Navigator was actually parse weather data from a weather source.  After messing around with Google's weather API for a while, I decided to use <a href="http://xoap.weather.com/">weather.com</a>'s web service.  weather.com has a well-documented, straightforward, predictable XML API.  To parse the XML, I chose <a href="http://docs.python.org/lib/module-xml.dom.minidom.html">minidom</a>.  Minidom is a "Lightweight DOM Implementation."  Here's how it works:  Let's say you have an XML document that supplies a pizza menu, at some URL.  Here's the XML:<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://www.dragonflymarsh.com/blog/uploaded_images/pizza-xml-2-706698.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://www.dragonflymarsh.com/blog/uploaded_images/pizza-xml-2-706697.png" alt="" border="0" /></a>In the python script that will be parsing this, you'd want to import the minidom package.  Let's assume that the above XML is served by the URL http://menu.pizzaplace.us, so you'll want to import urllib as well.  The python code to read up the XML Document might look like the following:<br /><br /><span style="font-family:courier new;"><span style="font-size:85%;"><br />from xml.dom import minidom<br />import urllib<br />import sys<br />try:<br />&nbsp;usock = urllib.urlopen('http://menu.pizzaplace.us')<br />&nbsp;xmldoc = minidom.parse(usock)<br />&nbsp;usock.close()<br />except:<br />&nbsp;print "Something really bad happened! ", sys.exc_info()[0]<br /></span></span><br /><br />Easy, right? Now we want to get the actual data out of the Pizza Menu.  Everything in your DOM tree is a Node.  This includes text between element tags.  In fact, in minidom, the whitespace between strings of text is a node, too (more on that in a minute!).  To fetch nodes, you use the <span style="font-weight: bold;">getElementsByTagName</span> function.  This function returns a List of nodes with matching element tag names.  Another handy function is <span style="font-weight: bold;">getAttribute</span>. As you might expect, it returns the value for an attribute on a particular element. <br /><br />Let's say we want to iterate through all of the pizzas on the pizza-menu, printing the type of pizza.  That code would look like this:<br /><br /><span style="font-family:courier new;"><span style="font-size:85%;"><br />from xml.dom import minidom<br />import urllib<br />try:<br />&nbsp;usock = urllib.urlopen('http://menu.pizzaplace.us')<br />&nbsp;xmldoc = minidom.parse(usock)<br />&nbsp;usock.close()<br /><span style="font-weight: bold;">&nbsp;pizza_list = xmldoc.getElementsByTagName('pizza')</span><br /><span style="font-weight: bold;">&nbsp;for pizza_element in pizza_list:</span><br /><span style="font-weight: bold;">&nbsp;&nbsp;pizza_type = pizza_element.getAttribute('type')</span><br /><span style="font-weight: bold;">&nbsp;&nbsp;print 'Pizza Type: %s' % pizza_type</span><br />except:<br />&nbsp;print "Something really bad happened! ", sys.exc_info()[0]<br /></span></span><br /><br />Next, let's pretend that "heart-attack-special" pizza sounds really appetizing, and we want to estimate just how much our cholesterol count will spike if we have a slice.  We probably want to iterate over the toppings on that pizza to perform that evaluation.  To that end, we will hunt for the pizza with the type "heart-attack-special", grab that node, then iterate over the topping sub-nodes.  Here's how we would do that:<br /><br /><span style="font-family:courier new;"><span style="font-size:85%;"><br />from xml.dom import minidom<br />import urllib<br />try:<br />&nbsp;usock = urllib.urlopen('http://menu.pizzaplace.us')<br />&nbsp;xmldoc = minidom.parse(usock)<br />&nbsp;usock.close()<br />&nbsp;pizza_list = xmldoc.getElementsByTagName('pizza')<br />&nbsp;for pizza_element in pizza_list:<br />&nbsp;&nbsp;pizza_type = pizza_element.getAttribute('type')<br />&nbsp;&nbsp;print 'Pizza Type: %s' % pizza_type<br /><span style="font-weight: bold;">&nbsp;&nbsp;if pizza_type == 'heart-attack-special':</span><br /><span style="font-weight: bold;">&nbsp;&nbsp;&nbsp;topping_list = pizza_element.getElementsByName('topping')</span><br /><span style="font-weight: bold;">&nbsp;&nbsp;&nbsp;for topping_element in topping_list:</span><br /><span style="font-weight: bold;">&nbsp;&nbsp;&nbsp;&nbsp;# (do something here)</span><br />except:<br />&nbsp;print "Something really bad happened! ", sys.exc_info()[0]<br /></span></span><br /><br />As you can see, the pizza_element is a node like any other node, so you can call <span style="font-weight: bold;">getElementsByName</span> on it to get any child nodes of this pizza element.  The toppings  (pepperoni, sausage, hamburg, canadian bacon, and ham) are themselves child nodes of their respective elements.  Each node has a nodeType property which describes the nature of that node.  The nodeTypes are TEXT_NODE, ELEMENT_NODE, ATTRIBUTE_NODE, and DOCUMENT_NODE.  Thus, the word "pepperoni" is a child node of the first topping node, and is of type TEXT_NODE.<br /><br />You might be surprised to learn that the fourth topping node on the heart-attack-special is comprised of <span style="font-style: italic;">three</span> child text nodes.  The text "canadian bacon" has a child with the value bacon, a child with a single character of whitespace, and a child with the value bacon.  This is not usually how we want to access the data in our XML documents; we'd prefer that "canadian bacon" be treated as a single node comprised of one string. <br /><br />To make the data behave the way we expect it to, we can introduce our own simple utility method called <span style="font-weight: bold;">getText</span>.  This function concatenates all child nodes of the supplied node list which are of type TEXT_NODE.  It looks like this:<br /><br /><span style="font-size:85%;"><span style="font-family: courier new;"><br />def getText(nodelist):<br />&nbsp;rc = ""<br />&nbsp;for node in nodelist:<br />&nbsp;&nbsp;if node.nodeType == node.TEXT_NODE:<br />&nbsp;&nbsp;&nbsp;rc = rc + node.data<br />&nbsp;return rc<br /></span></span>   <br /><br />To use it, we'd pass it the parent node of the text we're interested in.  Going back to our original example, we can use the getText function to print out each topping on our heart-attack-special pizza:<br /><br /><span style="font-size:85%;"><span style="font-family: courier new;"><br />from xml.dom import minidom<br />import urllib<br />try:<br />&nbsp;usock = urllib.urlopen('http://menu.pizzaplace.us')<br />&nbsp;xmldoc = minidom.parse(usock)<br />&nbsp;usock.close()<br />&nbsp;pizza_list = xmldoc.getElementsByTagName('pizza')<br />&nbsp;for pizza_element in pizza_list:<br />&nbsp;&nbsp;pizza_type = pizza_element.getAttribute('type')<br />&nbsp;&nbsp;print 'Pizza Type: %s' % pizza_type<br />&nbsp;&nbsp;if pizza_type == 'heart-attack-special':<br />&nbsp;&nbsp;&nbsp;topping_list = pizza_element.getElementsByName('topping')<br />&nbsp;&nbsp;&nbsp;for topping_element in topping_list:<br /><span style="font-weight: bold;">&nbsp;&nbsp;&nbsp;&nbsp;topping_text = getText(topping_element)</span><br /><span style="font-weight: bold;">&nbsp;&nbsp;&nbsp;&nbsp;print "  Topping: %s" % topping_text</span><br />except:<br />&nbsp;print "Something really bad happened! ", sys.exc_info()[0]<br /></span></span><br /><br />The XML-parsing portions of the weather applet that I wrote for the Avant Window Navigator aren't much more complicated than this.  You can download the source code for the weather applet <a href="http://www.dragonflymarsh.com/awn/weather-applet-08.tar.gz">here</a>. The parts which parse weather.com's data are in the weather.py script, in the <span style="font-weight: bold;">get_conditions</span> and <span style="font-weight: bold;">get_forecast</span> functions.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>87</wp:post_id>
<wp:post_date>2007-10-04 10:47:00</wp:post_date>
<wp:post_date_gmt>2007-10-04 15:47:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>parsing-xml-with-python-and-minidom</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229610726</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2007/10/parsing-xml-with-python-and-minidom.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Developing Applets for AWN: Drawing the Icon</title>
<link>http://mikedesjardins.us/wordpress/2007/10/developing-applets-for-awn-drawing-icon/</link>
<pubDate>Mon, 08 Oct 2007 14:45:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[applet]]></category>

		<category domain="category" nicename="applet"><![CDATA[applet]]></category>

		<category><![CDATA[avant]]></category>

		<category domain="category" nicename="avant"><![CDATA[avant]]></category>

		<category><![CDATA[awn]]></category>

		<category domain="category" nicename="awn"><![CDATA[awn]]></category>

		<category><![CDATA[cairo]]></category>

		<category domain="category" nicename="cairo"><![CDATA[cairo]]></category>

		<category><![CDATA[python]]></category>

		<category domain="category" nicename="python"><![CDATA[python]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2007/10/developing-applets-for-awn-drawing-the-icon/</guid>
<description></description>
<content:encoded><![CDATA[(Continued from previous two posts)<br />If you're familiar with the Avant Window Navigator, then you know that a fair amount of the project revolves around eye candy and visual effects.  Making an applet that is consistent with the user's expectations with respect to visual effects (e.g., reflection, bouncing, rotating, etc.) is very important.  Fortunately, Neil and Co. have made this quite straightforward.    By simply sub-classing the awn.AppletSimple class, your applet will inherit all of the special effects that it should. <br /><br />Unfortunately, there's one small trick you need to work around.  If your applet is so simple that it just needs a single, static icon, then sub-classing awn.AppletSimple, followed by a call to set_icon, works great.  It gets more difficult if you need to draw dynamic content in the area usually occupied by the icon.<br /><br />The problem is that set_icon (as well as its misunderstood cousin, set_temp_icon) takes a Pixbuf as its input parameter.  However, the drawing framework for doing just about anything, especially loading PNGs, is <a href="http://cairographics.org">cairo</a>.  Cairo has no native support for converting a surface to a Pixbuf.  I discovered a trick for doing this by looking at the source code for the PyClock and BlingSwitcher applets.  Let's say you have a Cairo image surface that you've created from an existing PNG, thusly:<br /><br />
<pre lang="python">
cs = cairo.ImageSurface.create_from_png(iconName)
ct = cairo.Context(cs)
ct.set_source_surface(cs)
ct.paint()
</pre><br />...and you want to get a Pixbuf from that image.  The following function takes the surface, writes it to a PNG that is stored in a string, then uses the Pixbuf loader to load it from that PNG string:<br /><br />
<pre lang="python">
# Stolen from diogodivision's "BlingSwitcher"
def get_pixbuf_from_surface(self, surface):
  sio = StringIO()
  surface.write_to_png(sio)
  sio.seek(0)
  loader = gtk.gdk.PixbufLoader()
  loader.write(sio.getvalue())
  loader.close()
  return loader.get_pixbuf()
</pre><br /><br />Neat, huh?  This is how I manage to display the temperature on the weather applet.  I load up the icon into an ImageSurface, write the text on top of it by calling show_text, call the function above to convert the ImageSurface to a PixBuf, then call set_temp_icon using the new PixBuf.<br /><br />You can see it in action by <a href="http://www.mikedesjardins.us/awn/weather-applet-0.8.tar.gz">downloading the weather applet</a>, and looking in weather.py. The relevant code is in the draw_current_conditions function.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>88</wp:post_id>
<wp:post_date>2007-10-08 09:45:00</wp:post_date>
<wp:post_date_gmt>2007-10-08 14:45:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>developing-applets-for-awn-drawing-icon</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860752</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2007/10/developing-applets-for-awn-drawing-icon.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Ten things I miss when switching from Ubuntu to OSX</title>
<link>http://mikedesjardins.us/wordpress/2007/10/ten-things-i-miss-when-switching-from/</link>
<pubDate>Thu, 18 Oct 2007 11:24:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[applet]]></category>

		<category domain="category" nicename="applet"><![CDATA[applet]]></category>

		<category><![CDATA[mac]]></category>

		<category domain="category" nicename="mac"><![CDATA[mac]]></category>

		<category><![CDATA[osx]]></category>

		<category domain="category" nicename="osx"><![CDATA[osx]]></category>

		<category><![CDATA[ubuntu]]></category>

		<category domain="category" nicename="ubuntu"><![CDATA[ubuntu]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2007/10/ten-things-i-miss-when-switching-from-ubuntu-to-osx/</guid>
<description></description>
<content:encoded><![CDATA[I saw <a href="http://www.starryhope.com/linux/2007/switching-from-os-x-to-ubuntu-ten-things-i-miss/">this article</a> on Digg the other day, and I decided to write a response to it.  I use both OSX (at home) and Ubuntu (Feisty, at work), and believe it or not, there are some things I like better about Ubuntu.  This is all anecdotal, and I don't profess to be an expert on either environment, so don't be surprised if I'm just flat-out wrong about some of these things.  Yes, I've used other distros (including Slackware, Fedora, RedHat, Mandrake, and Gentoo), but Ubuntu is the one with which I'm most familiar right now.<br /><ol><li><span style="font-weight: bold;">Java Support</span> - I'm a Java developer by trade.  Ever try to download the Java 6 SDK for the Mac?  You can't.  Java 5 is fine for most things, but we're using Java 6 at work.</li><li><span style="font-weight: bold;">VPN Client (and other corporate IT software) availability</span> - This is probably specific to me.  We use a SonicWall VPN where I work.  There's no OSX client available, but you can connect via Linux.  Even though this problem is specific to my situation, the general lack of software is still occasionally a problem for OSX.  Of course, I can pay for a commercial solution like <a href="http://www.equinux.com/us/products/vpntracker/index.html">this one</a>, but it kinda sucks that <span style="font-style: italic;">I</span> have to pay for one, while none of my Windows or Linux using colleagues do.<br /></li><li><span style="font-weight: bold;">Internet Explorer</span> - OK, I know what you're thinking (I usually prefer <a href="http://caminobrowser.org/">Camino</a>).  There is occasionally a site that needs IE.  And, as a web developer, I sometimes need to preview stuff in IE.  With WINE, I can do that fairly seamlessly on my Linux desktop.  With my Mac, I needed to pay for <a href="http://www.parallels.com/">Parallels</a>, then I need to buy a windows license, then I need to run IE in a separate virtual desktop.  Yuck.</li><li><span style="font-weight: bold;">Finder</span> - The OSX Finder just sucks.  Nautilus is better.  Konqueror is better.  Hell, even Thunar is better.  Finder's side pane is virtually useless and isn't customizable.  Navigating by entering a path is awkward.  Renaming requires you to right-click and "view file info." I guess they're fixing it in Leopard.  We'll see.</li><li><span style="font-weight: bold;">Free GTK-based Linux Software Doesn't Run Natively (Yet)</span> - There are several free programs that run natively under the <span style="font-style: italic;">Windows</span> port of GTK (GIMP and Pidgin come to mind), but to run it on OSX, assuming it compiles, you need to run X11.app.  Running X software under X11.app is clumsy, because you don't get the "normal" menu at the top of the screen.  I do some open source development in my free time.  Currently, I'm learning some Python by working primarily on <a href="http://wiki.awn-project.org/index.php?title=Applet_Gallery">applets</a> for the<a href="http://wiki.awn-project.org/index.php?title=Main_Page"> Avant Window Navigator</a>.  I'd love to be able to run my projects on my Mac, but I can't.  I need to boot into Linux to do so.</li><li><span style="font-weight: bold;">Filesystem Layout</span> - When I do get to do UNIXy stuff on my Mac, at the command line, the layout of the filesystem is just bizzare.  There's a Dr. Jekyll/Mr. Hyde thing where Linux Ports go in /opt/local, and native apps go in /Applications.  It's weird.</li><li><span style="font-weight: bold;">Microsoft Office</span> - The OSX version of Office has a bizarre UI.  Just personal preference.  And it hasn't been built for Intel Macs yet, so it runs under Rosetta, which is a little sluggish and makes it slow to start up.  I haven't tried the latest iWork yet, so maybe I don't need it anymore.  I could use previous versions of iWork because I wanted spreadsheets.  I didn't want OpenOffice because it needs X11.app.  I didn't try NeoOffice because I heard that people don't like it... in fairness, I guess I should've tried it out.  However, I already plunked down $125 for the "Student Version" of Office, so I just stick with it even though I don't like it.</li><li><span style="font-weight: bold;">Hardware Interoperability</span> - Don't believe the Mac Fanboys.  In my experience, it doesn't always "just work."  I have an HP printer that was very difficult to get working with my Mac under OSX.  It was virtually plug-and-play when I dual-booted into Linux.  Surprised?  Yeah, me too.<span style="font-weight: bold;"></span></li><li><span style="font-weight: bold;">Customizability </span>- This is both Linux's strength and it's downfall.  In Ubuntu, If I want KDE, I use KDE.  If I want GNOME, I use that.  Maybe I'm minimalist and want XFCE.  Perhaps I'd like a Dock, I use Avant Window Navigator.  If I don't, I can use the panel/kicker/whatever.  I can add lots of eyecandy like wobbly windows with Compiz, or I don't even need to install it.  I can choose among hundreds of "themes" for each environment.  Ubuntu (and other Linux distros) is just more conducive to tweaking. Truth be told, you can use a tool like <a href="http://koingosw.com/products/macpilot.php">Mac Pilot</a> to customize <span style="font-style: italic;">some</span> things, but the fact that I need to download a separate, third-party tool underscores my feeling that the whole OS X environment is generally less friendly to such things.<br /></li><li><span style="font-weight: bold;">The "Apple Tax" and other Misc. Expenses</span> - A recurring theme among all of these bullet-points has been that I need to pay for stuff.  When Leopard comes out, I'll have to plunk down over $100 for the upgrade.  Ubuntu's Gutsy Gibbon will be free.  So far, I've paid for Parallels (with one non-free upgrade), Office, a VPN client, and a raft of other software for my Mac.  I haven't spent one red cent on Linux software yet, and I don't feel guilty about it because I'm contributing back to Open Source by donating some of my own free software. </li></ol>So, there you have it.  Having said all of this, I still <span style="font-style: italic;">love</span>  OSX.  It's polished, it's stable, it's pretty, and it works seamlessly with my iPod and my MacBook Pro (I can't exactly say that for Linux... I <span style="font-style: italic;">did</span> had to <a href="http://ubuntuforums.org/showthread.php?t=198453">dork around w/ Ubuntu a bit</a> to make it work well on my laptop).  There are things I love about <span style="font-style: italic;">both</span> operating systems, so it isn't surprising that there are things that I miss in both operating systems.  As a geek, I consider myself lucky to be able to use both of them!]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>89</wp:post_id>
<wp:post_date>2007-10-18 06:24:00</wp:post_date>
<wp:post_date_gmt>2007-10-18 11:24:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>ten-things-i-miss-when-switching-from</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860792</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2007/10/ten-things-i-miss-when-switching-from.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>43</wp:comment_id>
<wp:comment_author><![CDATA[Jim]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2007-10-19 06:33:00</wp:comment_date>
<wp:comment_date_gmt>2007-10-19 11:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hey, thanks for writing this response to my article.  Believe it or not, I was going to eventually write a similar article as I too appreciate many things about Ubuntu and miss them when using OS X.  You make some good points here.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>44</wp:comment_id>
<wp:comment_author><![CDATA[gus3]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2007-10-21 11:15:00</wp:comment_date>
<wp:comment_date_gmt>2007-10-21 16:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The odd file placement for Mac apps is due to their switch to the NextStep framework. NS apps on any *nix platform get the same treatment. (There's <a HREF="http://gus3.typepad.com/i_am_therefore_i_think/2007/09/old-war-new-gen.html" REL="nofollow">an interesting bit of history</a> behind this, too.)<br/><br/>As for the H-P print support, the commitment from H-P gets the credit for how well it works on Linux. My mother (who runs Fedora Core 3) got an H-P print/scan/copier, on my advice, so it fell to me to make it work. I studied the HPLIP package on a Slackware 12 box, but the new HPLIP software wasn't around when FC3 was released. I got the source code, built it on FC3, and installed it, and now the hardware "just works." In fact, the scanning works so well, I "borrowed" it to scan in a whole album of college pictures a week later. Big kudos to Hewlett-Packard for their commitment to the Linux community!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>45</wp:comment_id>
<wp:comment_author><![CDATA[Aantn]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2007-11-14 11:25:00</wp:comment_date>
<wp:comment_date_gmt>2007-11-14 16:25:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Interesting. I switched from OS X to Ubuntu a few months ago. I've found that although Ubuntu doesn't "just work" its a much better operating system than OS X if you're willing to put in the time to customize it.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>L10N with Python in Avant Window Navigator Applets</title>
<link>http://mikedesjardins.us/wordpress/2007/10/l10n-with-python-in-avant-window/</link>
<pubDate>Tue, 30 Oct 2007 18:23:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[avant]]></category>

		<category domain="category" nicename="avant"><![CDATA[avant]]></category>

		<category><![CDATA[awn]]></category>

		<category domain="category" nicename="awn"><![CDATA[awn]]></category>

		<category><![CDATA[i18n]]></category>

		<category domain="category" nicename="i18n"><![CDATA[i18n]]></category>

		<category><![CDATA[l10n]]></category>

		<category domain="category" nicename="l10n"><![CDATA[l10n]]></category>

		<category><![CDATA[python]]></category>

		<category domain="category" nicename="python"><![CDATA[python]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2007/10/l10n-with-python-in-avant-window-navigator-applets/</guid>
<description></description>
<content:encoded><![CDATA[<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://www.dragonflymarsh.com/blog/uploaded_images/file-788164.png"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer;" src="http://www.dragonflymarsh.com/blog/uploaded_images/file-788161.png" alt="" border="0" /></a>It's been a while since I blogged about my latest "hobby" (oh, how my wife would cringe), writing Python-based applets for the <a href="http://wiki.awn-project.org/">Avant Window Navigator</a>.  I've been spending a lot of time working on my <a href="http://wiki.awn-project.org/index.php?title=Clock/Calendar_Applet">clock/calendar applet</a> lately, but today I'm going to go back to my <a href="http://wiki.awn-project.org/index.php?title=Weather_Applet">weather applet</a> because it's more interesting to write about.<br /><br />A while ago, I decided it was time to add some alternate (that is, non-English) language support to the applet.  The de-facto standard tool to accomplish this is the Python variant of GNU's <a href="http://docs.python.org/lib/module-gettext.html">gettext</a>.  I found a couple of resources that helped guide me through this.  The first was the <a href="http://wiki.laptop.org/go/Python_i18n">wiki</a> for the "one laptop per child" project, which does a lot of L10N in Python.    The second was an excellent <a href="http://http//www.learningpython.com/2006/12/03/translating-your-pythonpygtk-application/">post</a> in the "Learning Python" blog (the author doesn't give his/her name in the "<a href="http://www.learningpython.com/who-am-i/">Who am I</a>" section, otherwise I'd give props).  And of course, there's always the official Python <a href="http://docs.python.org/lib/node732.html">library documentation</a>, too.<br /><br />The first step is to import the gettext libraries into your Python code, and do some setup work, thusly:<br />
<pre lang="python">
APP="awn-weather-applet"
DIR=os.path.dirname (__file__) + '/locale'
import locale
import gettext
#locale.setlocale(locale.LC_ALL, '')
gettext.bindtextdomain(APP, DIR)
gettext.textdomain(APP)
_ = gettext.gettext</pre>
<br /><br />(Note: Made an edit to the above source code on Nov 16 2007 - evidently, the DIR parameter needs the full path to work properly)<br /><br />Now, here's what we're actually doing.  The call to <span style="font-family:courier new;">bindtextdomain</span> is <span style="font-style: italic;">binding</span> the <span style="font-weight: bold;">awn-weather-applet</span> domain to the <span style="font-weight: bold;">locale</span> subdirectory. When the applet is deployed, it has a locale directory right underneath the main script, weather.py.  The directory argument of <span style="font-family:courier new;">bindtextdomain</span> is relative, so we're pointing gettext at that directory.  We're basically telling gettext to look in the locale subdirectory for files named <span class="file"><var>language</var>/LC_MESSAGES/<var></var>awn-weather-applet.mo, where language is the two-letter language code defined by the environment (more on that later).<br /><br />It should be noted that, customarily, locale files are stored in a default location which is a more global place in the filesystem, e.g. /usr/share/locale/<span style="font-style: italic;">language</span>/LC_MESSAGES.  If you don't supply a directory to the <span style="font-family:courier new;">bindtextdomain</span> method call, gettext will use the default directory for the system.  I opted <span style="font-style: italic;">not</span> to use the default filesystem location because I wanted non-superusers to be able to easily use language files that I supply with the applet, using the standard AWN applet installation mechanism.  Requiring the user to put .mo files in the /usr/share directory tree isn't an option.<br /><br />The call to <span style="font-family:courier new;">textdomain</span> sets the global domain to awn-weather-applet.  Essentially we're telling gettext that all future calls into gettext should use the </span><span class="file">awn-weather-applet domain as its source for translations.<br /><br />Lastly, the line that reads <span style="font-family:courier new;">_ = gettext.gettext()</span> defines a convenient alias that we will use to identify strings in our code that need translation.  If you're familiar with i18n of C applications, this will look quite familiar; in the C implementation, an identically named macro is used for the same purpose.<br /><br />The next step is to read through the code to identify the literal strings that will be translated.  Generally, any UI element that a user will see is a candidate for translation.  Things like log and console output are not as important.  When we find a candidate string, we wrap it in _( ).  For example, this:<br /><pre lang="python">self.dialog.set_title("Forecast")</pre><br />becomes<br /></span><pre lang="python">self.dialog.set_title(_("Forecast"))</pre><br />Because of the alias at the top of the source file, what we're <span style="font-style: italic;">really</span> doing is this:<br />
<pre lang="python">
self.dialog.set_title(gettext.gettext("Forecast"))
</pre><br />It's a good thing we have the shorthand version!<br /><br />As I alluded to earlier, gettext does its magic by reading files that ends in an .mo extension.  At runtime, it reads the string that's passed into it (in the above example, "Forecast"), then looks up that string in the proper .mo file to see if a translation is available.  If it finds an entry, it returns the translated string, otherwise it just returns the string that was passed into it.  So our next task is to create the .mo files.<br /><br />Creating .mo files is a three step process.  First, we need to run a tool that extracts all of the strings to be translated into a usable text file that a translator can edit.  The tool to do this is called xgettext.  The command line to run looks like this:<br /><span style="font-family:monospace;"><br /></span>
<pre>
xgettext --language=Python --keyword=_ --output=awn-weather-applet.pot *.py</pre><br /><br />This command generates an output file named awn-weather-applet.pot which acts as a template for translators to do their translation.  The file has a bunch of lines that look like this:<br /><br />
<pre>
#: weather.py:127
msgid "Forecast"
msgstr ""
</pre><br /><br />So, let's say we want to make a Spanish translation of the weather applet.  First, we'd make a copy of this file, and name it something sensible like awn-weather-applet.po (note, you can also use the msginit tool, which does a few other housekeeping things for you like fill in the e-mail address).  We'd find all the lines that start with msgid, translate it, and put the result in the following line's msgstr, like this:<br /><br />
<pre>
#: weather.py:127
msgid "Forecast"
msgstr "Pronóstico"
</pre><br /><br />Next, we need to "compile" the awn-weather-applet.po file into an awn-weather-applet.mo file, so that it's usable by gettext at runtime.  This is done using the msgfmt command, like this:<br /><br />msgfmt awn-weather-applet.po -o awn-weather-applet.mo<br /><br />That's it!  Now all you need to do is ensure that the awn-weather-applet.mo file ends up in the (base of weather applet)/locale/es/LC_MESSAGES directory, and Spanish translations work!<br /><span class="file"><span style="font-size:85%;"><span style="font-family:courier new;"></span></span></span>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>90</wp:post_id>
<wp:post_date>2007-10-30 13:23:00</wp:post_date>
<wp:post_date_gmt>2007-10-30 18:23:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>l10n-with-python-in-avant-window</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860775</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2007/10/l10n-with-python-in-avant-window.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Last Day of the Month w/ JavaScript</title>
<link>http://mikedesjardins.us/wordpress/2007/11/last-day-of-month-w-javascript/</link>
<pubDate>Tue, 13 Nov 2007 16:43:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[javascript]]></category>

		<category domain="category" nicename="javascript"><![CDATA[javascript]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=23</guid>
<description></description>
<content:encoded><![CDATA[I recently had to calculate the last day of the month using JavaScript.  When I Google'd for a way to do this (I had an idea for a solution already, but I wanted to look online first), I was pretty surprised by how much work some of the proposed solutions were, like <a href="http://javascript.about.com/library/bllday.htm">this</a> and (even worse) <a href="http://www.irt.org/script/1568.htm">this</a>.  One trick I learned from SQL programming is that it doesn't need to be that complicated.  All you need to do is jump to the next month, go to the first day of that month, then subtract one day.  Here's the code:<br /><br /><span style="font-size:85%;"><span style="font-family:courier new;">  var now = new Date();</span><br /><span style="font-family:courier new;">  now.setMonth(now.getMonth() + 1);  // rounds back to January if needed (e.g., 13th month).</span><br /><span style="font-family:courier new;">  now.setDate(0);</span>  <span style="font-family:courier new;">// now is now set to the last day of the previous month,<br />                // i.e., the "zeroth" day of the current month = the last day of the previous month.</span><br /><br /></span>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>23</wp:post_id>
<wp:post_date>2007-11-13 11:43:00</wp:post_date>
<wp:post_date_gmt>2007-11-13 16:43:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>last-day-of-month-w-javascript</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2007_11_01_archive.html</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860731</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>10</wp:comment_id>
<wp:comment_author><![CDATA[keppim]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-01-18 16:25:00</wp:comment_date>
<wp:comment_date_gmt>2008-01-18 22:25:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[it's true, great blog.<br/>http://twitter.com/chrisbrogan/statuses/615090642<br/><br/>anyway, thought I should comment that<br/><br/>--<br/>// now.setDate(1);<br/>// now.setDate(now.getDate() - 1);<br/><br/>// is equivalently<br/><br/>now.setDate(0);<br/>// -1 gets you the 2nd to last date, etc.<br/>--<br/><br/>since I was a bit confused there for a moment.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Python and GConf</title>
<link>http://mikedesjardins.us/wordpress/2007/11/python-and-gconf/</link>
<pubDate>Fri, 16 Nov 2007 18:15:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[applet]]></category>

		<category domain="category" nicename="applet"><![CDATA[applet]]></category>

		<category><![CDATA[avant]]></category>

		<category domain="category" nicename="avant"><![CDATA[avant]]></category>

		<category><![CDATA[awn]]></category>

		<category domain="category" nicename="awn"><![CDATA[awn]]></category>

		<category><![CDATA[gconf]]></category>

		<category domain="category" nicename="gconf"><![CDATA[gconf]]></category>

		<category><![CDATA[python]]></category>

		<category domain="category" nicename="python"><![CDATA[python]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2007/11/python-and-gconf/</guid>
<description></description>
<content:encoded><![CDATA[The <a href="http://wiki.awn-project.org/index.php?title=Weather_Applet">weather applet</a> and <a href="http://wiki.awn-project.org/index.php?title=Clock/Calendar_Applet">clock/calendar applet</a> for the <a href="http://www.awn-project.org/">Avant Window Navigator</a> both use <a href="http://www.gnome.org/projects/gconf/">GConf</a> to store their configuration settings.  GConf is part of the GNOME environment on Linux.  It maintains a hierarchical set of configuration data in (key,value) pairs, much like the registry on Windows or the "plist files" on OSX.  One of the nice things about GConf is that you can register your application to receive notifications in a callback function whenever any interesting configuration values change.<br /><br />I noticed that there weren't a lot of tutorials out there on the topic of mixing Python with GConf, so I decided to write one.<br /><br />First, you'll need to import the Python bindings for GConf:<br />
<pre lang="python">
import gconf
</pre><br />Next, you want to create a GConf "client" in your Python app.  You'll probably want to do this in an __init__() function somewhere.  You'll also want to register your application to receive notifications when ever your configuration values change.  The hierarchy of configuration values in GConf follows the familiar slash-separated path notation.  For example, the configuration values for my AWN weather applet are stored in /apps/avant-window-navigator/applets/weather.  So, if I want to register a callback named config_event to be called whenever configuration values on that path are modified, I'd do the following:<br />
<pre lang="python">
self.gconf_client = gconf.client_get_default()
self.gconf_client.notify_add("/apps/avant-window-navigator/applets/weather", self.config_event)
</pre><br /><span style="font-size:100%;">I usually write a generic "get_config" function, and have the callback call get_config.  That way, I can use the same configuration code when I initialize.  The config callback then looks simple... something like this:<br />
<pre lang="python">
def config_event(self, gconf_client, *args, **kwargs):
  self.get_config()
</pre><span style="font-size:100%;">The kwargs parameter gives you a list of parameters that changed.  You can fine-tune your configuration code based on this, but I usually just ignore it and re-read everything because I don't usually have very many parameters.<br /><br />GConf provides functions for reading your parameters.  They look like this:</span><br />
<pre lang="python">
foo = self.gconf_client.get_string("/path/to/my/config/data/foo")
bar = self.gconf_client.get_int("/path/to/my/config/data/bar")
baz = self.gconf_client.get_bool("/path/to/my/config/data/baz")
</pre><br /><span style="font-size:100%;">All of the functions except </span><span style=";font-family:courier new;font-size:100%;"  >get_bool</span>return None if the key isn't found.  Oddly, <span style=";font-family:courier new;font-size:100%;"  >get_bool</span> seems to return False if the key isn't found.  In my configuration code, I like to initialize my GConf values when the key isn't found.  So when if my code were to read the "foo" parameter like the above example, it'd actually be coded something like this:</span><br />
<pre lang="python">
foo = self.gconf_client.get_string("/path/to/my/config/foo")
if foo == None:
  self.gconf_client.set_string("/path/to/my/config/foo", "Default Value")
  foo = "Default Value"
</pre><span style="font-size:100%;"><br />And I usually wrap the above idiom in its own function that accepts a key name and a default value.<br /></span><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://www.dragonflymarsh.com/blog/uploaded_images/Screenshot-Configuration-Editor---weather-703851.png"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer; width: 264px; height: 210px;" src="http://mikedesjardins.us/blog/uploaded_images/Screenshot-Configuration-Editor---weather-703844.png" alt="" border="0" /></a><br /><span style="font-size:100%;">Note that you can edit and interact with your GConf settings in realtime using </span><span style="font-size:100%;">the GNOME configuration tool.  If you use Ubuntu, then this utility may be found under the "System Tools" menu.  Editing configuration values in the configuration tool will result in your callback being executed as you might expect.<br /><br />This also makes creating a configuration dialog easy.  The configuration dialog just needs to write its updated values to gconf when the user clicks Apply or OK.  If you've created a callback and generic configuration function, then the application will automatically reconfigure itself after the user applies their modifications!</span>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>92</wp:post_id>
<wp:post_date>2007-11-16 13:15:00</wp:post_date>
<wp:post_date_gmt>2007-11-16 18:15:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>python-and-gconf</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229609954</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2007/11/python-and-gconf.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Build Date on a Tapestry 4 login page using Ant</title>
<link>http://mikedesjardins.us/wordpress/2007/12/build-date-on-a-tapestry-4-login-page/</link>
<pubDate>Thu, 13 Dec 2007 16:35:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[ant]]></category>

		<category domain="category" nicename="ant"><![CDATA[ant]]></category>

		<category><![CDATA[java]]></category>

		<category domain="category" nicename="java"><![CDATA[java]]></category>

		<category><![CDATA[tapestry]]></category>

		<category domain="category" nicename="tapestry"><![CDATA[tapestry]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=24</guid>
<description></description>
<content:encoded><![CDATA[Recently, I had to put a build timestamp onto a login page for a web application I'm developing at work.  The web application is written using Tapestry 4.1, but some of the techniques are equally applicable to other frameworks.  I thought I'd share.<br /><br />First, you need to setup your ant task to grab a timestamp, and put it into your manifest file.  You do so using the tstamp task, like this:<br /><span style="font-size:85%;"> <span style="font-family:courier new;"><br /></span></span><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://www.dragonflymarsh.com/blog/uploaded_images/Screenshot-718923.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://www.dragonflymarsh.com/blog/uploaded_images/Screenshot-718919.png" alt="" border="0" /></a>The tstamp task is taking the current date and time, formatting it as specified by pattern (just as you'd specify it in a <a href="http://java.sun.com/javase/6/docs/api/java/text/SimpleDateFormat.html">SimpleDateFormat</a>) and placing it in the <span style="font-weight: bold;">buildtstamp</span> variable.  The manifest task builds a MANIFEST.MF file which ends up in your deployed web application's META-INF directory.  You'll notice that I'm also putting the name of the user who built the application into the manifest.<br /><br />Next, we need to read the Manifest from our application.  The first screen presented by my Tapestry app is LogOn.java.  First, use <a href="http://hivemind.apache.org/">HiveMind</a> to inject the ServletContext into my page:<br /><br /><span style="font-size:85%;"><span style="font-family:courier new;">  @InjectObject("service:tapestry.globals.ServletContext")</span><br /><span style="font-family:courier new;">  public abstract ServletContext getServletContext();</span><br /></span><br />Also, we need to create an abstract method into which we'll store and retrieve the build date:<br /><br /><span style="font-size:85%;"><span style="font-family:courier new;">  public abstract String getBuiltOn();</span><br /><span style="font-family:courier new;">  public abstract void setBuiltOn(String builtOn);</span><br /></span><br />Finally, we need to read the Manifest file in our <span style="font-weight: bold;">pageBeginRender</span> method, and set the "Built On" date accordingly.  This is how I did this:<br /><pre><br />public void pageBeginRender(PageEvent event) {<br />ServletContext sc = this.getServletContext();<br />String filename = sc.getRealPath("/META-INF/MANIFEST.MF");<br />try {<br />  BufferedInputStream i = new BufferedInputStream(new FileInputStream(filename));<br />  Manifest m = new Manifest(i);<br />  Attributes attrib = m.getMainAttributes();<br />  this.setBuiltOn(attrib.getValue("Build-Date"));<br />} catch (Exception e) {<br />  log.warn("Unable to read MANIFEST.MF");<br />}<br />}<br /></pre>Finally, we need to actually render this on the LogOn page.  I did this with a simple Insert component directly on the html page:<br /><br /><span style="font-size:85%;"><span style="font-family:courier new;">Built: &lt;span jwcid="@Insert" value="ognl:builtOn"&gt;</span></span><br /><br />And <span style="font-style: italic;">voila</span>!  You have a build date on your log page, which can come in handy, e.g., when your QA team doesn't know which version they're testing!]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>24</wp:post_id>
<wp:post_date>2007-12-13 11:35:00</wp:post_date>
<wp:post_date_gmt>2007-12-13 16:35:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>build-date-on-a-tapestry-4-login-page</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2007_12_01_archive.html</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860700</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>iPod Touch Battery Life</title>
<link>http://mikedesjardins.us/wordpress/2008/01/ipod-touch-battery-life/</link>
<pubDate>Fri, 11 Jan 2008 15:58:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[ipod]]></category>

		<category domain="category" nicename="ipod"><![CDATA[ipod]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=25</guid>
<description></description>
<content:encoded><![CDATA[<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://images.apple.com/ipodtouch/guidedtour/images/hero_image20070905.png"><img style="margin: 0pt 10px 10px 0pt; float: left; cursor: pointer; width: 138px; height: 146px;" src="http://images.apple.com/ipodtouch/guidedtour/images/hero_image20070905.png" alt="" border="0" /></a>My wife got me a shiny new iPod Touch for Christmas this year.   It replaces my trusty old 3rd Gen 20G iPod that is starting to die; the old one's hard drive seems to keep getting corrupted.  I noticed when I started using it that the battery life was terrible; it typically got only 4-5 hours per charge.  I need my iPod to get through the workday, so that was a few hours too short!<br /><br />Fortunately, I discovered that it lasts a <span style="font-style: italic;">hell</span> of a lot longer if I disable the Wi-Fi.  This doesn't take a rocket scientist to figure out, but I was quite relieved to discover that I didn't have a defective iPod on my hands.  If you're having trouble with battery life on your iPod touch, go under Settings... Wi-Fi... and shut it off when you're not using it.<br /><br />I find the built-in Wi-Fi to be mostly a novelty anyway.  I imagine I'd find more use for it if I still traveled for business, but I'm not doing that as much as I used to.  But it's nice to have a personal music player that doesn't end up with a corrupt hard drive almost every time I use it!]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>25</wp:post_id>
<wp:post_date>2008-01-11 09:58:00</wp:post_date>
<wp:post_date_gmt>2008-01-11 15:58:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>ipod-touch-battery-life</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008_01_01_archive.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>11</wp:comment_id>
<wp:comment_author><![CDATA[Eric Holsinger]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-01-21 16:32:00</wp:comment_date>
<wp:comment_date_gmt>2008-01-21 22:32:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Try adding it as a jdbc resource in glassfish, with a jdbc conneciton pool.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>12</wp:comment_id>
<wp:comment_author><![CDATA[ACC-HE]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-01-24 13:50:00</wp:comment_date>
<wp:comment_date_gmt>2008-01-24 19:50:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Google Ad is blocking the article in IE7.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>13</wp:comment_id>
<wp:comment_author><![CDATA[Motoma]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-01-31 18:43:00</wp:comment_date>
<wp:comment_date_gmt>2008-02-01 00:43:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I agree entirely. The most successful software project I worked on started with me going onsite to the clients' office and getting trained with their existing system as if I were a new employee. It taught me the business behind the work, and allowed me to see the system as a whole, as opposed to just a series of screen mock ups of what the client thinks they need.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>14</wp:comment_id>
<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-02-06 08:30:00</wp:comment_date>
<wp:comment_date_gmt>2008-02-06 14:30:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[No comments ? Thanks Mike I don't know you but you are a star.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>&quot;Rebranding&quot; my site and blog</title>
<link>http://mikedesjardins.us/wordpress/2008/01/rebranding-my-site-and-blog/</link>
<pubDate>Fri, 18 Jan 2008 14:51:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/01/rebranding-my-site-and-blog/</guid>
<description></description>
<content:encoded><![CDATA[I've always <a href="http://www.dragonflymarsh.com/blog/2006/06/i-hate-my-url.html">hated "dragonflymarsh.com</a>," almost since the day I got it.  It was originally supposed to be a cute name for my house (read the linked post if you're really interested).  Anyway, since I've moved, the URL really isn't relevant to my life, and I've always thought it was kinda cheesy.<br /><br />I've been unable to purchase mikedesjardins.com, because <a href="http://mikedesjardins.com">this guy</a> owns it and now just forwards it to his LinkedIn profile (dude, that is <span style="font-weight: bold;">lame</span>!).  I also can't buy michaeldesjardins.com, because <a href="http://michaeldesjardins.com"><span style="text-decoration: underline;">this guy</span></a> uses it to post his resume.  As far as I can tell, it hasn't been modified in about seven years (dude, that is <span style="font-weight: bold;">also lame</span>!).  Fortunately, I was able to purchase the humble mikedesjardins.us.  So, welcome to the new place, the brand called me.<br /><br />I've always thought it was kinda vain to use your name in a URL, but I haven't been able to come up with anything creative that I won't be embarrassed about in a few years.  I also don't know that I'll have this blog forever, and need something flexible should I need a URL for personal use for who-knows-what purpose in the future.  And I really don't blog about any one topic consistently enough to name it after my subject matter.  I'm stuck with my name forever, so it seems like a logical choice.<br /><br />The annoying part is that I've spent a few years building up my "brand" of dragonflymarsh.  Even with the limited success I've had, I've managed to boost my Google page rank a bit and generate some (very modest) traffic.  Now I'm starting all over again.  According to Google's webmaster tools, I get (scores?) of hits on dragonflymarsh.com, and almost zero at mikedesjardins.us. <br /><br />Oh well. Enough unfocused rambling.  I'll probably be redecorating this place (again) in the coming weeks.  We'll see what happens.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>95</wp:post_id>
<wp:post_date>2008-01-18 09:51:00</wp:post_date>
<wp:post_date_gmt>2008-01-18 14:51:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>rebranding-my-site-and-blog</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/01/rebranding-my-site-and-blog.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Glassfish to Tomcat w/ JDBC Connection Pooling</title>
<link>http://mikedesjardins.us/wordpress/2008/01/glassfish-to-tomcat-w-jdbc-connection/</link>
<pubDate>Mon, 21 Jan 2008 19:31:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[glassfish]]></category>

		<category domain="category" nicename="glassfish"><![CDATA[glassfish]]></category>

		<category><![CDATA[hibernate]]></category>

		<category domain="category" nicename="hibernate"><![CDATA[hibernate]]></category>

		<category><![CDATA[java]]></category>

		<category domain="category" nicename="java"><![CDATA[java]]></category>

		<category><![CDATA[programming]]></category>

		<category domain="category" nicename="programming"><![CDATA[programming]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/01/glassfish-to-tomcat-w-jdbc-connection-pooling/</guid>
<description></description>
<content:encoded><![CDATA[Here's your don't-waste-hours-on-something-silly-that-I-did tip for the day.<br /><br />I recently had the opportunity to change an existing in-house web application from running under Tomcat 5.5, to Glassfish v2.    The application uses JDBC connection pooling in the application server, and uses JNDI to find the pool.  The only stumbling block I encountered was that, immediately after deploying the application, Hibernate would always complain that it couldn't find the connection:<br /><br /><span style="font-size:78%;"><span style="font-family:courier new;">org.hibernate.HibernateException: Could not find datasource</span><br /><span style="font-family:courier new;">        at org.hibernate.connection.DatasourceConnectionProvider.configure(DatasourceConnectionProvider.java:56)</span><br /><span style="font-family:courier new;">        at org.hibernate.connection.ConnectionProviderFactory.newConnectionProvider(ConnectionProviderFactory.java:124)</span><br /><span style="font-family:courier new;">        at </span><span style="font-family:courier new;"></span><br /><span style="font-family:courier new;">.</span><br /><span style="font-family:courier new;">.</span><br /><span style="font-family:courier new;">(yadda yadda)</span><br /><span style="font-family:courier new;">.</span><br /><span style="font-family:courier new;">Caused by: javax.naming.NameNotFoundException: No object bound to name java:/comp/env/jdbc/MyDB<br />.<br />.<br /></span></span><br />As it turns out, the datasource that I was using in hibernate.cfg.xml was perfectly fine for Tomcat, but not for Glassfish.  I had put the fully qualified JNDI file in my config file:<br />
<pre lang="xml">
<property name="connection.datasource">java:/comp/env/jdbc/ApptrackDB</property>
</pre><br />Glassfish doesn't like that.   Once I changed it to:<br />
<pre lang="xml">
<property name="connection.datasource">jdbc/ApptrackDB</property> 
</pre><br />Everything worked swimmingly.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>96</wp:post_id>
<wp:post_date>2008-01-21 14:31:00</wp:post_date>
<wp:post_date_gmt>2008-01-21 19:31:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>glassfish-to-tomcat-w-jdbc-connection</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860566</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/01/glassfish-to-tomcat-w-jdbc-connection.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>48</wp:comment_id>
<wp:comment_author><![CDATA[Eric Holsinger]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-01-21 17:32:00</wp:comment_date>
<wp:comment_date_gmt>2008-01-21 22:32:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Try adding it as a jdbc resource in glassfish, with a jdbc conneciton pool.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>119</wp:comment_id>
<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-10-30 19:16:00</wp:comment_date>
<wp:comment_date_gmt>2008-10-31 00:16:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[you did the pizza erd sloppily<br/>instead of having dancing or dead crow you had crazy crow.<br/>just sayin...<br/>useful information on the site though.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>What I learned from contributing to an Open Source project</title>
<link>http://mikedesjardins.us/wordpress/2008/01/what-i-learned-from-contributing-to/</link>
<pubDate>Thu, 24 Jan 2008 01:17:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[awn]]></category>

		<category domain="category" nicename="awn"><![CDATA[awn]]></category>

		<category><![CDATA[opensource]]></category>

		<category domain="category" nicename="opensource"><![CDATA[opensource]]></category>

		<category><![CDATA[programming]]></category>

		<category domain="category" nicename="programming"><![CDATA[programming]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/01/what-i-learned-from-contributing-to-an-open-source-project/</guid>
<description></description>
<content:encoded><![CDATA[<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/opensource_logo-772146.gif"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer;" src="http://mikedesjardins.us/blog/uploaded_images/opensource_logo-772137.gif" alt="" border="0" /></a>A while ago, I had the opportunity to contribute to the <a href="http://wiki.awn-project.org/">Avant Window Navigator</a> open source project.  My participation in the project has waned lately, but I've had a little time to reflect on the time that I spent working on it.  In no particular order, here were some of the things I took away from the project.  Note that this is just based on a single project, and that my experience might have been quite different had I participated in other projects:<br /><br /><span style="font-weight: bold;">Learn to detach yourself from from your code. </span> Once your stuff is checked into a public repository, anything can happen.  Generally, most people will respect what they see as "your turf," but that isn't always the case.  People will suggest improvements, implement them, and share them with the world before you even get a chance to review them.  Overall, it's a good thing and part of the ecology of an open-source project.  At your typical office-programmer job, people usually end up becoming specialists in specific areas and the demarkation of responsibilities are quite clear, sometimes at the expense of progress.  The boundaries are a lot looser in the open source community.<br /><br /><span style="font-weight: bold;">Interpersonal Relationships are Weird</span>. When you're in an office, you know that Fred is a little odd, and gets touchy when people criticize his font selection, because your co-worker warns you when you're at the coffee machine.  Anyone who lives and dies by their e-mail knows that emotions don't get conveyed adequately in text, and the same is true with online forums and IRC channels.  Some people lose their inhibitions when they don't understand that they're communicating with other people, and turn into jerks.  Fortunately, there aren't very many of these people.<br /><br /><span style="font-weight: bold;">There's a wide range in quality.</span>  There's no entrance requirement, so there's a pretty wide variety in code quality.  There are some incredible, amazing, talented people out there who are coding for their love of the craft.  There are also people who make some sub-par stuff.<br /><br /><span style="font-weight: bold;">Apprehension about bugs.</span>  When I started, I was really worried about what would happen when I released software that was buggy.  In a commercial environment, there are often layers of people between the programmer and the end-user, so bug reports come to you filtered and sanitized.  In the open source world, people will report bugs openly, directly to you, on forums, for all the world to see.  That made me nervous as hell.  It turned out to be not so bad.  The users knew that they were using bleeding edge stuff, and they expected a degree of instability and seemed to accept it quite well.  They were helpful and sympathetic when reporting problems.  I think it cuts both ways; when users report their software defects to someone far removed from the programmer, they're less sympathetic and more irate than if they're communicating directly with a person who can help them.  Users are people, just like programmers, and they usually realize that the programmers are doing this for free and are quite polite.<br /><br /><span style="font-weight: bold;">Uptake on Localization was less enthusiastic than I thought it'd be.</span>  My weather applet was among the first to support multiple languages.  Because there were so many contributers from outside the U.S. working on AWN, I thought people would jump at the opportunity to translate my applet to their native language.  In the end, there were only three people who volunteered.<br /><br /><span style="font-weight: bold;">I felt old. </span> Most of the people contributing to the project were in college or in their mid-twenties.  I'm in my mid-thirties, and after working for 10 hours, coming home, feeding the kids and getting them ready for the next day, it's 8:00 and I don't feel much like getting out the laptop and coding.  I managed to sneak in a few cycles at work, but I always felt a little guilty about it.  While the other contributers were complaining about their upcoming finals, I had to deal with the upcoming PTA meeting.<br /><br /><span style="font-weight: bold;">You can learn a lot.</span>  I got into this project to "scratch an itch."  I was using Linux at work, I needed a dock, because I'm a Mac guy and I like docks.  AWN was a Dock for Linux, but it was missing a clock.  So I learned Python to create one.  Now I know some Python, and I have a clock on my dock.  I'm a happy man.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>97</wp:post_id>
<wp:post_date>2008-01-23 20:17:00</wp:post_date>
<wp:post_date_gmt>2008-01-24 01:17:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>what-i-learned-from-contributing-to</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860669</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/01/what-i-learned-from-contributing-to.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>49</wp:comment_id>
<wp:comment_author><![CDATA[ACC-HE]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-01-24 14:50:00</wp:comment_date>
<wp:comment_date_gmt>2008-01-24 19:50:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Google Ad is blocking the article in IE7.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>50</wp:comment_id>
<wp:comment_author><![CDATA[- Mike D.]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-01-24 18:16:00</wp:comment_date>
<wp:comment_date_gmt>2008-01-24 23:16:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[@acc-he: I'll be darned, you're right!  Must be a problem with my CSS that causes the left margin to float over the content.  It's obviously been a long time since I've double checked my site with IE!  :(]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>51</wp:comment_id>
<wp:comment_author><![CDATA[.mike]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-01-24 19:49:00</wp:comment_date>
<wp:comment_date_gmt>2008-01-25 00:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[@acc-he: There - all fixed.  Thanks for finding that one!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>53</wp:comment_id>
<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-02-03 16:03:00</wp:comment_date>
<wp:comment_date_gmt>2008-02-03 21:03:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I think there's two reasons for the lack of interest in localization. For a start, the people who can translate  your app into their language are exactly the ones who don't need it localized.<br/><br/>Also, quite a few of them have seen previous attempts at making internationalization and localization work over the years, and may feel that it's easier just to put up with foreign software.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>57</wp:comment_id>
<wp:comment_author><![CDATA[techbrain]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-02-12 01:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-02-12 06:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That's a fairly profound viewpoint..Now the world needs to come up with a modern ideology that works. I have found Paragent software which seems to be looking good in open source so far, any suggestions regarding this would be appreciated.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>61</wp:comment_id>
<wp:comment_author><![CDATA[Matt Brock]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-03-06 20:39:00</wp:comment_date>
<wp:comment_date_gmt>2008-03-07 01:39:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The best solution for open-source localization: do it, but do it wrong.  Use <a HREF="http://babelfish.altavista.com" REL="nofollow">Babelfish</a> and you've got about 10 languages right off the bat.  Will the translations be awful?  You betcha!  Soon enough some polyglot will come along and tell you your translation shouldn't be <b>this</b>&hellip; is should be <b><i>THIS</i></b>.<br/><br/>Use people's built-in sense of superiority, combined with their nationalistic pride, to do your translations for you.  Outrage is a powerful motivator.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>62</wp:comment_id>
<wp:comment_author><![CDATA[.mike]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-03-06 22:03:00</wp:comment_date>
<wp:comment_date_gmt>2008-03-07 03:03:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[@Matt Brock.. that's so evil, it's BRILLIANT!<br/><br/>Actually, it's not that far off from what I ended up doing with the Spanish translation.  My Spanish is probably almost as bad as babelfish.  :)  After completing it, I got a few "suggestions" on how to improve it.  So you're not that far off the mark!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>The Myth of Requirements Gathering</title>
<link>http://mikedesjardins.us/wordpress/2008/01/myth-of-requirements-gathering/</link>
<pubDate>Wed, 30 Jan 2008 19:17:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[programming]]></category>

		<category domain="category" nicename="programming"><![CDATA[programming]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/01/the-myth-of-requirements-gathering/</guid>
<description></description>
<content:encoded><![CDATA[This post comes courtesy of the bureau of patently obvious.<br /><br />Lots of software projects I've worked on didn't live up to the end-user's expectations.  Sadly, it's all part of the job.  Perhaps it a bigger part than it should be.<br /><br />The most successful projects I've worked on were those where I actually visited an en<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/black_and_white_guy_at_laptop-756359.JPG"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer;" src="http://mikedesjardins.us/blog/uploaded_images/black_and_white_guy_at_laptop-756348.JPG" alt="" border="0" /></a>d-user, and said "hey, I can make that easier for you!"  There have been cases where this involved flying across the country to actually watch someone using the software with my own two eyes.  I wasn't privy to the financial expense of these trips, but from a customer satisfaction perspective, it seemed well worth it.<br /><br />The alternative is to have some sort of analyst sit down with a programmer, and that person creates a pile of documents that are dumped on a programmer's desk.<br /><br />Abstraction is a wonderful tool for coding.  You've probably heard the old programming adage "there's no problem that can't be solved with another layer of abstraction!"  But it doesn't work when you introduce people into the equation.<br /><br />Lots of <a href="http://en.wikipedia.org/wiki/Agile_software_development">fancy</a> <a href="http://en.wikipedia.org/wiki/Agile_software_development">new</a> <a href="http://en.wikipedia.org/wiki/Extreme_Programming">software</a> <a href="http://en.wikipedia.org/wiki/Crystal_Clear_%28software_development%29">development</a> <a href="http://en.wikipedia.org/wiki/Adaptive_Software_Development">processes</a> have been invented to try to revolutionize  software engineering, attempting to marginalize the venerable <a href="http://en.wikipedia.org/wiki/Waterfall_model">waterfall model</a>.  But in the end, it doesn't take a cool, aggressively marketed name.  You don't need a cadre of <a href="http://www.thoughtworks.com">consultants</a> <a href="http://www.amazon.com/Agile-Project-Management-Software-Estimating/lm/R1XPG7QMCB6AUC/ref=cm_lmt_srch_f_1_rsrsrs0">hocking books</a> and <a href="http://www.sligerconsulting.com/">services</a> to convert you to the latest methodology.  All you need is to get the programmers out of their cubicles, and sit them down with their own users once in a while.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>98</wp:post_id>
<wp:post_date>2008-01-30 14:17:00</wp:post_date>
<wp:post_date_gmt>2008-01-30 19:17:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>myth-of-requirements-gathering</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860588</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/01/myth-of-requirements-gathering.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>52</wp:comment_id>
<wp:comment_author><![CDATA[Motoma]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-01-31 19:43:00</wp:comment_date>
<wp:comment_date_gmt>2008-02-01 00:43:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I agree entirely. The most successful software project I worked on started with me going onsite to the clients' office and getting trained with their existing system as if I were a new employee. It taught me the business behind the work, and allowed me to see the system as a whole, as opposed to just a series of screen mock ups of what the client thinks they need.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>A Delicious and Simple JPA Mapping tutorial: The Pizza Shop</title>
<link>http://mikedesjardins.us/wordpress/2008/01/new-jpa-tutorial-pizza-shop/</link>
<pubDate>Fri, 01 Feb 2008 01:15:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[hibernate]]></category>

		<category domain="category" nicename="hibernate"><![CDATA[hibernate]]></category>

		<category><![CDATA[java]]></category>

		<category domain="category" nicename="java"><![CDATA[java]]></category>

		<category><![CDATA[jpa]]></category>

		<category domain="category" nicename="jpa"><![CDATA[jpa]]></category>

		<category><![CDATA[pizzashop]]></category>

		<category domain="category" nicename="pizzashop"><![CDATA[pizzashop]]></category>

		<category><![CDATA[programming]]></category>

		<category domain="category" nicename="programming"><![CDATA[programming]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/01/a-delicious-and-simple-jpa-mapping-tutorial-the-pizza-shop/</guid>
<description></description>
<content:encoded><![CDATA[<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/pizzasign-715213.jpg"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer;" src="http://mikedesjardins.us/blog/uploaded_images/pizzasign-715207.jpg" alt="" border="0" /></a>So, another JPA tutorial.  What makes this one different?  Well, for one thing, this one comes with a working, downloadable project that works with Eclipse, NetBeans, and IntelliJ IDEA 7.  It's packaged with Hibernate, Toplink, and OpenJPA.  And it's been tested with MySQL, PostgreSQL, MS SQL Server, and Sybase.  In other words, it works with 36 different IDE/JPA Provider/Database combinations!<br /><br />Another thing that makes this tutorial different is the subject matter: Pizza!  Who doesn't love pizza?  Except lactose intolerant people. And people who can't eat gluten.  But <span style="font-style: italic;">other than them</span>, who doesn't love pizza?  So we're going to create a simple database model for a pizza shop's point-of-sale system.<br /><br /><span style="font-weight: bold;font-size:130%;" >The Schema</span><br />Unsurprisingly, the starting point for any ORM task is usually the database schema (there are people who start with the Objects and work "backward" to the schema, but I haven't worked with any of them yet).  In our example, we have a pristine, consistent, completely normalized schema.  In other words, it's probably nothing like you'll ever be lucky enough to see in the real world! Here's our simple little ERD:<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/pizza-erd-737227.jpg"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer; width: 454px; height: 326px;" src="http://mikedesjardins.us/blog/uploaded_images/pizza-erd-737223.jpg" alt="" border="0" /></a>From this ERD, we can infer the following:  1.) An order is comprised of zero or more pizzas.  2.) A pizza is associated with one size.  3.) A pizza may be associated with a string of text containing "special instructions."  4.) A pizza may have zero or more toppings.  You probably also notice that each table has a column called version.  This will be used for an <a href="http://en.wikipedia.org/wiki/Optimistic_concurrency_control">optimistic locking strategy</a>.<br /><br />The first question is, "Where should we start?" There's no right answer for this, but I find that it's easiest to start working with the entities with the fewest dependencies.   For example, you can't have an order without a pizza, and you can't have a pizza without a size, so maybe it makes sense to start with the size.  But before that, we'll want an ID interface.<br /><br /><span style="font-size:130%;"><span style="font-weight: bold;">An ID Interface</span></span><br />First things first.  You'll notice that, in our schema, every table has an integer ID. It's often a good idea to have all of your objects implement the same interface for accessing the ID, because it makes it easier to create Generic DAOs (more about that in a future post). For now, let's make a really simple interface like this:<br />
<pre lang="java">
public interface IdObject {
  public void setId(Integer id);
  public Integer getId();
}
</pre><span style="font-weight: bold;font-size:130%;" >Many-to-One Unidirectional Relationships</span><br />Now that we've gotten that out of the way, let's create the Size class.  It's a simple POJO littered with annotations, like this:<br />
<pre lang="java">
@Entity
@Table(name="PIZZA_SIZE")
public class Size implements IdObject {
  @Id
  @Column(name="pizza_size_id")
  private Integer id;

  @Column(name="pizza_size_description")
  private String description;

  @Column(name="pizza_size_base_price")
  private BigDecimal basePrice;

  @Version @Column(name="version")
  private Integer version;

  public Integer getId() { return id; }
  public void setId(Integer id) { this.id = id; }

  public String getDescription() { return description; }
  public void setDescription(String description) { this.description = description; }

  public BigDecimal getBasePrice() { return basePrice; }
  public void setBasePrice(BigDecimal basePrice) { this.basePrice = basePrice; }

  public Integer getVersion() { return version; }
  public void setVersion(Integer version) { this.version = version; }
}
</pre><br />Here are some notes on the annotations that were used in the above class:  <span style="font-weight: bold;"><br />@Entity</span> tells the JPA provider that this is a managed object.<br /><span style="font-weight: bold;">@Table</span> specifies the table name.  The JPA provider will attempt to default the table name to a sane value based on the class name, but I like to be explicit.  I'm funny that way.  Perhaps it's <a href="http://en.wikipedia.org/wiki/Obsessive-compulsive_disorder">OCD</a>.  Or a <a href="http://en.wikipedia.org/wiki/Dick_cheney">power-trip</a>.<br /><span style="font-weight: bold;">@Column</span> indicates the name of the column, and can include other attributes about the column (you'll see a few additional attributes later on).  Again, JPA can try to default this to sane values for you, but I like to be explicit.<br /><span style="font-weight: bold;">@Version</span> indicates that a particular column is used for indicating when a row is updated.  This column can then be used in an <a href="http://en.wikipedia.org/wiki/Optimistic_concurrency_control">optimistic locking</a> scheme.<br /><br />Next, let's do the Pizza object to show how we map a Pizza to a Size.<br />
<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/iStock_000004523455XSmall-738223.jpg"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer; width: 400px; height: 264px;" src="http://mikedesjardins.us/blog/uploaded_images/iStock_000004523455XSmall-738216.jpg" alt="" border="0" /></a>      One thing I that always tripped me up when I started out with ORM<br />tools was the difference between "One-to-Many" and "Many-to-One." I never knew, if I call a relationship many-to-one in my metadata, is  <span style="font-style: italic;">this</span> object the one that there are many of, or is it the other way around?  The answer is that "this" object always comes first.  <span>Many</span>ToOne means that "there are many of <span style="font-style: italic;">this</span> object to one of <span style="font-style: italic;">those</span> objects."  The "Many" side is often the side that has the foreign key.<br /><br />In our case, there will be many Pizzas that are the same size.  So when we make our Pizza object, we will want to use the <span style="font-weight: bold;">@ManyToOne</span> annotation.  Here's what the Pizza object looks like so far.  I've omitted the getters and setters to save space:<br />
<pre lang="java">
@Entity
@Table(name="PIZZA")
public class Pizza implements IdObject {
  @Id
  @Column(name="pizza_id")
  private Integer id;

  @ManyToOne(cascade={CascadeType.ALL})
  @JoinColumn(name="pizza_size_id",nullable=false)
  private Size size;

  @Version @Column(name="version")
  private Integer version;

  // (Accessor methods omitted)
}
</pre><br />Note that, when we made our Size object, we did not include a reference to the Pizza. That was an intentional design decision. In this application, it's unlikely that we will want to instantiate a Size object, and get a collection containing all of the Pizzas of that size, so we don't bother with mapping it. This is called <span style="font-style: italic;">unidirectional association</span>.<br /><br />The <span style="font-weight: bold;">@ManyToOne</span> annotation specifies a cascade attribute.  There are several different settings for this attribute, which you can read more about <a href="http://www.oracle.com/technology/products/ias/toplink/jpa/resources/toplink-jpa-annotations.html#ManyToOne">here</a>.  I tend to cascade the persistent state to all related objects because it reduces the amount of redundant API calls.  By default, JPA does <span style="font-style: italic;">not</span> cascade pers istence to related objects.  I'll cover the cascade attribute in future posts, but for now, we'll go with my personal preference, because I'm writing the article!<br /><br />The <span style="font-weight: bold;">@JoinColumn</span> annotation indicates the column name that defines the linkage between the Pizza and the Size.  You'll also note that we've included some additional attributes on our <span style="font-weight: bold;">@Column</span> and <span style="font-weight: bold;">@JoinColumn</span> annotations.  The unique and nullable attributes are particularly useful if you use tools to generate schema DDL from your mappings.<br /><br /><span style="font-size:130%;"><span style="font-weight: bold;">One-to-Many bidirectional relationships</span></span><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/iStock_000004945600XSmall-743572.jpg"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer; width: 229px; height: 157px;" src="http://mikedesjardins.us/blog/uploaded_images/iStock_000004945600XSmall-743564.jpg" alt="" border="0" /></a> Both the SpecialInstruction and the Order objects are examples of   One-to-Many bidirectional relationships.  In the case of SpecialInstruction, it is likely that we will care about which Pizza an instruction is associated with, and likewise for the Order.  A bidirectional one-to-many relationship implies that one object has a <span style="font-style: italic;">collection</span> of other o bjects.  For example, an Order has a collection of Pizzas.  First, lets add an order attribute to our Pizza object:<br />
<pre lang="java">
@Entity
@Table(name="PIZZA")
public class Pizza implements IdObject {
.
.
  @ManyToOne(cascade={CascadeType.ALL})
  @JoinColumn(name="pizza_order_id",nullable=false)
  private Order order;

  public Order getOrder() { return order; }
  public void setOrder(Order order) { this.order = order; }
.
.
}
</pre><br />Next, let's create an Order object to contain our collection of Pizzas, like this:<br />
<pre lang="java">
@Entity
@Table(name="PIZZA_ORDER")
public class Order implements IdObject {
  @Id
  @Column(name="pizza_order_id")
  private Integer id;

  @OneToMany(cascade={CascadeType.ALL},mappedBy="order")
  private Set pizzas = new HashSet();

  @Version @Column(name="version")
  private Integer version;

  // (version and id accessors omitted)

  public Set getPizzas() {  return pizzas; }
  public void setPizzas(Set pizzas) { this.pizzas = pizzas; }
  public void addPizza(Pizza pizza) {  pizza.setOrder(this);  this.pizzas.add(pizza); }
}
</pre><br />There are a couple of things you worth noting about this mapping:<br />1.) The <span style="font-weight: bold;">@OneToMany</span> annotation uses the <span style="font-style: italic;">mappedBy</span> attribute to indicate which member of the related object defines the linkage between the two tables.  In this case, we are saying that the Pizza object contains a member named order, which defines the linkage between the two objects.<br />2.) I've created a utility method called <span style="font-weight: bold;">addPizza</span>.  This simplifies setting both sides of the bidirectional relationship by setting the Order object on the Pizza <span style="font-style: italic;">and</span> adding the Pizza to the Order's collection.  Users of this class will only need to make one method call to do both.<br /><br /><span style="font-size:130%;"><span style="font-weight: bold;">Many-to-Ma</span></span><span style="font-size:130%;"><span style="font-weight: bold;">ny relationships via a Join Table</span></span><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/cohdra100_1404-732725.JPG"><img style="margin: 0pt 10px 10px 0pt; float: left; cursor: pointer; width: 233px; height: 174px;" src="http://mikedesjardins.us/blog/uploaded_images/cohdra100_1404-732719.JPG" alt="" border="0" /></a> The last thing we'll cover is how to map Join Tables.  In our ERD, you can see that Toppings are modeled in the database with a TOPPING table that contains all of the valid toppings, a PIZZA table that contains all of the valid Pizzas, and a PIZZA_TOPPING table in the middle that maps all of the valid Pizzas to all of the valid Toppings.  You <span style="font-style: italic;">could</span> create an object called PizzaTopping that corresponds to the PIZZA_TOPPING table.  Then you could have a One-to-Many relationship from the Pizza to the PizzaTopping, and a One-to-One from each PizzaTopping to a Topping.  That would be very cumbersome to work with!  Fortunately, there's a better way.<br /><br />Logically, a Pizza has a collection of Toppings.  In our Java code, we really shouldn't care about the fact that there is a PIZZA_TOPPING join table in the middle.  First, let's create a simple Topping class:<br />
<pre lang="java">
@Entity
@Table(name="TOPPING")
public class Topping implements IdObject {
  @Id
  @Column(name="topping_id")
  private Integer id;

  @Column(name="topping_description")
  private String description;

  @Column(name="topping_price")
  private BigDecimal price;

  @Version @Column(name="version")
  private Integer version;

  // (Accessors omitted)
}
</pre><br />This is how the association would be mapped in the Pizza class:<br />
<pre lang="java">
@Entity
@Table(name="PIZZA")
public class Pizza implements IdObject {
.
.
  @ManyToMany(cascade={CascadeType.ALL})
  @JoinTable(name="PIZZA_TOPPING",
             joinColumns=@JoinColumn(name="pizza_id"),
             inverseJoinColumns=@JoinColumn(name="topping_id"))
  private Set toppings = new HashSet();

  public Set getToppings() { return toppings; }
  public void setToppings(Set toppings) { this.toppings = toppings; }
  public void addTopping(Topping topping) { this.toppings.add(topping); }
.
.
}</pre><br />The @JoinTable annotation defines three key attributes:<br /><span style="font-weight: bold;">name</span>: Identifies the name of the join table.<br /><span style="font-weight: bold;">joinColumns</span>: This attribute identifies the column name in the join table that points to <span style="font-style: italic;">this</span> object.<br /><span style="font-weight: bold;">inverseJoinColumns</span>: This attribute defines the column name in the join table that points to <span style="font-style: italic;">the other</span> objects.<br /><br />From your Java code, the semantics for dealing with toppings on a pizza are just like any other set, much like you'd work with a One-to-many object.<br /><br /><span style="font-size:130%;"><span style="font-weight: bold;">Conclusion</span></span><br />Since the introduction of annotations, object/relational mapping is one of the easiest aspects of working with JPA over other frameworks.  You can see this whole project in action on your IDE of choice by downloading it <a href="http://www.mediafire.com/?2jgrzkizfy9"><span style="text-decoration: underline;">here</span></a> (or from <a href="http://mikedesjardins.us/blog/pizzashop-1.1.tar.gz">here</a> if that doesn't work for some reason).  It should be a pretty reasonable starting point if you want a reference project to start playing with JPA.  I hope to revisit the Pizza Shop project to cover other JPA topics in future posts.<br /><a href="http://mikedesjardins.us/blog/pizzashop-1.0.tar.gz"><br /></a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>99</wp:post_id>
<wp:post_date>2008-01-31 20:15:00</wp:post_date>
<wp:post_date_gmt>2008-02-01 01:15:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>new-jpa-tutorial-pizza-shop</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860622</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/01/new-jpa-tutorial-pizza-shop.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>54</wp:comment_id>
<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-02-06 09:30:00</wp:comment_date>
<wp:comment_date_gmt>2008-02-06 14:30:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[No comments ? Thanks Mike I don't know you but you are a star.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>55</wp:comment_id>
<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-02-06 16:31:00</wp:comment_date>
<wp:comment_date_gmt>2008-02-06 21:31:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I think that connection between Pizza and Pizza_Order are wrong on ER diagram Same problem has connection between Pizza and Pizza_Special_Instructions.<br/><br/>Thanks for good blog entry]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>56</wp:comment_id>
<wp:comment_author><![CDATA[.mike]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-02-06 16:36:00</wp:comment_date>
<wp:comment_date_gmt>2008-02-06 21:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ooh - good catch!  I'll fix the diagram in a few hours, thanks!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>63</wp:comment_id>
<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-03-19 13:38:00</wp:comment_date>
<wp:comment_date_gmt>2008-03-19 18:38:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It really is a great post Mike. Hats off!!<br/>I have a doubt. I am using oracle database. And I'm using the sequence objects <br/>for generating the ids. And in the java classes I'm using the following annotations to create the ids.<br/><br/>@Id<br/>@GeneratedValue(generator="SEQUENCE_NAME")<br/>@SequenceGenerator(name="SEQUENCE_NAME",sequenceName="SEQUENCE_NAME")<br/><br/><br/>My question is, how do I generate the ids for the mapping table (PIZZA_TOPPING)?<br/>Thanks in advance. Looking forword for your other posts.<br/><br/>Cheers<br/>Madhan]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>64</wp:comment_id>
<wp:comment_author><![CDATA[.mike]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-03-19 13:48:00</wp:comment_date>
<wp:comment_date_gmt>2008-03-19 18:48:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[@Madhan - believe it or not, I've *never* used Oracle with JPA, so I don't know for sure how it would work!  I would expect that it'd work a lot like Postgres, and for Postgres, the identities for the mapping table are handled automatically.  Is it not working that way?  Let me know what you find, 'cuz as someone who's never dealt with Oracle before, I'd really like to know!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>74</wp:comment_id>
<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-03-27 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2008-03-27 23:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Mike,<br/>Sorry for the delayed response. <br/>Here is my experience when I used oracle:<br/>The application failed throwing the following error:<br/><br/>Caused by: org.apache.openjpa.persistence.PersistenceException: ORA-01400: cannot insert NULL into ("FSTCTLADM"."PIZZA_TOPPING"."PIZZA_TOPPING_ID")<br/>{prepstmnt 1967682888 INSERT INTO PIZZA_TOPPING (pizza_id, topping_id) VALUES (?, ?) [params=(int) 7, (int) 1]} [code=1400, state=23000]<br/><br/>The thing is, in Oracle we need to use sequence to generate the id. But I couldn't define the @manyToMany annotation  to use <br/>the sequence. I don't know how to do it. <br/>Please let me know if there is a way in JPA to define the ID generator for the join table used in <br/>ManyToMany cases. <br/><br/>To overcome this, I wrote a trigger for the join table PIZZA_TOPPING, to generate the ids using the sequence.<br/>Then the application worked. <br/><br/>Still, I have a question: <br/>Let us consider I am adding  'CreatedBy'  and 'ModifiedBy' columns in all the tables to be <br/>used for audit purposes. Ideally these columns would be populated by the user id who has logged into the application. <br/>This will work for all the tables except the join table PIZZA_TOPPING.<br/>Because, the application is going to supply only the<br/>'pizza_id' and the 'topping_id' defined in the @JoinTable annotation. <br/>And my trigger is going to supply only the 'pizza_topping_id'<br/>using a sequence. But how do the CreatedBy and ModifiedBy columns will be populated? The trigger can not do that as it wouldn't be aware of the fact that which user has logged into the application. Is there a way to populate additional fields in a join table used in manytomany case with JPA??<br/><br/>Plz let me know your thoughts.<br/><br/>Cheers<br/>Madhan]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>75</wp:comment_id>
<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-03-27 21:26:00</wp:comment_date>
<wp:comment_date_gmt>2008-03-28 02:26:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[sehr gut...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>77</wp:comment_id>
<wp:comment_author><![CDATA[.mike]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-03-31 13:04:00</wp:comment_date>
<wp:comment_date_gmt>2008-03-31 18:04:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[@Madhan - I can't think of a way to do that.  Populating the CreatedBy/ModifiedBy columns on the rest of the tables is relatively straightforward (I'd do it with an EventListener... hey... that gives me an idea for my next post!).  But JPA can't really "get at" the contents of the JoinTable very easily.<br/><br/>I guess I'd ask <br/>1.) Under what circumstances you'd be modifying the contents of the join table directly?  By its nature, a join table is comprised of a compound primary key, and little else.  It's <i>generally</i> a bad idea to create a data model in which you're modifying primary keys... so if you're doing this often, you might want to rethink your data model a bit.   <br/>2.) Assuming that you're <i>not</i> directly modifying the contents of the join table, then there should be little need for a ModifiedBy column.  That leaves CreatedBy.  And I can't think of an easy solution for that.<br/><br/>If it's critical to have an audit trail of all inserts and updates, you might consider storing all of the changes in a separate auditing/log table.  You could then programatically populate the audit table using event listeners and/or specialized code.  E.g,. if a user were to add a Topping to a Pizza, you could capture that event in a listener and write a row to an audit table with the username of the user who performed that action.<br/><br/>hth!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Enumerated Types with JPA, and your Sock Drawer</title>
<link>http://mikedesjardins.us/wordpress/2008/02/enumerated-types-with-jpa-and-your-sock/</link>
<pubDate>Tue, 19 Feb 2008 00:39:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[hibernate]]></category>

		<category domain="category" nicename="hibernate"><![CDATA[hibernate]]></category>

		<category><![CDATA[java]]></category>

		<category domain="category" nicename="java"><![CDATA[java]]></category>

		<category><![CDATA[jpa]]></category>

		<category domain="category" nicename="jpa"><![CDATA[jpa]]></category>

		<category><![CDATA[programming]]></category>

		<category domain="category" nicename="programming"><![CDATA[programming]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=26</guid>
<description></description>
<content:encoded><![CDATA[<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/sockdrawer-773600.jpg"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer; width: 226px; height: 341px;" src="http://mikedesjardins.us/blog/uploaded_images/sockdrawer-773596.jpg" alt="" border="0" /></a>One feature of JPA that didn't exist in plain-vanilla Hibernate is support for Enumerated types.  I haven't seen a lot of examples of this in practice or on the internet, so in this post I'll show one example of how to use JDK 5 enumerations with JPA.<br /><br />For our example, we are going to create an inventory system for our sock drawer.  It is comprised of only two tables.  The first table, called SOCK, contains one row per sock in our drawer.  The columns of the table are:<br />
<ul>
<li>sock_id - an auto-incrementing identity column.</li>
<li>sock_description - a varchar column for a free-form text description of the sock.</li>
<li>sock_pattern_id - a reference to a row in the SOCK_PATTERN table.</li>
</ul>As you may have guessed, the SOCK_PATTERN table looks like this:<br /><ul><li>sock_pattern_id - an integer primary key.  It's not auto-incrementing, because we will want to have control over the contents of the field.</li><li>sock_pattern_description - a varchar column for a free-form text description of the pattern.</li></ul>We need to "prime" our SOCK_PATTERN table with the valid patterns and create a foreign key relationship between the two tables:<br />
<pre lang="sql">
insert into SOCK_PATTERN (sock_pattern_id,sock_pattern_description) values (0,'SOLID');
insert into SOCK_PATTERN (sock_pattern_id,sock_pattern_description) values (1,'STRIPES');
insert into SOCK_PATTERN (sock_pattern_id,sock_pattern_description) values (2,'POLKA_DOT');
insert into SOCK_PATTERN (sock_pattern_id,sock_pattern_description) values (3,'ARGYLE');
</pre><br />Note that we populated sock_pattern_id starting with zero; this is important because the Enumeration below is zero-indexed.<br /><br />Next, let's create the classes:<br />
<pre lang="java">
public enum SockPattern {
 SOLID, STRIPES, POLKA_DOT, ARGYLE
}

@Entity @Table(name="SOCK")
public class Sock {
 @Id @GeneratedValue(strategy=GenerationType.IDENTITY)
 @Column(name="sock_id")
 private Integer id;

 @Column(name="sock_description")
 private String description;

 @Enumerated @Column(name="sock_pattern_id")
 private SockPattern pattern;

 public Integer getId() { return id; }
 public void setId(Integer id) { this.id = id; }

 public String getDescription() { return description; }
 public void setDescription(String description) { this.description = description; }

 public SockPattern getPattern() { return pattern; }
 public void setPattern(SockPattern pattern) { this.pattern = pattern; }
}
</pre><br />Now, to use our wonderful contraption, you'd do something like the following:<br />
<pre lang="java">
public class Demo {
 private static EntityManagerFactory emf;
 static {
     Demo.emf = Persistence.createEntityManagerFactory("sockdrawer");
 }

 @Test
 public void socksOne() {
     Sock sock = new Sock();
     sock.setDescription("My favorite sock.");
     sock.setPattern(SockPattern.ARGYLE);
     EntityManager em = Demo.emf.createEntityManager();
     em.getTransaction().begin();
     em.persist(sock);
     em.getTransaction().commit();
     em.close();
 }
}
</pre><br />There are some obvious pitfalls to this approach.  The object/relational mapping is very brittle; for this code to work, the IDs in the database always need to match the values that the ORM tool gets from the enumeration.  Changing these values at a later date could cause some surprising results, and you can't insert new rows without updating the Enumeration and recompiling.  It does obviate the need to map the SOCK_PATTERN table, and you won't need to worry about the details of cascading the persistent state of related Sock and SockPattern objects.<br /><br />It's just a new tool in the JPA toolbox.<br /><br />(The code in this blog post was tested w/ Postgres and Toplink)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>26</wp:post_id>
<wp:post_date>2008-02-18 19:39:00</wp:post_date>
<wp:post_date_gmt>2008-02-19 00:39:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>enumerated-types-with-jpa-and-your-sock</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008_02_01_archive.html</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860532</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>31</wp:comment_id>
<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-09-13 19:56:00</wp:comment_date>
<wp:comment_date_gmt>2008-09-14 01:56:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hey Mike<br/><br/>Thanks for this useful post. I used a similar example with Postgres/JPA/ Hibernate but experienced problems when starting the ID of the enum mapping table (in your example this would be the SOCK_PATTERN table) with a value of '1' instead of '0' - did you experience the same?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Now hosting on blogspot</title>
<link>http://mikedesjardins.us/wordpress/2008/02/now-hosting-on-blogspot/</link>
<pubDate>Tue, 26 Feb 2008 18:53:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/02/now-hosting-on-blogspot/</guid>
<description></description>
<content:encoded><![CDATA[I've moved the host for this blog from my own webhosting account, to blogspot.  It should be a pretty seamless change, but I'm keeping my fingers crossed.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>101</wp:post_id>
<wp:post_date>2008-02-26 13:53:00</wp:post_date>
<wp:post_date_gmt>2008-02-26 18:53:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>now-hosting-on-blogspot</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/02/now-hosting-on-blogspot.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Pizza shop 2: Totaling the JPA Order, use P6Spy to prevent stupidity</title>
<link>http://mikedesjardins.us/wordpress/2008/03/pizza-shop-2-totaling-the-jpa-order-use/</link>
<pubDate>Wed, 05 Mar 2008 00:57:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=27</guid>
<description></description>
<content:encoded><![CDATA[I'm digging up the original Pizza Shop project to illustrate another Hibernate gotcha (it's probably applicable to other ORM libraries as well... admittedly, I haven't tested it). If you didn't read the original Pizza Shop post, you can find it <a href="http://blog.mikedesjardins.us/2008/01/new-jpa-tutorial-pizza-shop.html">here</a>. To review, here is an ERD for the system:<br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/pizza-erd-737227.jpg"><img style="DISPLAY: block; MARGIN: 0px auto 10px; WIDTH: 400px; CURSOR: pointer; TEXT-ALIGN: center" alt="" src="http://mikedesjardins.us/blog/uploaded_images/pizza-erd-737227.jpg" border="0" /></a>Today I'd like to show how <span style="FONT-STYLE: italic">not</span> to total up the cost of the customer order. First, we are going to add <a href="http://www.p6spy.com/">P6Spy</a> to the project. P6Spy is an excellent "JDBC wrapper" tool that sits between your application code and your actual JDBC driver. It intercepts your application's JDBC requests and logs the results. It's an invaluable tool for optimizing the voodoo out of an ORM tool, and the great thing is that it's simple to setup:<br /><br />1.) Change your application's JDBC driver from whatever it currently is (e.g., org.postgresql.Driver), to the P6Spy JDBC driver, com.p6spy.engine.spy.P6SpyDriver.<br />2.) Modify the spy.properties file by editing the line that starts with "realdriver=", changing the value to your actual JDBC driver.<br />3.) Put spy.properties on your classpath.<br /><br />That's it! Now that we have that out of the way, let's see just how badly we can screw up a simple method in our Model class. The method we are going to add will total up the price of an order. If you look at the ERD above, you can infer that the total cost of an order is the sum of the base price for each pizza, depending on its size, plus the price of each pizza's individual toppings.<br /><br />So for our example order, let's say we have the following:<br />1 Small Pizza with Pepperoni and Mushroom<br />1 Medium Pizza with Sausage and Onions<br />1 Large Pizza with Extra Cheese<br /><br />You'll recall that we created a Model class which provides a method for retrieving a List of Pizza objects that are associated with an order ID. The temptation is to create a method which looks something like this:<br />
<pre lang="java">
public BigDecimal getOrderPriceWrong(Integer orderId) {
  BigDecimal result = new BigDecimal(0.0);
  Order order = this.getOrder(orderId);
  for (Pizza pizza : order.getPizzas()) {
    result.add(pizza.getSize().getBasePrice());
    for (Topping topping : pizza.getToppings()) {
      result.add(topping.getPrice());
    }
  }
  return result;
}
</pre><br />Because Hibernate does lazy-fetching, it's not going to attempt to calculate the total cost with as few queries as possible. Instead, Hibernate's general philosophy is to defer any queries until it knows that it absolutely needs to do them, substituting empty proxy objects for populated ones until required. Usually this is an optimization, but in this case, Hibernate will do the following queries:<br /><br />1.) Query to obtain an order object.<br />2.) One Query for each Pizza, joined to the Size, to obtain the base price.<br />3.) One Query per Topping, to obtain the topping price.<br /><br />In all, we get nine individual SQL queries to compute the total price of our single fictional order. The proof is in the P6Spy's output, spy.log, truncated below:<br />
<pre>
select order0_.pizza_order_id as pizza1_2_, order0_.version ...
select pizzas0_.pizza_order_id as pizza4_2_, pizzas0_.pizza_id ...
select pizzas0_.pizza_order_id as pizza4_2_, pizzas0_.pizza_id ...
select pizzas0_.pizza_order_id as pizza4_2_, pizzas0_.pizza_id ...
select toppings0_.pizza_id as pizza1_1_, toppings0_.topping_id ...
select toppings0_.pizza_id as pizza1_1_, toppings0_.topping_id ...
select toppings0_.pizza_id as pizza1_1_, toppings0_.topping_id ...
select toppings0_.pizza_id as pizza1_1_, toppings0_.topping_id ...
select toppings0_.pizza_id as pizza1_1_, toppings0_.topping_id ...
</pre>
<br />If your application is totaling up the price of Pizza orders all day, this can really add up! An alternative approach is to use two named queries to compute the total base price, and total topping price, for an order. For example, we might add the following annotation to the Pizza class:<br />
<pre lang="java">
@NamedQueries(
{
@NamedQuery(
 name="basePrice",
 query="select SUM(p.size.basePrice) " +
       "  from Pizza p " +
       " where p.order.id = :orderId"),
@NamedQuery(
 name="toppingPrice",
 query="select SUM(topping.price) " + 
       "  from Pizza p join p.toppings as topping " +
       " where p.order.id = :orderId")
})
</pre><br />Then, you could add the following methods to the OrderDao:<br />
<pre lang="java">
public BigDecimal nullGuard(Query query) {
  BigDecimal result = (BigDecimal)query.getSingleResult();
  return (result == null ? new BigDecimal(0) : result);
}

public BigDecimal getOrderPrice(Integer orderId) {
  Query query1 = getEntityManager().createNamedQuery("basePrice");
  query1.setParameter("orderId",orderId);
  Query query2 = getEntityManager().createNamedQuery("toppingPrice");
  query2.setParameter("orderId", orderId);
  return nullGuard(query1).add(nullGuard(query2));
}
</pre>
<br />...and call into the DAO from the Model class, thusly:<br />
<pre lang="java">
public BigDecimal getOrderPriceRight(Integer orderId) {
  return this.orderDao.getOrderPrice(orderId);
}
</pre><br />When we run the P6Spy test now, we see a meager two queries where we used to have nine:<br />
<pre>
select SUM(size1_.pizza_size_base_price) as col_0_0_ from PIZZA ...
select SUM(topping2_.topping_price) as col_0_0_ from PIZZA ...
</pre>
<br />It pays to periodically use a tool like P6Spy on your application, to look for easy wins like this one!<br /><br />I've included a complete working eclipse project that demonstrates this... it's actually a tweaked version of the earlier Pizza Shop project. You can get it <a href="http://www.mikedesjardins.us/pizzashop-2.0.tar.gz">here</a>.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>27</wp:post_id>
<wp:post_date>2008-03-04 19:57:00</wp:post_date>
<wp:post_date_gmt>2008-03-05 00:57:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>pizza-shop-2-totaling-the-jpa-order-use</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008_03_01_archive.html</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860481</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>15</wp:comment_id>
<wp:comment_author><![CDATA[French Fry]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-03-05 10:08:00</wp:comment_date>
<wp:comment_date_gmt>2008-03-05 16:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I don't know under JPA but under a pure hibernate use it is possible to set a properties to show the sql that hibernate generate.<br/><br/>something like hibernate.show_sql=true]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>16</wp:comment_id>
<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-03-20 15:09:00</wp:comment_date>
<wp:comment_date_gmt>2008-03-20 21:09:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Love what you have to say here :)<br/>your background is making me dizzy though]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>17</wp:comment_id>
<wp:comment_author><![CDATA[Brian Reindel]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-03-24 15:10:00</wp:comment_date>
<wp:comment_date_gmt>2008-03-24 21:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Mike, thanks for the kind words and the link. I guess you could call it an essay :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>18</wp:comment_id>
<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-03-27 11:46:00</wp:comment_date>
<wp:comment_date_gmt>2008-03-27 17:46:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Too often UI is bad because the stakeholder are trying to do too much with app. It's rarely the developer's fault. I guess every developer essentially wants a simple UI that gets the job done without confusing the user. Sometimes developers are forced to accommodate ill conceived UI request that tends to either complicate the internal implementation of the app and throw in a huge layer of complexity for the user.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>20</wp:comment_id>
<wp:comment_author><![CDATA[Martin]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-04-18 09:40:00</wp:comment_date>
<wp:comment_date_gmt>2008-04-18 15:40:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[How would you inject the current user if you were persisting an object from a remote JVM, such as a remote Swing client asking your EJB to updating some object fields?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Using JavaMail to read and extract attachments</title>
<link>http://mikedesjardins.us/wordpress/2008/03/using-javamail-to-read-and-extract/</link>
<pubDate>Thu, 13 Mar 2008 13:12:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[java]]></category>

		<category domain="category" nicename="java"><![CDATA[java]]></category>

		<category><![CDATA[javamail]]></category>

		<category domain="category" nicename="javamail"><![CDATA[javamail]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/03/using-javamail-to-read-and-extract-attachments/</guid>
<description></description>
<content:encoded><![CDATA[Recently I had to create a JavaMail-based e-mail client that polled an IMAP server for incoming e-mail messages.  The client needed to read each message, find any attachments, and save those attachments to a directory on the application server.   I had never had a need to do this with the JavaMail API before, so I did the first thing that many developers do when they're venturing into unknown territory, and Google'd for an example.  I found lots of examples of sending attachments, but not many of receiving them.  The few examples that I did find of receiving mail with the JavaMail API were too simple.  So I had to figure out how to do it by (gasp) reading the documentation.  Fortunately, it wasn't very difficult, but I thought I'd share it for the next programmer that turns to Google for a solution.<br /><br />In my application, I used the <a href="http://www.opensymphony.com/quartz/">Quartz</a> library to periodically call a method named <span style="font-weight: bold;">receive</span>, which does the grunt work of pulling stuff off the server.  This code is similar to other examples you might find out there Google'ing, and it's pretty mundane stuff.  The MailReceiveException is a catch-all Exception class that I wrote:<br />
<pre lang="java">
public Message[] receive(String server, String user, 
                         String password, String directory) 
                 throws MailReceiveException {
  Message[] msgs;
  Store store = null;
  Folder folder = null;
  try {
    store = session.getStore("imap");
    store.connect(server, user, password);
    folder = store.getDefaultFolder();
    if (folder == null) {
      throw new MailReceiveException("No default folder");
    }
    folder = folder.getFolder("INBOX");
    if (folder == null) {
      throw new MailReceiveException("No IMAP INBOX");
    }
    folder.open(Folder.READ_WRITE);
    msgs = folder.getMessages();
    for (int i=0; i<msgs.length; ++i) {
      Message msg = msgs[i];
      // don't fetch messages that we've already processed
      if (!msg.isSet(Flags.Flag.SEEN)) {
        String from = "unknown";
        if (msg.getReplyTo().length >= 1) {
          from = msg.getReplyTo()[0].toString();
        } else if (msg.getFrom().length >= 1) {
          from = msg.getFrom()[0].toString();
        }
        String subject = msg.getSubject();
        String filename = directory + "/" + from + ": " + subject;
        // This is where the real work will get done.
        this.saveParts(msg.getContent(), filename);
        msg.setFlag(Flags.Flag.SEEN,true);
      } else {
        // Delete anything that is more than sixty days old.
        Date receivedOn = msg.getReceivedDate();
        GregorianCalendar cal = new GregorianCalendar();
        cal.add(GregorianCalendar.DATE,-60);
        if (receivedOn.before(cal.getTime())) {
          msg.setFlag(Flags.Flag.DELETED, true);
        }
      }
    }

    // Rats' nest of catch blocks omitted... make sure you close 
    // the folder and the mail store in a finally block, as well 
    // as expunge any messages that have been marked for deletion.

  }
  return msgs;
}
</pre><br />There's one small detail that I had to learn the hard way, and that is that the "Parts" within Multipart MIME messages can themselves contain other Parts.  So you have a nifty opportunity to use some of that fancy recursion stuff that you learned about in your "Intro to Programming" course! <br />
<pre lang="java">
public void saveParts(Object content, 
                       String filename) 
             throws MailReceiveException {
  OutputStream out = null;
  InputStream in = null;
  try {
    if (content instanceof Multipart) {
      Multipart multi = ((Multipart)content);
      int parts = multi.getCount();
      for (int j=0; j<parts; ++j) {
        MimeBodyPart part = (MimeBodyPart)multi.getBodyPart(j);
        if (part.getContent() instanceof Multipart) {
          // part-within-a-part, do some recursion...
          this.saveParts(part.getContent(), filename);
        } else {
          String type = part.getContentType();
          String extension = "";
          if (part.isMimeType("text/html")) {
            extension = "html";
          } else {
            if (part.isMimeType("text/plain")) {
              extension = "txt";
            } else {
              // Try to make a reasonable guess about the  
              // extension from the MIME type.
              int end = type.indexOf(';');
              if (end < 0) {
                end = type.length();
              }
              extension = type.substring(type.indexOf('/')+1,end);
            }
            filename = filename + "." + extension;
            out = new FileOutputStream(new File(filename));
            in = part.getInputStream();
            int k;
            while ((k = in.read()) != -1) {
              out.write(k);
            }
          }
        }
      }
    }
  } catch (MessagingException e1) {
    log.error("Messaging Exception", e1);
    throw new MailReceiveException("Error fetching e-mail");
  } catch (IOException e2) {
    log.error("Caught IOException reading e-mail.", e2);
    throw new MailReceiveException("Error fetching e-mail");
  } finally {
    if (in != null) {
      try {
        in.close();
      } catch (IOException e6) {
        log.error("Unable to close input stream");
      }
    }
    if (out != null) {
      try {
        out.flush();
        out.close();
      } catch (IOException e7) {
        log.error("Unable to close output stream.");
      }
    }
  }
}
</pre><br />All of this work was done using JavaMail 1.3.  I believe newer versions of the API have a <span style="font-weight: bold;">savePart</span> method, so you don't need to write out the parts to a FileOutputStream byte-by-byte as I have above.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>103</wp:post_id>
<wp:post_date>2008-03-13 08:12:00</wp:post_date>
<wp:post_date_gmt>2008-03-13 13:12:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>using-javamail-to-read-and-extract</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860505</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/03/using-javamail-to-read-and-extract.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Five Keys to Corporate Programmer Happiness</title>
<link>http://mikedesjardins.us/wordpress/2008/03/five-keys-to-corporate-programmer/</link>
<pubDate>Wed, 19 Mar 2008 13:22:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[programming]]></category>

		<category domain="category" nicename="programming"><![CDATA[programming]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/03/five-keys-to-corporate-programmer-happiness/</guid>
<description></description>
<content:encoded><![CDATA[I've worked as a programmer and as a manager of programmers for about twelve years now.  Many people believe that the key to productivity is content employees, and I tend to agree with that too.  Here are some low-cost ideas for things which either make me happier, or make the programmers on my team happier.<br /><br /><span style="font-weight: bold;">1.) Allow time for side-projects related to the business.</span>  I think this item is critically important!  Any programmer worth his or her salt will look at the way that things are done, and think of ways that it could be done better.  The problem is that we're usually so immersed in core business needs that we don't have an opportunity to improve the systems that are already in place.  These improvements might be a new development tool, refactoring an existing code base, evaluating a new library or language, or adding a nifty feature to an existing product.  I've seen lots of great things come out of this "play time," and as a manager I tried (with limited success) to set aside specific time on Friday afternoons for these pursuits.  In the end, the product gets better in unexpected ways, and the programmers have fun, so everybody wins!<br /><br /><span style="font-weight: bold;">2.) Start a Peer Recognition Program.</span>  This one will seem a little silly to people at first, and it will undoubtedly be a source of endless office jokes.  But a lot of people <span style="font-style: italic;">do</span> respond to peer recognition; setup an internal website where employees can recognize their colleagues for a job well done.  And it's even better to sweeten the pot by giving out small prizes, like gift certificates, to participants chosen at random.   Programmers don't get (or give) a lot of kudos from (or to) each other, and this helps grease the wheels.<br /><span style="font-weight: bold;"><br />3.) Send Programmers to Training or Trade Shows.</span>  It's <span style="font-style: italic;">especially</span> nice if you can afford to send programmers on a junket somewhere for their training.  It doesn't need to be glamorous!  Take  someone who lives in New England; A week in Pittsburgh, away from the grind of the daily work cycle, in a new place, going out to eat on the company dime and meeting other similarly-minded folks, can be a blast, and (best of all) can re-energize the creative drive.  If you can't afford to send the developers on trips, then a day or two off at a local course is great, too.  Make sure the training is for something that a developer might be interested in - new and interesting stuff is good, COBOL optimization techniques maybe not so much.<br /><span style="font-weight: bold;"><br />4.) Socialize. </span> Believe it or not, not every programmer is a daylight-hating, mumbling, uncomfortable Asperger's poster-child.  Go out some night after work for a few beers.  It's also good to bring some non-programmers from the business along.  Day in and day out, we tend to become e-mail addresses or IM nicks to each other. We forget that we're all human beings suffering in the same cubicle hell until we can get home and get on with our real lives.   Getting together outside the office, for fun, reminds us who we actually are.  If you and Alice-from-Accounting talk about the aging Tim Wakefield's potential (or lack thereof) as a Red Sox pitcher for another season over a beer, then dealing with her I.T. problem the next day will seem like less of a chore, and more like helping out a friend.<br /><span style="font-weight: bold;"><br />5.) Cut down on the paperwork</span>.  In a SAS70/ISO/SarBox world, a certain amount of due process is unavoidable.  The larger a company (and its coffers) get, the more signatures and sign-offs are needed to do <span style="font-style: italic;">anything</span>.  Try to set up your organization so that programmers can focus on programming.  Programmers are excited by problem solving, and making things more efficient.  We like faster, smaller, better;  that's what we do, it's what we're good at.  Paperwork and process are the antithesis of those things.  I'm not saying that you shouldn't design software carefully and deliberately, but if you're spending more time in conference calls reviewing  documentation than writing code, you're probably not a happy programmer.<br /><br />I'm sure there are things that I've missed, and I'm sure this list doesn't apply to everyone, but these are the things that have worked for me and a lot of the people I've worked with.  Hope it helps!]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>104</wp:post_id>
<wp:post_date>2008-03-19 08:22:00</wp:post_date>
<wp:post_date_gmt>2008-03-19 13:22:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>five-keys-to-corporate-programmer</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860459</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/03/five-keys-to-corporate-programmer.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>65</wp:comment_id>
<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-03-20 16:09:00</wp:comment_date>
<wp:comment_date_gmt>2008-03-20 21:09:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Love what you have to say here :)<br/>your background is making me dizzy though]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>66</wp:comment_id>
<wp:comment_author><![CDATA[Justin George]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-03-20 16:10:00</wp:comment_date>
<wp:comment_date_gmt>2008-03-20 21:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Step zero: Don't work for non-programmers ;)<br/><br/>Seriously, companies that don't have a 100% understanding of how to handle programmers should outsource to those that do.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>67</wp:comment_id>
<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-03-23 00:14:00</wp:comment_date>
<wp:comment_date_gmt>2008-03-23 05:14:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Wow...I think it's ideas like this that give developers a poor image. I'm sure these 5 suggestions don't work for everyone.  The trick is to identify what motivates each individual and use that to motivate them if it makes sense.  If developers want to keep software jobs in the US, they need to know that the business isn't there to serve developers, but developers are there to serve the business.  If the money and the work isn't enough to motivate developers, they are clueless about how good they have it.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>68</wp:comment_id>
<wp:comment_author><![CDATA[mike desjardins]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-03-23 05:29:00</wp:comment_date>
<wp:comment_date_gmt>2008-03-23 10:29:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[@Anonynous - I agree, and I didn't mean to imply that this list was an itemization of "demands"!  It's merely a bunch of ideas that I had which have worked for me and my colleagues in the past, and nothing more.  Believe it or not, there are some programmers who aren't *that* motivated, on a day-to-day basis, by money.  And there are programming shops that have trouble with attrition even though they pay fairly.  Maybe these ideas will help, maybe not, but I thought it wouldn't hurt to offer them!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>69</wp:comment_id>
<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-03-23 09:53:00</wp:comment_date>
<wp:comment_date_gmt>2008-03-23 14:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[There's something about these recommendations that make me feel that some programmers are out of touch with what it means to work for an employer who is paying you good money to do a job.  Now of course, it's the employers responsibility to make working conditions attractive to find and retain good people, plus it's good for business, but good working conditions aren't the same as motivation.  Motivation is primarly the responsibility of the employee.  Once you accept the job, you agree to do what the employer needs you to do for the company to be successful at the pay you agreed to.  If you have any doubt what that means, make believe you own a small company and the revenue is barely enough to give you an income to pay your own bills.  Would you be sending people on junkets to motivate them?  Would you have programmers doing work that isn't vital to the current revenue commitments to the business to motivate them?  I think the only one of your 5 recommendations I agree with is to socialize, but that's less about motivation than it is about creating a pleasant work environment.  If you think the only reason the answer to those questions is no is because the company has an inadequate revenue stream, you'd be wrong.  My best employees and my most motivated employees are the ones who understand what the employer/employee relationship is all about.  They understand that motivation is their responsibility and no one elses, and they come to work everyday thinking about how they can make their employers successful because they know their own success is tied to the success of their employers.  Their emphasis is what they can do to make their employer more successful, not what the employer can do to make them more happy and motivate.<br/><br/>There are many reasons for unmotivated employees. Sometimes the work environment contributes to that or the work itself, but many times, this is a problem of the employee being in the wrong line of work, a maturation issue, or some other influences (relationship, money, mental illness, etc...).  Applying any of those 5 recommendations to cure those motivation issues never helps.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>More on Happiness at Work</title>
<link>http://mikedesjardins.us/wordpress/2008/03/more-on-happiness-at-work/</link>
<pubDate>Mon, 24 Mar 2008 20:49:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/03/more-on-happiness-at-work/</guid>
<description></description>
<content:encoded><![CDATA[There's an awesome article over on <a href="http://blog.reindel.com/2008/03/24/the-hard-truth-regarding-employee-happiness/">d'bug</a> that makes my recent post look, well, pretty sophomoric.  Their article gets more to the root-cause of why we like to be propped up with perks all the time, instead of just punching the timeclock and doing our jobs like our father's generation.  There's a lot of text, but it's a great read.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>105</wp:post_id>
<wp:post_date>2008-03-24 15:49:00</wp:post_date>
<wp:post_date_gmt>2008-03-24 20:49:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>more-on-happiness-at-work</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/03/more-on-happiness-at-work.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>70</wp:comment_id>
<wp:comment_author><![CDATA[Brian Reindel]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-03-24 16:10:00</wp:comment_date>
<wp:comment_date_gmt>2008-03-24 21:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Mike, thanks for the kind words and the link. I guess you could call it an essay :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Anatomy of a Project Failure: Corporate Culture and Lessons Learned</title>
<link>http://mikedesjardins.us/wordpress/2008/03/anatomy-of-project-failure-corporate/</link>
<pubDate>Tue, 25 Mar 2008 11:12:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[outsourcing]]></category>

		<category domain="category" nicename="outsourcing"><![CDATA[outsourcing]]></category>

		<category><![CDATA[programming]]></category>

		<category domain="category" nicename="programming"><![CDATA[programming]]></category>

		<category><![CDATA[wireless]]></category>

		<category domain="category" nicename="wireless"><![CDATA[wireless]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/03/anatomy-of-a-project-failure-corporate-culture-and-lessons-learned/</guid>
<description></description>
<content:encoded><![CDATA[<span style="font-weight: bold;"></span>When a big new project lands in a company's lap, the instincts of upper management, while well intentioned, are usually to go with people and paradigms that have worked in the past.<br />The culture of my former employer was forced to change suddenly to support new business, and it ultimately resulted in failure.  I've had several months now to think about what happened.  In retrospect, a lot of it could have been avoided if the company's leaders had ignored their instincts, and been daring enough to rely more on different people with the right expertise.<br /><br />This is more long-winded than most of my posts, so those with short attention spans should probably turn back now!<br /><br /><span style="font-weight: bold;">Background</span><br />I started working for a small company (fewer than 20 employees) in 2000 that provided billing services to small, rural wireless carriers in the United States.  That company eventually grew to about sixty employees and was acquired by another medium-sized company about three years later.  The new company provided other services to wireless companies, but lacked a post-paid billing platform.  It seemed like a perfect fit.  The smaller billing company would become a satellite office for the corporate mothership.<br /><br /><span style="font-weight: bold;">A Corporate Culture Shift</span><br />In the past, the team working on the billing system had been allowed a lot of latitude to work independently from the corporate mothership. However, this was a high-profile project with a large national carrier, so the company decided to bring in a lot of its leadership's "big guns," who had experience with large carriers.  Unfortunately, they had little or no experience in the business domain, namely post-paid wireless billing.<br /><br />Unlike the small team that had managed the product in the past, the new folks had little sense of what the carrier's priorities <span style="font-style: italic;">should</span> be.  This new team included client relations representatives, many of the project managers, and even a majority of the technical team.  The people who had dutifully supported the small billing program for so many years would continue to work in "maintenance mode" on the existing platform for the existing rural clients.  The implication was clear - they'd been relegated to the "less important" clients.<br /><br /><span style="font-weight: bold;">The User Interface</span><br />The billing system had a user interface which allowed representatives at the customer call centers to change things for the subscriber in real time - things like rate plans, billing addresses, automatic payment, allowed managers to configure their own rate plans and user privileges and roles, and it even had an integrated Point-of-Sale system.<br /><br />The system was "good enough," but barely.  Unfortunately, it was written using a poorly supported, obscure 4/GL whose scalability was in doubt.  Deploying it at carrier sites also created some sketchy security issues.  We had been meaning to re-write it for a long time, but didn't have the resources to do so.  It wasn't going to be good enough for our new client.<br /><span style="font-weight: bold;"></span><br /><span style="font-weight: bold;">Offshoring to the Rescue</span><br />At about that time, the parent company acquired another company in India that processed payments for wireless carriers.  Suddenly we had nearly limitless programming resources at our disposal.  All we'd need to do is mock up some new screens, write a few specs, and send the work to our new development staff.  We'd "keep a close eye" on their progress, strip the functionality down to the bare necessities, and we'd have a re-vamped UI in a matter of months.  As an added bonus, the new programmers already knew Java, so we wouldn't need to re-train any of the existing workforce to get started.<br /><br />The first thing the new leadership did was to consult with a UI expert to do the mockups - one that (of course) had no experience with the product or with wireless carriers.  She was mentored by a product manager who had very little experience with post-paid billing.<br /><br />Fortunately for me, I got to work on a SOAP-based API for the product to integrate with the other elements of the back-end.  I saw the train wreck coming with the UI project, and I managed to avoid it.  I worked quite independently with another contractor based near the corporate mothership.<br /><br /><span style="font-weight: bold;">Reviewing the Mockup</span><br />The first thing we did was review the new UI mockups.  The new leadership had the right idea, and decided that it might be a good to include some people familiar with the "legacy" system in the review. The legacy team was horrified.  The new application looked completely dysfunctional.  Naturally, the "new team" got defensive and insisted that the crufty old-timers were thinking too much in the past, that this was the future. Their comments fell on deaf ears.  They weren't invited to participate any more.<br /><br /><span style="font-weight: bold;">Developing the UI</span><br />So here's how development worked:  The company hired some brand-new Java superstar contractors to work in their corporate office to "oversee" the development effort.  The contractors were great Java programmers, but they had literally zero business domain knowledge.  Every morning, they would get onto a conference call with India to review the previous night's work and discuss the next day's priorities.<br /><br />Nobody on the project knew if they were doing it right.  There was no connection between the back-end and the wireframes.  They started consulting me with business-related questions, and I helped out where I could, but that ended up being like the game of telephone that you play in grade school - things are lost when they are translated three times over, and communicated over a garbled conference call and IM.  The rest of the legacy team was too busy supporting the existing customers to help answer questions.<br /><br />So domain knowledge continued to drip very slowly from wherever it could, over to the mothership, and finally to India.  Too slowly.  They began to sit idly on a UI that, because it followed the mockups religiously, was fairly unusable.<br /><br />Eventually, the developers on the other side of the ocean started to get fed up, and were leaving the company.  I couldn't blame them, and the fact that there are so many jobs available in that market made it easy for them to leave.  What little domain knowledge had been built up was constantly fading away. They began hiring furiously, which compounded the problem further.<br /><br />I heard complaints from the superstar contractors that the quality of the work was a bit sketchy.  I imagine that the quality of the work must have worsened as the rate of turnover increased.  We started bringing on extra contractors stateside to help out.  Have you ever read Brooks' <span style="font-style: italic;">The Mythical Man Month</span>?  Yeah, he knew what he was talking about.  Adding developers to a late project makes it later.<br /><br />One night I was visiting the mothership, as I had to do almost weekly to keep up with the latest news on the project (it was about an hour-long drive from our satellite office).  We were weeks away from the launch date.  The lead UI developer called me into his cubicle and asked if I could spare a few minutes.  We started reviewing the UI, and he began asking me how to wire up the pages with the back-end.  We looked at page after page and I told him "you can't do that - it doesn't make sense," or "we have no feature like that, I don't know what it is supposed to mean."<br /><br />We were supposed to use my SOAP API to do the business logic, but they had laid none of the groundwork for it.  The programmers were pretty good at calling stored procedures.  So, on page after page, I told him I'd write a stored procedure to do the work.  Add a rate plan?  I'll throw together a procedure.  View the customer detail?  Yup, that too.  We started eliminating unnecessary pages, buttons, and fields left and right.<br /><br />The next day I started hacking frantically on a raft of stored procedures that did most of the back-end logic for the UI, and I did a pretty mediocre job.   I was in a hurried marathon session, and I like to believe that I did the best that I could given the circumstances, but at that point it was definitely all about volume, not quality.  Work on the API was pretty much halted, but it was nearly finished anyways.  Soon it was time to start training the call center.<br /><br /><span style="font-weight: bold;">Was the Customer Happy?</span><br />Fortunately, the client had problems of their own with ramping up.  Their operations people were initially satisfied with the product because they had very little experience in the business domain, either.  But it didn't last.<br /><br />As time went on, and more experienced management was hired by the carrier, they became incredulous that the UI couldn't perform the simplest of tasks that competitor's systems could.  They were frustrated that it was so buggy.  However, the crappy Customer Care UI ended up being the least of the carrier's problems - that story is for another day.  Eventually, both companies more-or-less crashed and burned, which is why I hope it's safe to share this story with you now.<br /><br /><span style="font-weight: bold;">Takeaways and Lessons that I Learned</span><br />So, here are the things that I can impart based on what happened to this project:<br /><ul><li><span style="font-weight: bold;">Domain Knowledge is king. </span> Programmers are a tenacious bunch, and we can learn technology fairly well.  Years of insight from business relationships can't be learned overnight.  The mothership had the roles reversed - the big guns with experience with big carriers should have been mentoring the employees with the domain knowledge, instead of the other way around.</li><li><span style="font-weight: bold;">Working with people half a world away is hard.</span>  I don't think that it had anything to do with the fact that the offshore programmers were in India.  I think it would have been just as difficult if they had been Canadian or Australian or any other English-speaking country.  India has plenty of talented programmers. But sharing domain knowledge becomes even harder over conference calls, Skype, and IM.  When developing an application in a short timespan, you need to be able to holler questions over the cubicle wall, or grab a whiteboard on a moment's notice, which isn't an option when offshoring.  I'm sure the Indian team was just as frustrated as we were.  I know that there are companies out there who have been successful at this, but it's difficult to pull off, and our company didn't manage to do it.  There are probably tools out there to make this easier - do you know of any that you can recommend?<br /></li><li><span style="font-weight: bold;">The User Interface is the Face of the Application.</span>  Your UI probably needs the most attention, and probably gets the least.  Your client's perception of the quality of your product and engineering is largely based on what they see.  Our billing back-end was quite sophisticated and managed to scale well enough, but the client didn't see that.  They saw the crummy exception messages and the things that they couldn't do from the interface.  You can often fake the back-end for a while by throwing more people and process at fixing problems - you can't easily fake quality in your UI.  To the client, our whole product was crap because the quality of the UI was poor, and this should be obvious to everyone.  Have you ever worked with a pathetic UI, and concluded that the company did a shoddy job of engineering?<br /></li></ul>Phew!  What a long post.  Thanks for sticking it out and reading the whole thing.  I'd be interested in hearing if anyone else has gone through a similar situation, and their company found ways to overcome the knowledge gap.  Have you been in an acquisition where your formerly tightknit team had to integrate and ramp up within a new corporate culture?  How'd you get through it?]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>106</wp:post_id>
<wp:post_date>2008-03-25 06:12:00</wp:post_date>
<wp:post_date_gmt>2008-03-25 11:12:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>anatomy-of-project-failure-corporate</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860445</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/03/anatomy-of-project-failure-corporate.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>71</wp:comment_id>
<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-03-27 12:46:00</wp:comment_date>
<wp:comment_date_gmt>2008-03-27 17:46:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Too often UI is bad because the stakeholder are trying to do too much with app. It's rarely the developer's fault. I guess every developer essentially wants a simple UI that gets the job done without confusing the user. Sometimes developers are forced to accommodate ill conceived UI request that tends to either complicate the internal implementation of the app and throw in a huge layer of complexity for the user.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>72</wp:comment_id>
<wp:comment_author><![CDATA[Helga]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-03-27 16:12:00</wp:comment_date>
<wp:comment_date_gmt>2008-03-27 21:12:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I have participated in a number of distributed projects, (or off-shoring if you like).  There are basically two ways to make this work (and a million ways to make it fail):<br/><br/>1. One of the team contains the expertise and the other team is the implementation team. This works if the problem domain is well known to the expert team and the expert team has created a very detailed requirement / design document.  We're basically talking waterfall here - all design decisions up front and rigorous.  In this case the implementation team has something to build on, but the expert side must follow the day to day development closely.  It helps if the implementation team has some experience in a similar problem domain.<br/><br/>2. The distributed team have different roles and/or different expertise.  For example, right now I am working on a project for a fairly large operator in the US.  We have the development team in Europe, the custom relation part is in the US; product management is handled jointly and in a fairly iterative manner.  The domain expertise is distributed and there is quite a bit of overlap between the teams.  This is going pretty well, even if the two teams have never actually met face to face.<br/><br/>The most common breakdown in these kind of working relationship is when there is a misunderstanding of what the "other side" knows.  The experts think that the other side knows more than they do and / or the implementation team underestimate the complexities of the the domain expertise or overestimate their own understanding of the domain.<br/><br/>I do think that your analysis of why this failed is accurate (i.e. underestimation of the value of the domain expertise) and off-shoring had nothing to do with it, even if it seems to have been poorly managed. <br/><br/>This was an interesting read.  I think we sometimes underestimate the value of learning from things that go wrong (for whatever random reason) - even if those stories are often much more valuable than bragging about things that go right (for even more random reasons).]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>73</wp:comment_id>
<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-03-27 17:47:00</wp:comment_date>
<wp:comment_date_gmt>2008-03-27 22:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In my experience all Indian offshore resources are good for (with a handful of exceptions) is software maintenance and testing not UI design.<br/><br/>Sounds like your business requirements were poorly designed and documented - this only makes offshore coding harder.<br/><br/>Try the "Eastern Bloc" next time for a better experience and people who really know how to write and run agile code projects.<br/><br/>Involve your end users in the requirements gathering process. <br/><br/>Map requirements to features then to specs then to test scripts.<br/><br/>Then create a rapid release schedule based around incremental delivery of features and functionality.<br/><br/>Then put twice as much effort than last time at communications and management.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>76</wp:comment_id>
<wp:comment_author><![CDATA[Willie]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-03-28 18:14:00</wp:comment_date>
<wp:comment_date_gmt>2008-03-28 23:14:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Good post.  Too often people talk about the UI as if it's purely cosmetic.  UI is a key factor in determining whether the end user's tasks are properly supported, and consequently in determining whether the larger business process is properly supported.  I saw one example where a manager was supposed to manually review 1,000+ line items (each of which required an individual click) at the end of each month as a control for an important risk.  Obviously that UI made some optimistic assumptions about what normal humans can/will do and so the result was that the required control did not *actually* exist, even though the software putatively supported it.<br/><br/>Add to that the fact that the wrong UI can give rise to the wrong business process altogether.  Lots of times people build their processes around technology instead of the other way around.<br/><br/>UI is a big deal!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Pizza Shop III : JPA Event Listeners</title>
<link>http://mikedesjardins.us/wordpress/2008/03/pizza-shop-iii-jpa-event-listeners/</link>
<pubDate>Mon, 31 Mar 2008 17:44:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[hibernate]]></category>

		<category domain="category" nicename="hibernate"><![CDATA[hibernate]]></category>

		<category><![CDATA[java]]></category>

		<category domain="category" nicename="java"><![CDATA[java]]></category>

		<category><![CDATA[jpa]]></category>

		<category domain="category" nicename="jpa"><![CDATA[jpa]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/03/pizza-shop-iii-jpa-event-listeners/</guid>
<description></description>
<content:encoded><![CDATA[This comment was recently posted to one of my blog entries a while back:<br /><br /><blockquote><span class="PostFooter">Let us consider I am adding  'CreatedBy'  and 'ModifiedBy' columns in all the tables to be used for audit purposes. Ideally these columns would be populated by the user id who has logged into the application.   - @Madhan</span><br /><br /></blockquote>So, let's say your data model has some tables with a columns that indicate <a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/1764153258_11bbbcb337-715981.jpg"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer; width: 234px; height: 175px;" src="http://mikedesjardins.us/blog/uploaded_images/1764153258_11bbbcb337-715955.jpg" alt="" border="0" /></a>the last person who touched a record, like Madhan's example above.  In most applications, the end-users of the database client share a common login to the database, and have individual logins which are specific to the application's domain (i.e., you don't have a database login mapped to each end user; maintaining this scheme would be a nightmare).  For that reason, triggers can't be used as a solution, because database triggers don't know anything about which application end-user is responsible for making a data change.<br /><br />The last thing you want to do is litter your codebase with snippets of code that set the username on your persisted objects manually; not only is it unnecessary duplication, but you'll probably also end up missing cases where you should be setting the username.<br /><br /><span style="font-weight: bold;">EventListeners to the Rescue</span><br />Fortunately, JPA supports the notion of "EventListeners."  An event listener intercepts many of the API calls that modify a persisted object's lifecycle, and thus may be used to inject business logic that needs to be duplicated over many different objects.  AOP aficionados might refer to this as a cross-cutting "aspect" of the domain layer.<br /><br /><span style="font-weight: bold;">Return to the Pizza Shop</span><br />Readers of my blog (all three of them, including me) might recall my venerable Pizza Shop example.  Here are the earlier Pizza Shop posts if you'd like to catch up:  <a href="http://mikedesjardins.us/blog/2008/01/new-jpa-tutorial-pizza-shop.html">Part 1</a> and <a href="http://mikedesjardins.us/blog/2008/03/pizza-shop-2-totaling-jpa-order-use.html">Part 2</a>. I'm going to drag the Pizza Shop out again to demonstrate how to create an "audited" table, which shows the last user who modified a record. As always, the source is available <a href="http://mikedesjardins.us/pizzashop-3.1.tar.gz">here</a>, and it's been tested against MySQL, Postgres, and MS SQL Server, with Hibernate, OpenJPA, and TopLink.<br /><br />This takes just five easy steps... four, really, 'cuz the fourth step creates a mock object for testing, so it doesn't really count!<br /><br /><span style="font-weight: bold;">Step One - New schema</span><br />Add a nullable column named username to the Order table... something like this should work if you have existing pizzashop schema for some reason:<br />
<pre lang="sql">alter table ORDER add username varchar(10)
</pre><br /><span style="font-weight: bold;">Step Two - Create an Interface and Implement It</span><br />This step isn't strictly necessary, but it's probably safe to assume that we'll want to add this functionality to other tables someday.  The interface just adds accessor methods for the username:<br />
<pre lang="java">
public interface AuditedObject {
  public String getUsername();
  public void setUsername(String username);
}
</pre><br />Then, make the Order table implement AuditedObject.  Add a member variable with a mapping to the username column to the Order table, and corresponding accessor methods:<br />
<pre lang="java">
public class Order implements IdObject, AuditedObject {
.
.  
  @Basic @Column(name="username")
  private String username;
.
.
  public String getUsername() {
      return username;
  }
  public void setUsername(String username) {
      this.username = username;
  }
.
.
}
</pre><br /><br /><span style="font-weight: bold;">Step Three - Add an EntityListener Annotation</span><br />This is the secret sauce.  In the JPA Framework, EventListeners allow you to fire some trigger code when a lifecycle event occurs on a persisted object.  You do this by associating your persisted class with an EventListener class.  We'll implement our EventListener class after we've added the following annotations:<br />
<pre lang="java">
@Entity @Table(name="PIZZA_ORDER")
@EntityListeners(AuditedEntityListener.class)
public class Order implements IdObject, AuditedObject {
.
.
</pre><br /><br /><span style="font-weight: bold;">Step Four - Write a Mock Object for the Username for Testing</span><br />In the real world, you'd probably stuff the username into the servlet context object.  For our simple tests, we'll need to mock up an object to maintain a username for the duration of our tests.  It can be something stupidly simple, like this:<br />
<pre lang="java">
public class MockContext {
  private static String username;

  public static String getUsername() {
      return username;
  }
  public static void setUsername(String username) {
      MockContext.username = username;
  }
}
</pre><br />We'll set the username at the start of our tests, and read the username from our MockContext from the EventListener.<br /><br /><span style="font-weight: bold;">Step Five - Write the EntityListener class</span><br />JPA allows you to inercept method calls using seven annotations:<br /><ul><li>@PrePersist and @PostPersist are called before and after an object is persisted.  </li><li>@PreUpdate and @PostUpdate are called before and after synchronization with the database.  @PreRemove and @PostRemove are called before and after an object is removed from the persistent state.</li><li>@PostLoad is invoked immediately after an object is loaded from the database.</li></ul>In our case, we're going to populate the username instance variable when the object is persisted, so we will want to create an EntityListener class with the @PrePersist annotation.  The method's signature takes an Object parameter which is the object getting updated, and returns void.  The class will look something like this:<br />
<pre lang="java">
public class AuditedEntityListener {
  @PrePersist
  public void updateUser(Object o) {
      if (o instanceof AuditedObject) {
        String username = MockContext.getUsername();
        ((AuditedObject)o).setUsername(username);
      }
  }
}
</pre><br /><span style="font-style: italic;">Voila</span>!  When you run the tests, the username fields are populated and persisted!<br /><br />Audit M&amp;M's Photo Courtesy <a href="http://josephhall.org">Joe Hall</a>.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>107</wp:post_id>
<wp:post_date>2008-03-31 12:44:00</wp:post_date>
<wp:post_date_gmt>2008-03-31 17:44:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>pizza-shop-iii-jpa-event-listeners</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229559320</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/03/pizza-shop-iii-jpa-event-listeners.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>80</wp:comment_id>
<wp:comment_author><![CDATA[Martin]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-04-18 10:40:00</wp:comment_date>
<wp:comment_date_gmt>2008-04-18 15:40:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[How would you inject the current user if you were persisting an object from a remote JVM, such as a remote Swing client asking your EJB to updating some object fields?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>81</wp:comment_id>
<wp:comment_author><![CDATA[John]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-04-18 20:08:00</wp:comment_date>
<wp:comment_date_gmt>2008-04-19 01:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[this is nice!<br/><br/><br/>what about @PreRemove and @PostRemove.  Cant update a record that isnt there.  Guess you set a flag on the table and mark as "removed".  Thats pretty nasty though.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Motivation and Goals</title>
<link>http://mikedesjardins.us/wordpress/2008/04/motivation-and-goals/</link>
<pubDate>Thu, 10 Apr 2008 01:21:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[programming career]]></category>

		<category domain="category" nicename="programming-career"><![CDATA[programming career]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=28</guid>
<description></description>
<content:encoded><![CDATA[I've been thinking a lot about motivation lately.  I think I've concluded that there are two basic types of motivation.<br /><br />Today, I had lunch with a friend who is competing in two triathlons this year.  She's motivated to do it because it's something <span style="font-style: italic;">she</span> decided to do, which I see as the first kind of motivation.  When you are striving to reach a goal that you set for yourself, you are motivated by whatever caused you to set the goal initially.  It's still difficult to get out and train every day to reach that goal, but because you <span style="font-style: italic;">own</span> the goal, you try harder to find the motivation within yourself to put your running shoes on and go outside.<br /><br />The other kind of motivation you need to summon is at your job, and for me, that's a lot more difficult.  The reason, I believe, is rooted in goal setting and ownership.  I didn't set the end-of-year profit goals for the company, someone decided it for me.  I didn't decide to complete the XYZ project on time and under budget, some steering committee decided it.  Finding the motivation within myself to achieve a goal that someone else owns is difficult for me.<br /><br />I think this is why people, including me, find entrepreneurship to be so alluring.   At that point, my company goals become my goals, and my motivation (should) become easier.<br /><br />Goal ownership is also how I can find the motivation to work on side-projects and blogging long after I should have turned the computer off. <br /><br /><span style="font-weight: bold;">Getting Goals to work, at Work</span><br />I suspect that the periodic employee/manager review process is designed to correct this goal-setting problem, but it doesn't.  Most of the review processes I've been involved with, both as a manager and employee, have involved a stage where goals are set for the following review period.  In my experience, the output of the corporate goal-setting process has been so rote and contrived that it has never yielded anything motivational.<br /><br />This is why I think that "owning" a part of your product is so important.  I think people need something to take pride in and call their own.  When that happens, goals set themselves.  And when goals set themselves, motivation follows.  And motivation drives quality and efficiency, which any company should want.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>28</wp:post_id>
<wp:post_date>2008-04-09 19:21:00</wp:post_date>
<wp:post_date_gmt>2008-04-10 01:21:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>motivation-and-goals</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008_04_01_archive.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>19</wp:comment_id>
<wp:comment_author><![CDATA[Paisano]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-04-15 21:16:00</wp:comment_date>
<wp:comment_date_gmt>2008-04-16 03:16:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Excellent post and totally agree! Not dead at all, but radically morphing and changing direction and platform. Things like the iphone and the promise of Android (vaporware at this point) make the mobile web appear ever exciting.<br/><br/>Adding wifi to cellphones is also enhancing the experience. I've been getting Blackberry Curves with Wifi and my users love it.<br/>More models are adding wifi as well.<br/><br/>Good stuff. I liked your graphics as well. <br/><br/>Pai]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>21</wp:comment_id>
<wp:comment_author><![CDATA[Ujj]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-04-23 22:09:00</wp:comment_date>
<wp:comment_date_gmt>2008-04-24 04:09:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Couldn't agree more. I like blogging because it creates an ecosystem that does not respect any rock stars. It gives everyone the same power to opine, but most people who read and follow blogs eventually start giving some bloggers a celebrity status and consume everything that comes their way, which makes the whole idea of blogging pointless. May be we will one day see political evangelists too.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>23</wp:comment_id>
<wp:comment_author><![CDATA[Jennifer]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-05-29 19:30:00</wp:comment_date>
<wp:comment_date_gmt>2008-05-30 01:30:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You were totally the man.  It is a known fact.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Blown away by Django</title>
<link>http://mikedesjardins.us/wordpress/2008/04/blown-away-by-django/</link>
<pubDate>Fri, 11 Apr 2008 01:35:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[python django]]></category>

		<category domain="category" nicename="python-django"><![CDATA[python django]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/04/blown-away-by-django/</guid>
<description></description>
<content:encoded><![CDATA[OK, so usually I try to put together some cohesive ideas in my head before I start writing.  I like to have a clear introduction, followed by a few well-thought out points, and a conclusion.  But I'm just so psyched right now I can't even do that.<br /><br />Listen - <a href="http://www.djangoproject.com">Django</a> is <span style="font-weight: bold;">awesome</span>. <br /><br />I've been a Java developer for a while now.  When Rails first came out, and it started getting its hype overload about two years ago, I downloaded it.  I didn't get it... I didn't see what the fuss was about.  It just seemed like a hodgepodge of 1.) scripts to automatically build stuff, 2.) a template engine, and 3.) a pretty nice ORM framework.  <br /><br />I've always been a fan of Python, and I heard that Django was kinda sorta Python's analog to Ruby's Rails.  So I tried it, and <span style="font-weight: bold;">wow</span>.  It's so easy to get something working in short order!  So far I've created a very small, bare-bones, reddit-esque submit-and-vote thing with Ajax vote buttons, user sign-ups, etc.  The only thing it's missing is comments.  And styling - it really looks like crap right now, otherwise I might share it with you.  But that will have to wait a bit longer. <br /><br />I did all of this stuff in a matter of hours.  By contrast, my simple little RSS aggregator with no database backend (<a href="http://devfunnel.com">devfunnel</a>) took about a month of project time during the evenings, and I still wouldn't really call that project "finished" yet.  I did that project with Java and Apache Wicket.<br /><br />But when it comes down to it, Django is really just 1.) scripts to automatically build stuff, 2.) a template engine, and 3.) a pretty nice ORM framework.  With Rails, I think I couldn't get past the fact that it was Ruby.  Ruby has always seemed really foreign to me.  I'm not sure why - people say "it's just like Perl," but it's not.  Not to me, anyway. I know Perl.  I can read it.  Ruby just seems inaccessible to me. I can't be the only one who feels that way.<br /><br />I'm not sure how well it would scale (from a code-maintenance perspective, not performance) to a large-scale project with scores of pages and hundreds of database tables, but I know that other people have figured that out, (e.g., I think The Washington Post's site is Django-based) so it must be possible. <br /><br />Anyway, I just needed to rave about Django.  It's awesome.  It's great that I'm having <span style="font-weight: bold; font-style: italic;">fun</span> developing web apps!]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>109</wp:post_id>
<wp:post_date>2008-04-10 20:35:00</wp:post_date>
<wp:post_date_gmt>2008-04-11 01:35:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>blown-away-by-django</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/04/blown-away-by-django.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>More about motivation</title>
<link>http://mikedesjardins.us/wordpress/2008/04/more-about-motivation/</link>
<pubDate>Tue, 15 Apr 2008 12:45:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[career]]></category>

		<category domain="category" nicename="career"><![CDATA[career]]></category>

		<category><![CDATA[motivation]]></category>

		<category domain="category" nicename="motivation"><![CDATA[motivation]]></category>

		<category><![CDATA[programming]]></category>

		<category domain="category" nicename="programming"><![CDATA[programming]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/04/more-about-motivation/</guid>
<description></description>
<content:encoded><![CDATA[<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/63661031_6e7e96da63-774642.jpg"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer; width: 281px; height: 211px;" src="http://mikedesjardins.us/blog/uploaded_images/63661031_6e7e96da63-774622.jpg" alt="" border="0" /></a>I find myself writing about programmer motivation a lot.  I think it's because my career is at somewhat of a crossroads.  I just got done reading a <a href="http://foundread.com/2008/04/15/the-motif-of-employee-motivations-and-how-to-leverage-them/">wonderful post at foundread.com by Carleen Hawn</a> about motivation, and it was great to reflect on how it related to my situation.<br /><br />At my previous job, I was rockstar superman-go-to-guy for the wireless billing system that I was working on.  I know that this sounds arrogant and boastful as hell. Admittedly, I was a bit of a programmer prima donna.  But when it came to knowledge of the inner-workings of our particular product, it at least <span style="font-style: italic;">felt</span> like I was the man.  Part of that was not only understanding the software, but understanding the business as well.<br /><br />When that gig started to dry up, it became time to find new work, and I found myself at a local financial services company.  In doing so, I fell from my position of glory to "just another programmer."  I was promised that I would someday get to the more prestigious position of architect again.  But that takes time - a lot of it.  Grokking the system that the guys here have spent years working has been more difficult than I thought it would be.  Understanding the business that we're in is just as difficult, and it's clear to me that <a href="http://mikedesjardins.us/blog/2008/03/anatomy-of-project-failure-corporate.html">understanding the business</a> is what's important to ascend the ranks to an architects' role.<br /><br />At my "new" job (I've been here for months, it's hardly new anymore), I struggle sometimes with motivating myself.  After reading the aforementioned <span style="font-style: italic;">"The Motif of Employee Motivations</span>," I think I understand why.  The role I crave is to be the guy that understands the business, and how the entire system meets that need.  I like being the guy who gets asked questions by the business analysts and the other engineers.  At my current job, I haven't yet achieved that.  Being an impatient person by nature, it's frustrating to see how far away the day will be that I attain that role.  And I'm not sure how to get there from here.<br /><br />The thing that I find the most insightful is that this motivates me beyond just my career - it motivates me to blog, and it motivates me to work on my "side projects."  I think it's also what makes me dream of being an entrepreneur. <br /><br />But actually knowing what motivates me now helps a lot.  Perhaps now I'm on my way to getting there.<br /><br />Photo credit: <a href="http://www.flickr.com/people/paal/"><span class="RealName"><span class="fn n"><span class="given-name">Paal</span> <span class="family-name">Leveraas</span></span></span></a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>110</wp:post_id>
<wp:post_date>2008-04-15 07:45:00</wp:post_date>
<wp:post_date_gmt>2008-04-15 12:45:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>more-about-motivation</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/04/more-about-motivation.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>86</wp:comment_id>
<wp:comment_author><![CDATA[Jennifer]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-05-29 20:30:00</wp:comment_date>
<wp:comment_date_gmt>2008-05-30 01:30:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You were totally the man.  It is a known fact.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>The Mobile Web&#039;s Death has been Greatly Exaggerated</title>
<link>http://mikedesjardins.us/wordpress/2008/04/the-mobile-webs-death-has-been-greatly/</link>
<pubDate>Wed, 16 Apr 2008 01:42:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[wireless]]></category>

		<category domain="category" nicename="wireless"><![CDATA[wireless]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/04/the-mobile-webs-death-has-been-greatly-exaggerated/</guid>
<description></description>
<content:encoded><![CDATA[<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/193548748_a8b5293268-712714.jpg"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer;" src="http://mikedesjardins.us/blog/uploaded_images/193548748_a8b5293268-712677.jpg" alt="" border="0" /></a><a href="http://www.russellbeattie.com/blog/the-end-of-mowser">A recent blog post</a> by Russell Beattie somberly announced the end of his company, <a href="http://www.mowser.com/">Mowser</a>.  According to Mowser's about page, Mowser "mobilizes the web by taking HTML pages normally viewed on a PC and adapts them so they work on a mobile phone."  In his post, Beattie says that "I don't actually believe in the "Mobile Web" anymore," and from that, some people have extrapolated that Beattie is proclaiming that the Mobile Web is Dead.<br /><br /><span style="font-weight: bold;">But Read What He's Actually Saying</span><br />If you read further, and ignore the <a href="http://www.readwriteweb.com/archives/is_the_mobile_web_dead.php">provocative headlines</a>, and understand what Beattie is actually saying, he's not claiming the Mobile Web is dead at all:<br /><blockquote><br />"I think anyone currently developing sites using XHTML-MP markup, no Javascript, geared towards cellular connections and two inch screens are simply wasting their time [...]"</blockquote><br />This is hardly the death of the mobile web (shame on you, <a href="http://www.readwriteweb.com/">ReadWriteWeb</a>!).  All that this means is that the rules of the game have changed.<br /><br /><span style="font-weight: bold;">What "The Mobile Web" Used to Be</span><br />What do people mean when they talk about the Mobile Web?  I think the usual context of the question is "how can we get people to look at our content from their mobile device?"  In the past, simply presenting one's content on the mobile web was a challenge.  Browser technology was abysmal.  CSS and JavaScript were out of the question.  "Adapted" sites were developed in the crippled WML markup, or other <a href="http://en.wikipedia.org/wiki/Imode">proprietary formats</a>, which made the browsing experience more reminiscent of using <a href="http://en.wikipedia.org/wiki/Gopher_%28protocol%29">Gopher</a> than a <a href="http://www.operamini.com/">real web browser</a>.  Services like <a href="http://www.mowser.com/">Mowser</a> and <a href="http://www.skweezer.net/">Skweezer</a> were created to adapt the existing, vibrant content into low-fi versions for phones.<br /><br /><span style="font-weight: bold;">What "The Mobile Web" Is</span> <span style="font-weight: bold;">Today</span><br />What I took away from Russell Beattie's post was that the need for tools like Mowser and Skweezer have been obviated by advances in mobile browser technology.  Does this mean that the mobile web is dead?  Of course not!  And, as far as I can tell, Beattie wasn't even claiming that to be the case.  Instead, I think the definition of the mobile web is changing.<br /><br />The internet is comprised of three types of pages (behold my amazing <a href="http://www.omnigroup.com/applications/omnigraffle/pro/">OmniGraffle</a> skills):<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/mobile-web-715962.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://mikedesjardins.us/blog/uploaded_images/mobile-web-715956.png" alt="" border="0" /></a>There are sites that are intended for viewing on a stationary computer, and sites that are intended for viewing on a mobile device.  There is also a huge overlap of pages that work well for both contexts.  This is because the barrier of<span style="font-style: italic;"> how to present</span> data on a mobile device, which was initially a barrier, has been mostly overcome.<br /><br />Examples of using sites in the "purple zone" on a mobile device might be<br /><ul><li>Wikipedia - looking up a bit of trivia when among friends at a coffee shop (got this one from Tichy on <a href="http://news.ycombinator.com/">News.YC</a>... thanks, Tichy!)</li><li>IMDB - looking up who the did the voice in the Pixar film that you just saw with your kids.</li><li>Google Maps - Wandering around in Chicago, and you want to know, what the heck is that building?<br /></li></ul>It's perhaps the most difficult to define sites in the "red" PC-Only area.  I can think of a few:<br /><ul><li>Items requiring intensive keyboard work, like <a href="http://writer.zoho.com/jsp/home.jsp?serviceurl=%2Findex.do">word processing</a> or <a href="http://www.blogger.com/">blogging</a>.<br /></li><li>Anything involving heavy graphics, such as online games (and pornographic sites?  Perhaps I'm just old-fashioned)<br /></li><li>Number-crunching or mathematical modelling and simulations.<br /></li></ul><span style="font-weight: bold;">Where Does This Leave the Mobile Web?</span><br />So, what is left in the light blue section?  It has to do with context.  What does someone with a mobile device look at, that a person browsing from a PC or laptop does not?  What makes a mobile device unique?  Well, <span style="font-style: italic;">duh</span>, it's mobility!<br /><br />For years people have been prophecizing the coming of Location Based Services.  I think that this area has lots of potential.  Companies like <a href="https://loopt.com/loopt/sess/index.aspx">Loopt</a> have married social services with location awareness to create a compelling product that started out on Boost and Sprint, and it is supposedly coming to other carriers soon.  Similarly, <a href="http://www.meetro.com/">Meetro</a> combines location and Instant Messaging.  There are companies who produce audio tours which are location-aware.  Fleet management services are exploring the mobile web for business opportunities.  It's not hard to imagine that the next killer app is waiting to be discovered in this space, making our iPhones indispensible.  Mobile devices have now advanced to the point where it's Location-Based Services turn to shine.<br /><br /><span style="font-weight: bold;">The New Mobile Web</span><br />The key is context.  What do people need from the web when they're using a mobile device?  What do you think?<br /><br />Graveyard Photo Credit: <a href="http://www.flickr.com/photos/qole/">Qole Pejorian</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>111</wp:post_id>
<wp:post_date>2008-04-15 20:42:00</wp:post_date>
<wp:post_date_gmt>2008-04-16 01:42:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>the-mobile-webs-death-has-been-greatly</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860395</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/04/mobile-webs-death-has-been-greatly.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>78</wp:comment_id>
<wp:comment_author><![CDATA[Paisano]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-04-15 22:16:00</wp:comment_date>
<wp:comment_date_gmt>2008-04-16 03:16:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Excellent post and totally agree! Not dead at all, but radically morphing and changing direction and platform. Things like the iphone and the promise of Android (vaporware at this point) make the mobile web appear ever exciting.<br/><br/>Adding wifi to cellphones is also enhancing the experience. I've been getting Blackberry Curves with Wifi and my users love it.<br/>More models are adding wifi as well.<br/><br/>Good stuff. I liked your graphics as well. <br/><br/>Pai]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>79</wp:comment_id>
<wp:comment_author><![CDATA[Tamara Gruber]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-04-16 09:31:00</wp:comment_date>
<wp:comment_date_gmt>2008-04-16 14:31:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I agree, we wrote a post about this yesterday at http://tinyurl.com/5w97ya.  The mobile web is evolving and premium publishers still require a mobile site to deliver an optimized experience, even with the iPhone and other browsers on the horizon.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>82</wp:comment_id>
<wp:comment_author><![CDATA[james]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-04-19 17:06:00</wp:comment_date>
<wp:comment_date_gmt>2008-04-19 22:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Great post - I use this overlapping circles model myself.  My view is that "mobile only' sites may actually increase over time as phones get better and can support more attractive "native" services.  Time will tell.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Programmers as Rock Stars - The Next Level</title>
<link>http://mikedesjardins.us/wordpress/2008/04/programmers-as-rock-stars-next-level/</link>
<pubDate>Wed, 23 Apr 2008 23:56:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[industry]]></category>

		<category domain="category" nicename="industry"><![CDATA[industry]]></category>

		<category><![CDATA[programming]]></category>

		<category domain="category" nicename="programming"><![CDATA[programming]]></category>

		<category><![CDATA[social]]></category>

		<category domain="category" nicename="social"><![CDATA[social]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/04/programmers-as-rock-stars-the-next-level/</guid>
<description></description>
<content:encoded><![CDATA[<img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer;" src="http://mikedesjardins.us/blog/uploaded_images/tabloid-751008.jpg" alt="" border="0" />I've been a fan of Michael Arrington's <a href="http://www.techcrunch.com/">TechCrunch</a> blog for awhile now.  So I was a little horrified when I read today's article "<a href="http://www.techcrunch.com/2008/04/23/amateur-hour-over-at-twitter/">Amateur Hour Over at Twitter?</a>"  The article was about the departure of Twitter's Chief Architect, Blaine Cook.  In the article, Arrington doesn't pull any punches, and takes Cook to task for Twitter's scalability problems:<br /><blockquote>"Cook was directly responsible for scaling Twitter, and he very much failed in his job."</blockquote>I'll set aside the question of whether or not this claim is even true.  And I won't even consider the legal ramifications of levying such claims.  Perhaps Arrington knows a lot more about rapidly scaling realtime communications systems, and the inner-workings and politics of Twitter, Inc., than most of us do.<br /><br />This amateurish outburst made me ponder the rock-star status to which we now elevate some programmers and system architects.  There are a lot of geeks to whom we bestow a (perhaps unhealthy) share of idolatry, many of whom don't even need their full names to be recognized: DHH, Guido, Linus, PG, Scoble, Spez, Steve (and his evil twin, FSJ), and, yes, even Arrington.  I could probably name dozens more.  Many of us pay a lot of money to be in the same room with these people, and hear them speak.<br /><br />Was Blaine Cook at this level of stardom?  Probably not.  But he did give talks and apparently kept a blog about the challenges of scaling a project so quickly.  He was Chief Architect of arguably the hottest social service on the internet.  Perhaps that's enough to become a target.<br /><br />Arrington's job is to attract eyeballs.  Eyeballs sell ads and (presumably) promote speaking engagements.  At its essence, TechCrunch is not that much different than a traditional magazine.  From where I sit, TechCrunch gleefully taunted a guy who left his job, forceably or otherwise.  What company does that put TechCrunch in when compared to traditional media?  Who follows the <span style="font-style: italic;">real</span> rock stars around, revelling in their success and revelling even more when they crash hard?<br /><br />Michael Arrington needs to decide what TechCrunch is.  Is it <span style="font-style: italic;">The Wall Street Journal</span>?  Or is it <span style="font-style: italic;">The Star</span>?  The tabloids at the supermarket checkout get lots of eyeballs by celebrating the latest misery of Britney or Lindsey or Brad &amp; Angelina.  If that's what TechCrunch is selling, then I ain't buying.<br /><br />Photo Credit: <a href="http://www.flickr.com/people/emutree/">Eric Mutrie</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>112</wp:post_id>
<wp:post_date>2008-04-23 18:56:00</wp:post_date>
<wp:post_date_gmt>2008-04-23 23:56:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>programmers-as-rock-stars-next-level</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860413</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/04/programmers-as-rock-stars-next-level.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>83</wp:comment_id>
<wp:comment_author><![CDATA[Ujj]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-04-23 23:09:00</wp:comment_date>
<wp:comment_date_gmt>2008-04-24 04:09:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Couldn't agree more. I like blogging because it creates an ecosystem that does not respect any rock stars. It gives everyone the same power to opine, but most people who read and follow blogs eventually start giving some bloggers a celebrity status and consume everything that comes their way, which makes the whole idea of blogging pointless. May be we will one day see political evangelists too.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>84</wp:comment_id>
<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-04-24 04:53:00</wp:comment_date>
<wp:comment_date_gmt>2008-04-24 09:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ecosystem?  More like Egosystem.<br/><br/>If you wanna see "Programmers as Rock Stars" done right, look no further than the musical instrument business .. <br/><br/>Christoph Kemper, creator of the Access Virus synthesizer, is a rock star programmer.  Either you jam with him, or you don't ..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Your Digital Legacy</title>
<link>http://mikedesjardins.us/wordpress/2008/05/your-digital-legacy/</link>
<pubDate>Thu, 01 May 2008 16:11:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[social]]></category>

		<category domain="category" nicename="social"><![CDATA[social]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=29</guid>
<description></description>
<content:encoded><![CDATA[<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/shey-monastery-flame-736593.jpg"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer;" src="http://mikedesjardins.us/blog/uploaded_images/shey-monastery-flame-736542.jpg" alt="" border="0" /></a>I'm a big fan of Nate Weiner's <a href="http://www.ideashower.com/">Idea Shower</a>.  He recently wrote a really good <a href="http://www.ideashower.com/blog/what-will-the-web-see-when-you-die/">blog post</a> entitled "What Will the Web See When You Die?"  In it, he wrote about the death of a snowboarding colleague, and how the traditional media publications cobbled a rather terse biography of the man by copying some of his profile information from a company website.    His post was a good read.  <a href="http://www.ideashower.com/blog/what-will-the-web-see-when-you-die/">Go read it</a>.  Check out his other stuff, too, he's brilliant.<br /><br />Anyway, the story reminded me of one of my former colleagues who committed suicide a few years ago (in fact, I left a comment about it on Nate's blog... most of this post is just an expansion of that comment!).  He died several years after we had drifted apart (he had moved out to the west coast, and I moved back up to Maine), so I didn't find out about it until months after it happened.<br /><p>After I found out, the first thing that I did was go to his web site.  There he was, smiling at the camera for a blog entry about how his and his girlfriend's guacamole dip recipe. I found it rather eerie that his web site stayed up for so long after his death. I found myself re-visiting it days later, perhaps I was half-expecting new content to magically appear. Eventually the site just disappeared into the ether.<br /></p> <p>At the time I wondered if I should keep a copy of it and host it as sort of a tribute to him, but in the end I decided it was better to let the site go with him; keeping it was like the parents you read about who lose a child and can’t bring themselves to redecorate their room.  I doubt he would've wanted that.<br /></p> <p>In this age of caching pages and leaving parts of yourself scattered over the social web, it’s interesting to think that digital bits of your life will live on long after you die. Our lives are far shorter than the magnetic tapes and spinning disks that prop up the web.  In fact, my friend's pages are still in the <a href="http://www.archive.org/web/web.php">internet wayback machine</a>, so I didn't even need to save them.<br /></p><br /><span style="font-style: italic;">Photo Credit:  </span><a style="font-style: italic;" href="http://flickr.com/people/payalvora/">ReefRaff</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>29</wp:post_id>
<wp:post_date>2008-05-01 10:11:00</wp:post_date>
<wp:post_date_gmt>2008-05-01 16:11:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>your-digital-legacy</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008_05_01_archive.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>22</wp:comment_id>
<wp:comment_author><![CDATA[Eric Holsinger]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-05-29 13:21:00</wp:comment_date>
<wp:comment_date_gmt>2008-05-29 19:21:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That's cool. Maybe bcgi was the right place for you in many ways.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>28</wp:comment_id>
<wp:comment_author><![CDATA[shopping cart]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-07-16 00:09:00</wp:comment_date>
<wp:comment_date_gmt>2008-07-16 06:09:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi<br/><br/>It is a great and amazing post about software and java.I think it is very helpful for programmers.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Amp&#039;d Mobile, (Almost) One Year Later</title>
<link>http://mikedesjardins.us/wordpress/2008/05/ampd-mobile-almost-one-year-later/</link>
<pubDate>Wed, 14 May 2008 12:26:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[java]]></category>

		<category domain="category" nicename="java"><![CDATA[java]]></category>

		<category><![CDATA[programming]]></category>

		<category domain="category" nicename="programming"><![CDATA[programming]]></category>

		<category><![CDATA[wireless]]></category>

		<category domain="category" nicename="wireless"><![CDATA[wireless]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/05/ampd-mobile-almost-one-year-later/</guid>
<description></description>
<content:encoded><![CDATA[<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/ampdlogo-792920.jpg"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer; width: 220px; height: 166px;" src="http://mikedesjardins.us/blog/uploaded_images/ampdlogo-792909.jpg" alt="" border="0" /></a>It's been almost a year since <a href="http://en.wikipedia.org/wiki/Amp%27d_Mobile">Amp'd Mobile</a> imploded.  Amp'd Mobile was a Mobile Virtual Network Operator (MVNO).  This meant that they were a wireless carrier without a network - instead, they relied on a "real" national carrier's network (in Amp'd's case, Verizon's) to deliver voice and data services.  As one of the software architects who designed their central integration point and contributed to their billing platform, <span>I had a unique view into it's rise and abrupt demise</span>.  I've wanted to write a post about my experience for quite some time now, and I think that enough time has passed that I can safely speak my mind - both companies are more-or-less defunct at this point.<br /><br />I should note that all of these opinions are my own - <span style="font-weight: bold;">I don't speak on behalf of BCGI, Amp'd Mobile, or anybody else</span>.<br /><br /><span style="font-weight: bold;font-size:130%;" >My Role</span><br />Amp'd Mobile <a href="http://www.prnewswire.com/cgi-bin/stories.pl?ACCT=104&amp;STORY=/www/story/03-15-2005/0003196252&amp;EDATE=">contracted</a> with my former employer, Boston Communications Group (usually known by its acronym, BCGI).  Among other things, BCGI sold a Postpaid Billing platform called Voyager.  Up until Amp'd Mobile, <span>Voyager's primary market was small, regional wireless carriers</span> with fewer than 100,000 subscribers.  Before Amp'd, the Voyager product didn't contribute much to BCGI's bottom line and served more as a product portfolio completer than as a real potential for revenue.  BCGI's main focus had instead been on Prepaid Wireless and Payment Services.<br /><br />My role was primarily to design and create a web service API to Voyager, so that other components in Amp'd's back office could interact with the billing system.  This not only included billing for voice and content, but also provisioning prepaid and postpaid services on Verizon's network, accepting payments, and providing a customer care UI for Amp'd's call center.  Additionally, I did some testing to gauge how well the system would scale once Amp'd added the half-million-or-so subscribers that they were projecting they'd have in their first year.<br /><br /><span style="font-weight: bold;"><span style="font-size:130%;">What Went Well</span><br /><span style="font-weight: bold;"></span></span><span>I really don't intend for this post to be an airing of dirty laundry.  Despite the implosion of both companies, there were a few things that went very well.</span><span style="font-weight: bold;"><span style="font-weight: bold;"></span><br /></span><ul><li>BCGI was a fairly stodgy company for its size, with a heritage in larger telecom and wireless companies like Verizon and EDS.  Having said that, they gave a lot of latitude to the developers involved with this project.  The pace of the development necessitated a more agile approach than BCGI was accustomed to, and <span style="font-weight: bold;">the upper management at BCGI did a good job of trying to accommodate the furious speed at which things needed to be done</span>.  A lot of the normal paperwork and bureaucracy was pushed aside to get things done more quickly, to everyone's benefit.<br /></li><li>Some of the development work for the project was offshored, with mixed success.  The projects that I'd consider successes related to components that did real-time provisioning of services with the carrier's network elements.  These projects were <span style="font-weight: bold;">small, self-contained, with clear objectives that did require a lot of business domain knowledge</span>.</li><li>With a few exceptions, the API scaled quite well.  <span style="font-weight: bold;">We quickly ramped up to support hundreds of thousands of transactions per day</span>. These came handsets, web sites, payment platforms, etc.<br /></li><li>Integration between our API and Amp'd's web components went very well.  <span style="font-weight: bold;">Developers  from geographically dispersed areas </span><span style="font-weight: bold;">used Instant Messaging quite extensively</span> to communicate, and it was a far more productive means of communication than the old "our developer talks to our project manager who talks to their project manager who talks to their developer" scheme that seems so pervasive in larger companies.<br /></li></ul><span style="font-size:130%;"><span style="font-weight: bold;">What Didn't Go Well</span></span><br />There wouldn't be much to write about if there weren't a few negatives in the postmortem, right?  So here they are; first, the technical Challenges:<br /><ul><li>Scaling the batch billing processes were more difficult than I anticipated.  When I did my initial testing, I used an existing carrier's data, and multiplied their user data gradually to project how quickly we'd be able to rate call records with larger carriers.  <span style="font-weight: bold;">I didn't count on the fact that my source carrier's subscribers made far fewer calls per subscriber than Amp'd's subscribers eventually made</span>.  Amp'd's market demographic was much younger than the demographic for the source data that I used, and younger subscribers make more calls.  In retrospect, this should have been obvious.<br /></li><li>Another scaling difficulty was caused by the manner by which we received call detail records.  Mediation is the process by which you obtain raw call records from a network device, and turn those records into a billable records in your billing system.  For a traditional carrier, this process takes place daily (at an absolute minimum) or more often as necessary.  In Amp'd's case, we received call records <span style="font-style: italic;">once per month</span>.  This meant that <span style="font-weight: bold;">we needed to process and rate over 50 million call records in a matter of hours</span>, which is no small feat.  It's especially difficult when you're using a billing system that was designed to mediate only hundreds of thousands of records daily, and bill an order of magnitude fewer records once per month.  We managed to scrape by, but there were some pretty severe growing pains.<br /></li><li><span style="font-weight: bold;">We didn't adequately anticipate the level of fraud that we encountered</span>.  We were required to make changes to head off fraud problems rather hurriedly, and that led to slapdash implementations that were prone to errors.</li><li>The customer care UI was buggy.  I previously did an <a href="http://mikedesjardins.us/blog/2008/03/anatomy-of-project-failure-corporate.html">entire post</a> just about that topic.<br /></li></ul>Of course, there were business-related challenges, too.<br /><ul><li>Most of the executive staff in <span style="font-style: italic;">both </span>companies (Amp'd and BCGI) had a lot of experience with prepaid environments and mobile content, but <span style="font-weight: bold;">very little experience in postpaid environments</span>.  This was particularly true when Amp'd Mobile was first getting started.  By the time Amp'd brought on more seasoned management with post-paid experience, it was already too late.  It's important to note that the postpaid business was about three-quarters of Amp'd's subscriber base.<br /></li><li>Because many of the key players came from a prepaid background, the enhancements that were requested for the platform often involved marketing content or prepaid services, instead off addressing fundamental business processes like billing and collections.   BCGI, itself of prepaid pedigree, was happy to oblige. <span style="font-weight: bold;">Thus, the limited development resources were allocated to content, marketing, and prepaid tasks instead of revenue assurance</span>,<span style="font-weight: bold;"> payment, </span><span style="font-weight: bold;">and other postpaid tasks</span>.  Sadly, Voyager had built-in collections modules that were never used by Amp'd because it was never a priority for them.  If this had been made a priority in the very beginning, Amp'd might still be in business today.</li><li><span style="font-weight: bold;">People still buy handsets with the intention to talk on them, not to purchase media content.</span>  When Amp'd launched, their voice plans were not competitive, and the rate of adoption was low.  I think the belief was that the content was a compelling enough reason to sell the phone.  However, having a good plan for good old send-to-end voice calls is still critical to attract new subscribers.  Once they adjusted their rate plans for this, net add rates improved significantly.<br /></li></ul><span style="font-size:130%;"><span style="font-weight: bold;">What I Learned</span></span><br />It's easy to armchair-quarterback the Amp'd experience.  I obviously have the benefit of hindsight.  Here are some of the things that I took away from the experience:<br /><ul><li>As I wrote in an earlier post, <a href="http://mikedesjardins.us/blog/2008/03/anatomy-of-project-failure-corporate.html"><span style="font-weight: bold;">business domain knowledge is key</span></a>.  If you're entering a new business space, make sure you have an expert on your side who knows what the pitfalls will be, from the very beginning.<br /></li><li><span style="font-weight: bold;">Building a national MVNO, particularly one that offers post-paid service, is a lot harder than it sounds.</span>  I think that a lot of people mistakenly believe that the only difficult part of building a nationwide wireless carrier is having the network.  But building the operational staff to support billing, credit, collections, and customer care is a huge undertaking that takes <span style="font-style: italic;">years</span> to get right at traditional carriers.  These critical business processes aren't cheap, either, even if you manage to outsource them.  I'm not sure if an MVNO can be competitive given the cost of using the host network, plus the cost of the back-office processes.</li><li><span style="font-weight: bold;">Always plan for fraud.</span>  The bigger you get, the bigger target you become for fraud.  Look at every process as a thief would - payment, distribution, service delivery, etc.  Everywhere in your system where there is something of value is a target.  Plan for it in advance.</li><li><span style="font-weight: bold;">Scalability tests might be less useful than you think they are.</span>  It's hard to predict how things will scale, and which APIs or processes will take the hardest beating.  It's probably safe to just assume that your processes will need to adapt quickly to cope with increased volume, and to be prepared for it by designing your processes to scale horizontally wherever possible.<br /></li><li><span style="font-weight: bold;">I had a blast</span>.  This project was one of the most rewarding experiences I've ever had as a developer, and it'll be a long time before I can top it.  I worked with some amazing people at Amp'd, BCGI, and a lot of Amp'd's other vendors.  The brainstorming sessions in Amp'd's amphitheater with the whiteboard is the stuff that developer/architect types love.  I still pine for the good old days when I felt like I was a part of something revolutionary in the wireless space.<br /></li></ul>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>114</wp:post_id>
<wp:post_date>2008-05-14 07:26:00</wp:post_date>
<wp:post_date_gmt>2008-05-14 12:26:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>ampd-mobile-almost-one-year-later</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/05/ampd-mobile-almost-one-year-later.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>104</wp:comment_id>
<wp:comment_author><![CDATA[shopping cart]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-07-16 01:09:00</wp:comment_date>
<wp:comment_date_gmt>2008-07-16 06:09:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi<br/><br/>It is a great and amazing post about software and java.I think it is very helpful for programmers.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Holy crap - I like to write specs!</title>
<link>http://mikedesjardins.us/wordpress/2008/05/holy-crap-i-like-to-write-specs/</link>
<pubDate>Thu, 29 May 2008 01:30:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[career]]></category>

		<category domain="category" nicename="career"><![CDATA[career]]></category>

		<category><![CDATA[programming]]></category>

		<category domain="category" nicename="programming"><![CDATA[programming]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/05/holy-crap-i-like-to-write-specs/</guid>
<description></description>
<content:encoded><![CDATA[<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/84056948_6d0dcc5728-756703.jpg"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer;" src="http://mikedesjardins.us/blog/uploaded_images/84056948_6d0dcc5728-756670.jpg" alt="" border="0" /></a>I had an amazing revelation at work last week.<br /><br />At my previous job, the company culture steadfastly clung to the waterfall model as the one true way to develop software.  The model was imposed as a series of documents with cryptic, archaic acronyms for names.  I actually had to draw a flowchart for my team to help them keep track of when each document was required in the life cycle of an enhancement request.<br /><br />No code was changed in our code-base without a minimum of literally five separate documents, each usually spanning tens of pages.  Project managers at the company enforced the production of these documents in a near-religious deference to "the process."  Each document was reviewed, often via conference call, to receive it's "stamp of approval" (basically a C.Y.A. cross-check) among the affected teams (usually development, production support, professional services, client management, security, perhaps others).<br /><br />It often felt as though I worked at a documentation company that happened to create software as a by-product.<br /><br />It was in this atmosphere that I first started reading about so-called Agile methodologies.  Iterative prototyping, unit testing, and tight user/developer communications, their practitioners argued, were a more effective way to deliver software that met customer expectations.  Because specifications change, and users don't know what they want, you're already behind schedule by the time you get done with all of that front-end junk.<br /><br />It all sounded so wonderful - too good to be true.  If only my company were more like that.<br /><br />Now I'm at a new job.  There's very little process here - it goes something like this: A nominal business analyst creates a document with a punch-list of specifications, and the developers go off and implement it.  That's it.<br /><br />You'd think I was in paradise!  I would be freed of the shackles of Microsoft Word, and I'd be able to churn out code as efficiently as possible.<br /><br /><span style="font-weight: bold;">What Really Happened</span><br />I soon discovered myself going in circles.  I'd spend a lot of time in front of the whiteboard drawing ERDs for the database, and then I wouldn't know where to go next.  Start Object-Relational mapping?  Hmm... seems to soon for that.  The business model?  And what is the business model... what does it need to do?  And will the business model's persistent data be adequately served by the data model on this white board?<br /><br />Maybe I'll just dive in and start implementing... Agile-style.  I guess that means I should start with the UI; how do I do the UI?  That's what the user wants, right?  The spec says I need to do such-and-such... I know!  I'll crate a UI, and wire it up to the model's interface, and mock-out the actual implementation of the model!  So there's really no ugly business model code to worry about.<br /><br />So what should the model's API's be?  What parameters do I need to pass around to make this thing re-usable?  Will I end up needing to refactor the whole thing to support some relationship I haven't considered yet?  Oh well.  Don't worry about that for now.<br /><br />And, by the way, the UI is just an admistrative, ancillary part of this project.  It's actually a batch process that runs nightly which is configured via the UI.  The UI isn't even technically necessary.  Am I putting the proverbial cart before the horse?  Hmmph - probably I shouldn't start with the UI, then.<br /><br />Hey - look at this whiteboard... an ERD... let's work on that for a while!<br /><br /><span style="font-weight: bold;">What Works for Me</span><br />What was actually wrong with my old job was the sheer volume of documentation, and the ratio of useful information to the total number of pages.  That documentation was almost never for me - it was for <span style="font-style: italic;">other people</span> (although I still wonder how valuable it really was to other people).<br /><br />Personally, I need something to ground the project.  I need a place to organize my thoughts.  For me, a "specification" isn't a giant UML class diagram that I slavishly adhere to, and keep in sync with the code at all times.  It's a place where I enumerate the affected components, discover how they interact, and itemize the work that needs to be done.  It's where I validate that the thing I'm about to build is going to come somewhat close to meeting the user's expectations.<br /><br />Sometimes, I share the document with other people.  Sometimes I don't.  But I've learned that personally, for me, I need a place to focus, and collect the pieces that need to interact, before I start writing.<br /><br />For some reason, this was an amazing revelation to me.  My experience at my last job had led me to believe that I was firmly in the anti-documentation camp.  It turns out that, in my case, that wasn't true at all. I need some documentation.  And I don't think it's true for everybody, either.  I'm sure there are people who are better at diving right in, and still others that want even more documentation than I do.<br /><br />What works for you?<br /><span style="font-style: italic;">Photo Credit: </span><a style="font-style: italic;" href="http://www.flickr.com/people/effbot/">Fredrik Lundh</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>115</wp:post_id>
<wp:post_date>2008-05-28 20:30:00</wp:post_date>
<wp:post_date_gmt>2008-05-29 01:30:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>holy-crap-i-like-to-write-specs</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/05/holy-crap-i-like-to-write-specs.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>85</wp:comment_id>
<wp:comment_author><![CDATA[Eric Holsinger]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-05-29 14:21:00</wp:comment_date>
<wp:comment_date_gmt>2008-05-29 19:21:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That's cool. Maybe bcgi was the right place for you in many ways.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Who is running that horrible Hibernate query?  Find out with comments</title>
<link>http://mikedesjardins.us/wordpress/2008/06/who-is-running-that-horrible-hibernate/</link>
<pubDate>Sun, 01 Jun 2008 11:32:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[portland]]></category>

		<category domain="category" nicename="portland"><![CDATA[portland]]></category>

		<category><![CDATA[silly]]></category>

		<category domain="category" nicename="silly"><![CDATA[silly]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=30</guid>
<description></description>
<content:encoded><![CDATA[<span style="font-weight: bold;">The Dreaded Search Function</span>
I've worked at several jobs where the users have asked for a general-purpose search function in their application.  It's the sort of thing where people want the ability to search on, e.g., all customers with a last name that starts with SM, or all of the customers with a balance greater than 1000.00, etc.

If you can resist the request to build such a thing, <span style="font-style: italic;">then by all means, <span style="font-weight: bold;">don't implement it</span></span>.  End-users have a knack for creating queries which will bring your database to its knees, no matter how clever you think you are with indexing or UI design.

If you must do it, you'll want to keep a close eye on how its used from the outset for when the inevitable nightmare query is run.  One way to do this is by using Hibernate's comments feature.

<span style="font-weight: bold;">Use Comments to Hunt them Down</span>
My colleague <a href="http://mattbrock.net/">Matt Brock</a> implemented something like this where we work. Suppose you have a general method for creating an HQL query in a DAO class, the method could look like this:

<pre lang="java">
protected Query createQuery(String hql) {
return getSession().createQuery(hql).setComment(getUsername());
}
</pre>

Next, make sure Hibernate's SQL logging and comment logging is enabled in your hibernate.hbm.xml (warning - this log can get pretty huge):

<pre lang="xml">
<hibernate-configuration>
  <session-factory>
      <property name="show_sql">true</property>
      <property name="use_sql_comments">true</property>
.
.
.

</pre>

Your log will now contain the users who are executing each query, like this:

<span style="font-size:78%;"><span style="font-family:courier new;">Hibernate: /* johndoe */ select customer0_.customer_id as col_0_0_, customer0_.cust_company_name from CUSTOMER customer0_ where (customer0_.customer_id=12136 or customer0_.customer_id=16884 or customer0_.customer_id=11150 or customer0_.customer_id=155 or customer0_.customer_id</span>
<span style="font-family:courier new;">=27265 or customer0_.customer_id=697 or customer0_.customer_id=4133 or customer0_.customer_id=248 or customer0_.customer_id=2550 or customer0_.customer_id=8449)</span>
</span>

One caveat: this may not work with stored procedures - SQL Server, in particular, will get nasty if you try to execute a stored procedure with Hibernate comments attached to it.

Happy Hibernating!]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>30</wp:post_id>
<wp:post_date>2008-06-01 06:32:00</wp:post_date>
<wp:post_date_gmt>2008-06-01 11:32:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>who-is-running-that-horrible-hibernate</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008_06_01_archive.html</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860252</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_old_slug</wp:meta_key>
<wp:meta_value>sign-at-my-favorite-coffee-shop</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>24</wp:comment_id>
<wp:comment_author><![CDATA[Neil Weber]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-06-13 14:23:00</wp:comment_date>
<wp:comment_date_gmt>2008-06-13 20:23:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Excellent idea!  But, I think it might be worthwhile to take in even further and, on all queries, include the class and method name of the code doing the query.  I say this because of my experience on an application with poor performance due to way too many queries.  I stepped through each query in the query log and determined what the query was doing and if it was really necessary.  This was tedious work made even more tedious by the difficulty in finding out what code was producing the query.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>25</wp:comment_id>
<wp:comment_author><![CDATA[Donald J Organ IV]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-06-17 14:42:00</wp:comment_date>
<wp:comment_date_gmt>2008-06-17 20:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The PHP code that Ken posts in his blog is normal code that contains functions that are in the framework he has created http://www.andromeda-project.org.  SO you cant get the full effect of the PHP side of things from some of his code.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>26</wp:comment_id>
<wp:comment_author><![CDATA[Rafael Rocha]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-06-24 11:22:00</wp:comment_date>
<wp:comment_date_gmt>2008-06-24 17:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[why do not use atributtes types for mapping object product otherwise productid?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>29</wp:comment_id>
<wp:comment_author><![CDATA[shopping cart]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-07-16 04:41:00</wp:comment_date>
<wp:comment_date_gmt>2008-07-16 10:41:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi<br/><br/>It is a great and nice post and I like it.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Sign at my favorite coffee shop</title>
<link>http://mikedesjardins.us/wordpress/2008/06/sign-at-my-favorite-coffee-shop/</link>
<pubDate>Sun, 01 Jun 2008 12:32:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[portland]]></category>

		<category domain="category" nicename="portland"><![CDATA[portland]]></category>

		<category><![CDATA[silly]]></category>

		<category domain="category" nicename="silly"><![CDATA[silly]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/06/sign-at-my-favorite-coffee-shop/</guid>
<description></description>
<content:encoded><![CDATA[I love this sign at my favorite coffee shop in Monument Square in downtown Portland:<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/052808_1504%5B00%5D-702634.jpg"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer; width: 404px; height: 538px;" src="http://mikedesjardins.us/blog/uploaded_images/052808_1504%5B00%5D-702630.jpg" alt="" border="0" /></a><br />I took it with my phone, so it's kinda blurry... it reads: "<span style="font-style: italic;">For optimum lid fit - Line up the Sipper Hole and Beverage Order Circles</span>."]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>116</wp:post_id>
<wp:post_date>2008-06-01 07:32:00</wp:post_date>
<wp:post_date_gmt>2008-06-01 12:32:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>sign-at-my-favorite-coffee-shop</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/06/sign-at-my-favorite-coffee-shop.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Alltel / Verizon Wireless - Requiem for the A-Side</title>
<link>http://mikedesjardins.us/wordpress/2008/06/alltel-verizon-wireless-requiem-for-a/</link>
<pubDate>Thu, 05 Jun 2008 17:49:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[wireless]]></category>

		<category domain="category" nicename="wireless"><![CDATA[wireless]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/06/alltel-verizon-wireless-requiem-for-the-a-side/</guid>
<description></description>
<content:encoded><![CDATA[<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/cell-phone-suit-733567.jpg"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer;" src="http://mikedesjardins.us/blog/uploaded_images/cell-phone-suit-733531.jpg" alt="" border="0" /></a>So I guess it's official: <a href="http://www.engadget.com/2008/06/05/verizon-alltel-merger-would-form-largest-carrier-in-the-us-by-f/">Verizon Wireless is acquiring rival Alltel Wireless for $28 billion</a>.  I had another topic in mind for my next post, but I decided to write about this market consolidation instead.  <br /><br />In a former life, I designed and did programming for billing systems for "tier three" (i.e., small, regional) wireless carriers.  In many ways, it's saddening to see what the mobile carrier landscape has become in the United States.  One of the things that made it fun to work in the industry was the funky, inspired little companies that were created by scrappy hometown entrepreneurs.  It took a certain amount of chutzpah and ingenuity to take on the behemoth teleco's, even if it was a small rural corner of East Podunk, U.S.A.<br /><br />Lots of people worked for the "Cellular Ones" of the world.  I met some folks who got pretty wealthy by building medium-sized businesses by taking on the incumbent wireline carrier in their neck of the woods.  These people hailed from small towns like Beckley, West Virginia, or Fort Morgan, Colorado, or Traverse City, Michigan.  A lot of the employees were self-trained and didn't have years of experience as Billing Directors or Network Engineers; sometimes it was so-and-so's brother-in-law who was appointed to be the "Switch Tech" because he was good with electronic stuff.<br /><br />I believe that these homegrown businesses are good for America.  The people who operate them care about their communities because they see their neighbors every day.  They hire local people to staff their call centers instead of outsourcing to distant continents.  Their leaders do business with their local friends.     These businesses help give their part of the world its own personality.<br /><br />At one time, I thought that MVNO's might fill this void - I had hoped that they could supplement the market with their own quirky personalities.  But so far, MVNO's have failed to gain much traction in the U.S.<br /><br />I realize that some good things will come from consolidation.  Bigger companies can often roll out better technology  more quickly.  It's harder for, e.g., a small time operation in Decatur, Illinois to roll out 3G data services, than it is for a Goliath like AT&amp;T or Verizon Wireless.  But I still mourn the loss of the tier-3's; for me, they exemplified the American entrepreneurial spirit.<br /><br /><span style="font-style: italic;">Photo Credit: </span><a style="font-style: italic;" href="http://www.flickr.com/people/kb35/">KB35</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>117</wp:post_id>
<wp:post_date>2008-06-05 12:49:00</wp:post_date>
<wp:post_date_gmt>2008-06-05 17:49:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>alltel-verizon-wireless-requiem-for-a</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860349</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/06/alltel-verizon-wireless-requiem-for-a.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>The Hibernate Song</title>
<link>http://mikedesjardins.us/wordpress/2008/06/the-hibernate-song/</link>
<pubDate>Fri, 06 Jun 2008 15:32:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[hibernate]]></category>

		<category domain="category" nicename="hibernate"><![CDATA[hibernate]]></category>

		<category><![CDATA[java]]></category>

		<category domain="category" nicename="java"><![CDATA[java]]></category>

		<category><![CDATA[jpa]]></category>

		<category domain="category" nicename="jpa"><![CDATA[jpa]]></category>

		<category><![CDATA[programming]]></category>

		<category domain="category" nicename="programming"><![CDATA[programming]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/06/the-hibernate-song/</guid>
<description></description>
<content:encoded><![CDATA[<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/spiderman-704658.png"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer;" src="http://mikedesjardins.us/blog/uploaded_images/spiderman-704633.png" alt="" border="0" /></a>(to the tune of <span style="font-style: italic;">The Spiderman Theme Song</span> from the original cartoon series)<br /><br />Hibernate, Hibernate<br />O/R Mapping sure is great<br />Gavin King, and H-Q-L<br />Make my life a living hell<br />Look out!  Here comes Hibernate!<br /><br />Mapping Files in Hibernate<br />Wish my team would annotate<br />Are its queries optimized?<br />Who knows - it's always a surprise<br />Hey there, there goes Hibernate!<br /><br />Don't fetch data now<br />Lazy load, 'cuz you might guess<br />I don't need it now<br />Hibernate, you do know best!<br /><br />Hibernate, Hibernate<br />Friendly neighborhood Hibernate<br />Grab the jars, and climb aboard<br />OO models are your reward<br />To it...<br />Relational DBs are old-school<br />When you need a complex tool<br />You need the Hibernate!]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>118</wp:post_id>
<wp:post_date>2008-06-06 10:32:00</wp:post_date>
<wp:post_date_gmt>2008-06-06 15:32:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>the-hibernate-song</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/06/hibernate-song.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>105</wp:comment_id>
<wp:comment_author><![CDATA[shopping cart]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-07-16 05:41:00</wp:comment_date>
<wp:comment_date_gmt>2008-07-16 10:41:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi<br/><br/>It is a great and nice post and I like it.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Use Hibernate Validators to find Nasty DataTruncation exceptions</title>
<link>http://mikedesjardins.us/wordpress/2008/06/use-hibernate-validators-to-find-nasty/</link>
<pubDate>Wed, 11 Jun 2008 01:14:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[hibernate]]></category>

		<category domain="category" nicename="hibernate"><![CDATA[hibernate]]></category>

		<category><![CDATA[java]]></category>

		<category domain="category" nicename="java"><![CDATA[java]]></category>

		<category><![CDATA[jpa]]></category>

		<category domain="category" nicename="jpa"><![CDATA[jpa]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/06/use-hibernate-validators-to-find-nasty-datatruncation-exceptions/</guid>
<description></description>
<content:encoded><![CDATA[If you develop Hibernate applications against either Sybase or MS SQL Server databases, you may have had the pleasure of seeing this little gem:<br /><br /><span style="font-size:78%;"><span style="font-family:courier new;">09:13:22,155  WARN [] org.hibernate.util.JDBCExceptionReporter - SQL Error: 0, SQLState: 22001</span><br /><span style="font-family:courier new;">09:13:22,155 ERROR [] org.hibernate.util.JDBCExceptionReporter - Data truncation</span><br /><span style="font-family:courier new;">09:13:22,155  WARN [] org.hibernate.util.JDBCExceptionReporter - SQL Error: 8152, SQLState: 22001</span><br /><span style="font-family:courier new;">09:13:22,155 ERROR [] org.hibernate.util.JDBCExceptionReporter - String or binary data would be truncated.</span><br /><span style="font-family:courier new;">09:13:22,159 ERROR [] org.hibernate.event.def.AbstractFlushingEventListener - Could not synchronize database state with session</span><br /><span style="font-family:courier new;"></span><span style="font-family:courier new;">.</span><br /><span style="font-family:courier new;">.</span><br /><span style="font-family:courier new;">.</span><br /><span style="font-family:courier new;">Caused by: java.sql.DataTruncation: Data truncation</span></span><br /><br />The most maddening thing about these errors is that the database won't tell you <span style="font-style: italic;">which</span> column is being truncated.  A likely scenario is that you've developed a Web or Swing UI that permits the user to enter a value for a String field which is ultimately persisted to a database column, and the UI is not restricting the maximum length of the user's input to the size of that the column supports.  The question is, which field is the offender?<br /><br /><span style="font-weight: bold;">Hibernate Validators to the Rescue!</span><br />Situations like this are why it's a pretty good idea to validate your data at the domain layer of your project, and not rely on your database and presentation layer to do all of the validation. Fortunately, Hibernate makes this pretty painless with validator annotations.  Just import the org.hibernate.validator.Length annotation, and add the @Length annotation in your entity class, e.g.:<br /><br />
<pre lang="java">
@Column(name="description",length=20)
@Length(max=20)
private String description;
</pre><br /><br />Note that putting the length attribute in the @Column annotation <span style="font-style: italic;">is not enough</span>.  That attribute is used for generating DDL, but will not cause any validation to take place.<br /><br />Now that our new Annotation is in place, we get the <span style="font-style: italic;">slightly</span> more useful stack-trace below:<br /><br /><span style="font-size:78%;"><span style="font-family:courier new;">org.hibernate.validator.InvalidStateException: validation failed for: us.mikedesjardins.data.persist.MyClass</span><br /><span style="font-family:courier new;">        at org.hibernate.validator.event.ValidateEventListener.validate(ValidateEventListener.java:148)</span><br /><span style="font-family:courier new;">        at org.hibernate.validator.event.ValidateEventListener.onPreInsert(ValidateEventListener.java:172)</span><br /><span style="font-family:courier new;">        at org.hibernate.action.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:119)</span><br /><span style="font-family:courier new;">.</span><br /><span style="font-family:courier new;">.</span><br /><span style="font-family:courier new;">.</span><br /><span style="font-family:courier new;"></span></span><br />Of course, you should catch these exceptions and do something less hostile with them.  For now, we'll just log the details and re-throw so you can get the general gist of what you can do.  Here's a generic insert method in a DAO base class:<br /><br />
<pre lang="java">
public void insert(T valueObject, Class... clazz) {
 try {
   Session s = getSession();
   s.save(valueObject);
   s.flush();
   s.refresh(valueObject);
 } catch (InvalidStateException v) {
   setToRollback();
   log.error("insert(), failed validation " + valueObject.toString(), v);
   InvalidValue[] invalid = v.getInvalidValues();
   for (int i=0; i<invalid.length; ++i) {
     InvalidValue bad = invalid[i];
     log.error("insert(), " + bad.getPropertyPath()
     + ":" + bad.getPropertyName()
     + ":" + bad.getMessage());
   }
   throw v;
 }
}
</pre><br /><br /><span style="font-size:100%;">As you can see, the InvalidStateException contains an array of InvalidValue objects which describe the nature of the validation error.  You can either log this information, or even present it to the user.<br /><br />Hope that helps!  Do you use Hibernate's validator annotations for something nifty?  Let us know in the comments!<br /></span>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>119</wp:post_id>
<wp:post_date>2008-06-10 20:14:00</wp:post_date>
<wp:post_date_gmt>2008-06-11 01:14:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>use-hibernate-validators-to-find-nasty</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/06/use-hibernatevalidators-to-find-nasty.html</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860316</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Why you should not not use ORM</title>
<link>http://mikedesjardins.us/wordpress/2008/06/why-you-should-not-not-use-orm/</link>
<pubDate>Tue, 17 Jun 2008 00:32:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[hibernate]]></category>

		<category domain="category" nicename="hibernate"><![CDATA[hibernate]]></category>

		<category><![CDATA[jpa]]></category>

		<category domain="category" nicename="jpa"><![CDATA[jpa]]></category>

		<category><![CDATA[programming]]></category>

		<category domain="category" nicename="programming"><![CDATA[programming]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/06/why-you-should-not-not-use-orm/</guid>
<description></description>
<content:encoded><![CDATA[<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/2522766037_44d8e2e709-731771.jpg"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer;" src="http://mikedesjardins.us/blog/uploaded_images/2522766037_44d8e2e709-731749.jpg" alt="" border="0" /></a>Yesterday I read a blog post by Kenneth Downs entitled "<a href="http://database-programmer.blogspot.com/2008/06/why-i-do-not-use-orm.html">Why I Do Not Use ORM</a>" on his <a href="http://database-programmer.blogspot.com/">The Database Programmer</a> blog.  It wasn't the first blog post with gripes about Object Relational Mapping, and it certainly won't be the last.  For me, this particular article highlighted a few misconceptions about why and how ORM should be used, and I thought I might chime in with my own perspective.<br /><br /><span style="font-weight: bold;">ORM is not a way to avoid SQL</span><br />The first thing that stood out for me was this quote:<br /><blockquote>"The language SQL is the most widely supported, implemented, and    used way to connect to databases.  But since most of us have long    lists of complaints about the language, we end up writing abstraction    layers that make it easier for us to avoid coding SQL directly."</blockquote>To his credit, the author wasn't actually addressing ORM in this paragraph.  However, anyone writing business logic which interacts with a database, who is unable to write some basic SQL, is like a bull in a china shop; nothing good will come of it regardless of the tools and abstraction layers employed.<br /><br /><span style="font-weight: bold;">The Simple Example</span><br />The next example in the post shows how one would write a row to a database in only four lines of PHP code - it looks something like this (I removed the comments):<br /><br />
<pre lang="php">
$row = getPostStartingWith("inp_");
$table_id = myGetPostVarFunction('table_id');
if (!SQLX_Insert($table_id,$row)) {
 myFrameworkErrorReporting();
}
</pre><br /><br />I don't know PHP, but I think the code is reading every field in a posted form that starts with inp_, generates an insert statement straight from the ID's on the form fields, and writes an insert statement with the results.<br /><br />Perhaps it's unfair to criticize this code because "it's just a simple example," but if this code is being held up as an example of how short and simple non-ORM code can be, one does have to wonder<br /><ul><li>When the database schema changes, does the HTML need to be updated so that the form fields match the database schema?</li><li>Where are the transactions?  What if I need to insert into several tables and roll back the transaction if one fails?<br /></li><li>Does the handy SQLX_insert method prevent SQL injection attacks?</li></ul>He goes on to say that this task is made even easier by <a href="http://database-programmer.blogspot.com/2008/06/using-data-dictionary.html">using a data dictionary</a> to generate the SQL.  After reading the "Using a Data Dictionary" article, one has to wonder whether or not the author realizes that it is a very crude form of ORM.<br /><br /><span style="font-weight: bold;">What about Business Logic?</span><br />Kenneth Downs tries to head-off any arguments about business logic before they come up, knowing that ORM evangelists will argue that the domain objects can encapsulate essential business logic for the application.  His response?<br /><blockquote>"The SQLX_Insert()    routine can call out to functions (fast) or objects     (much slower) that massage data before and after the    insert operation.  I will be demonstrating some of these    techniques in future essays, but of course the best     permforming and safest method is to use triggers."<br /></blockquote>For me, this sounds alarm bells.  Triggers slow down transactions.  Triggers are in your database, which is often your system's biggest bottleneck.  Triggers silently do things behind your back without telling you.  Triggers change databases from vast, efficient places to store relational data, into a lumbering behemoth interpreting procedural code inside big iron.<br /><br />Conversely, business logic that can be easily distributed across many smaller web servers scales horizontally.  The domain layer is a fantastic place to embed simple data massaging - sadly, I often see a pile of persistent entities with getters and setters that don't do anything.<br /><br /><span style="font-weight: bold;">Counter Example: The Disaster Scenario</span><br />Lastly, Ken (can I call him that?  What is the ettiquite for this sort of thing, anyway?) shows an example of a piece of code that is likely to cause hundreds of unneeded reads to the database in an untuned ORM-based system.  I don't dispute this; in fact, I <a href="http://mikedesjardins.us/blog/2008/03/pizza-shop-2-totaling-jpa-order-use.html">posted</a> about an almost identical nightmare scenario myself a while ago.<br /><br />For this, I go back to my "bull in a china shop" analogy.  Programmers can write horrible code in any language, with any tool.  Layers of abstraction are a double-edged sword, because you need to understand what they are doing for you.  But it's not the tool's fault; it's the person misusing it.<br /><br /><span style="font-weight: bold;">Computer Science's Vietnam</span><br />In 2004, Ted Neward famously called ORM <a href="http://blogs.tedneward.com/2006/06/26/The+Vietnam+Of+Computer+Science.aspx">Computer Science's Vietnam</a>.  Encouraged by early successes, we got sucked into the quagmire.  There are plenty of reasons to be frustrated with ORM, but I'm not sure I agree with Ken's.  I try to hit the 80/20 rule with ORM, and use it where it makes sense.  When I get into a convoluted transaction or need to do a large batch of operations, I'm not afraid to dive into SQL and do the work in a stored procedure.  I think it's a good mix.  How about you?<br /><br /><span style="font-style: italic;">Photo Credit: </span><a style="font-style: italic;" href="http://www.flickr.com/people/meesterdickey/">Ryan Dickey</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>121</wp:post_id>
<wp:post_date>2008-06-16 19:32:00</wp:post_date>
<wp:post_date_gmt>2008-06-17 00:32:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>why-you-should-not-not-use-orm</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/06/why-you-should-not-not-use-orm.html</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229548571</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>90</wp:comment_id>
<wp:comment_author><![CDATA[Donald J Organ IV]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-06-17 15:42:00</wp:comment_date>
<wp:comment_date_gmt>2008-06-17 20:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The PHP code that Ken posts in his blog is normal code that contains functions that are in the framework he has created http://www.andromeda-project.org.  SO you cant get the full effect of the PHP side of things from some of his code.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>91</wp:comment_id>
<wp:comment_author><![CDATA[david]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-06-17 16:17:00</wp:comment_date>
<wp:comment_date_gmt>2008-06-17 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Honestly? I don't like OR Mappers, but I can totally understand why people use them! In fact I'm using one myself at the moment, on my current project. <br/><br/>I guess the problem is to grasp what's going under the covers of an OR Mapper. If you use the standard configuration for some these frameworks, you'll probably get horrible performance. All sorts of unnecessary SQL statements and weird lazy loading issues.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>92</wp:comment_id>
<wp:comment_author><![CDATA[Mike Desjardins]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-06-17 18:45:00</wp:comment_date>
<wp:comment_date_gmt>2008-06-17 23:45:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[@Donald - yeah, I kinda suspected that that insert function did a little more than a plan old insert statement under the covers, much as the "save" method in an ORM framework does a lot more than a SQL insert statement.<br/><br/>@David - There's lots to hate about ORM frameworks.  It's a tough nut to crack, and I'm not convinced that it's been "solved" by any of the tools I've used.  At one of my previous jobs, we created a framework which basically mapped Java POJOs to stored procedure parameters, and did all of the SQL in stored procedures.  It actually worked quite well... I've contemplated building another framework like that for a side-project and open-sourcing it.  I think iBATIS might also handle stored-procedure situations quite similarly (in the Java space), but I've never tried it.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>93</wp:comment_id>
<wp:comment_author><![CDATA[kasper]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-06-17 19:06:00</wp:comment_date>
<wp:comment_date_gmt>2008-06-18 00:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[When debugging ORM code, especially during tests, I've appreciated actually being able to see the data in the database as it actually is for the current transaction (before it is comitted/rolled back). I just released a tool to assist you with such a task. It's called Data Storm: <br/><br/>http://datastorm.sourceforge.net/motivation.html]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>94</wp:comment_id>
<wp:comment_author><![CDATA[Mike Desjardins]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-06-17 19:30:00</wp:comment_date>
<wp:comment_date_gmt>2008-06-18 00:30:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[@kasper - that looks like a very cool tool!  I'll have to try that out!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>95</wp:comment_id>
<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-06-17 20:29:00</wp:comment_date>
<wp:comment_date_gmt>2008-06-18 01:29:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[<a HREF="http://chiralsoftware.com/" REL="nofollow">We</a> used to use Hibernate, and now we use EJB3 and Hibernate (session = entityManager.getDelegate()).  It's great.  You couldn't match the performance any other way, and development speed is also tremendously faster.  When using it with Seam, it keeps a cache of objects relative to the conversation context, which has a very high cache hit rate.  It also lets me express things like navigating across objects in Expression Language, so a front-end designer can show whatever he wants without asking the developer "can you please create this join query..."]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>96</wp:comment_id>
<wp:comment_author><![CDATA[gfrison]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-06-18 03:23:00</wp:comment_date>
<wp:comment_date_gmt>2008-06-18 08:23:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I agree with you when you need speed in critical jdbc tasks, in such a performance requirements write you low level sql code. ORM introduces overhead but this is the price of abstraction, but if you try to write your own ORM framework you would realize that existing ORMs save a lot of time and make your system more reliable. Don't reinvent the wheel.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>97</wp:comment_id>
<wp:comment_author><![CDATA[KenDowns]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-06-19 08:56:00</wp:comment_date>
<wp:comment_date_gmt>2008-06-19 13:56:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Mike, I am flattered that my blog post would inspire a reply.  I have posted an addendum to the OP that answers most of the compelling challenges offered by your post and by comments on the blog.  Rather than rehash it here I will simply refer folks to the OP, which is linked to up in your blog.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>98</wp:comment_id>
<wp:comment_author><![CDATA[Mike Desjardins]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-06-19 09:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-06-19 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[@KenDowns - Cool!  And I'm flattered you posted a response!<br/><br/>I actually think we probably agree more than we disagree.  As I think I said in an earlier comment response, one of the largest-scale applications I've worked on handled tens of thousands of transactions per day for a wireless telecommunications client, and it was implemented using almost no ORM.  Instead, we used a stored procedure framework to do the "mapping" (if you could even call it that) and it was *very* effective.<br/><br/>Your data dictionary approach is very similar to ORM frameworks I've used, even if it isn't mapping first-order objects to entities persisted in a database, in that it has a level of indirection in the form of "mapping" client-side transient variables to columns in a table.  It's sort of an ORM without the O, and it's actually pretty clever.  In your particular example, I'm a little leery of the tight coupling between the View/UI, and the data Model (insofar as the HTML fields are directly coupled to your model map), but perhaps that hasn't been a problem for you in practice because you still have one level of indirection there.<br/><br/>I think my biggest concern about the approach outlined in your blog was the advocacy of triggers - I've been bitten by trigger overuse and tend to use them as an enforcer-of-last-resort... I've gotten a lot of mileage out of distributing that work across multiple small servers before even hitting the database.  YMMV.  I'm sure it depends a lot on other factors like what RDBMS you're using, how complex your data model is, etc.<br/><br/>Thanks again for commenting!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>99</wp:comment_id>
<wp:comment_author><![CDATA[James E. Ervin, IV]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-06-19 16:04:00</wp:comment_date>
<wp:comment_date_gmt>2008-06-19 21:04:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I think the point about ORM or to not ORM is, let your hands tell you.  How?  <br/><br/>If you are writing the same kind of error prone code over and over again (like having to check all try(s) have finally(s) for instance) is the biggest sign.  Time to think of using something.  Save your hands, check out like Groovy SQL first or an ORM.  <br/><br/>Writing the same bland queries again and again?  Are you really taking advantage of PL/SQL in a way an ORM couldn't?  If you answer yes and no, use the ORM, save your hands.  They will thank you.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>111</wp:comment_id>
<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-09-01 11:58:00</wp:comment_date>
<wp:comment_date_gmt>2008-09-01 16:58:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hmm. To sum up:<br/><br/>It is not the gun that murders, but who wields it. It is not who wields the gun who commits murder, but who wields it unwisely.<br/><br/>-- A grasshopper<br/><br/>Everything wants to be hyped, to get over the adoption factor. When wielded appropriately and under the right conditions, with the intelligent, knowledgeable practictioners, ORM (which I have done poorly) is of course with merit.<br/><br/>Hasty implementations, with unwise and illiterate implementation, is the result of poor understanding. ORM doesn't cause this, just as AJAX doesn't cause the web to "break".<br/><br/>I'll always remember the little league team that had all the studs on it, the kids who were natural athletes. They spent all their time practicing fancy throw-outs and pick-off moves. It was "expected" that they would always out-perform, so this expectation imposed an unreasonable work ethic.<br/><br/>The team that won the championship, though, was a team that worked, daily, on fundamentals. Throw, catch, run out the ball. Everyone bunts, everyone gets grounders, everyone carries the gear to the truck.<br/><br/>In the end, a good programmer knows the fundamentals of SQL as well as the fundamentals of programming. They're paid for the results, not the fancy.<br/><br/>If a programmer can't construct a SQL statement, and have not been doing that at least for a good while, chances are the results will not be as useful as that programmer thought.<br/><br/>Not the SQL fancy (triggers, stored procedures, data normalization, etc...) mind you, but the fundamentals: Create, insert, update, delete.<br/><br/>Programmers are paid to get it right, but the reality also says they're paid to get it back right when it goes (sometimes spectacularly) wrong.<br/><br/>That always means fundamentals. Always.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>112</wp:comment_id>
<wp:comment_author><![CDATA[Mike Desjardins]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-09-01 14:50:00</wp:comment_date>
<wp:comment_date_gmt>2008-09-01 19:50:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[@Anonymous -<br/><br/>Very well said.  Too bad you stayed anonymous so you can't get the proper credit you deserve.  :)<br/><br/>ORM is just a tool that can be used wisely and unwisely.  I try to tell people that there's no shame in just doing straight-up JDBC calls if all you're doing is stored procedure calls or simple SQL statement.  But lots of people can't resist using the framework <i>du jour</i> just because it's popular at the time.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Use Hibernate&#039;s Custom Loaders to fake an aggregation view</title>
<link>http://mikedesjardins.us/wordpress/2008/06/use-hibernates-custom-loaders-to-fake/</link>
<pubDate>Mon, 23 Jun 2008 18:37:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[hibernate]]></category>

		<category domain="category" nicename="hibernate"><![CDATA[hibernate]]></category>

		<category><![CDATA[java]]></category>

		<category domain="category" nicename="java"><![CDATA[java]]></category>

		<category><![CDATA[jpa]]></category>

		<category domain="category" nicename="jpa"><![CDATA[jpa]]></category>

		<category><![CDATA[programming]]></category>

		<category domain="category" nicename="programming"><![CDATA[programming]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/06/use-hibernates-custom-loaders-to-fake-an-aggregation-view/</guid>
<description></description>
<content:encoded><![CDATA[<span style="font-weight: bold;">Your Problem</span><br />You have a data model with table that contains data you want to aggregate.  For instance (returning to my venerable Pizza Shop example), let's say you have a PRODUCT table that enumerates the items your pizza shops sells, and a LOCATION table that contains all of your retail locations:<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/blog-location-product-791817.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://mikedesjardins.us/blog/uploaded_images/blog-location-product-791813.png" alt="" border="0" /></a><br />We also have a table that contains the sum of all of the previous days' sales, broken down by PRODUCT and LOCATION:<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/blog-yesterday-sales-786534.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://mikedesjardins.us/blog/uploaded_images/blog-yesterday-sales-786525.png" alt="" border="0" /></a>This is all well and good, but we've been asked to create an Executive Dashboard for the President of the pizza chain, and she would like to see daily sales by product.  She is not interested in a breakdown by location.<br /><br /><span style="font-weight: bold;">We could tally it up client side...</span><br />What if we just loaded the entire table into the client, and iterated over the per-product results, and present that?  Unfortunately, ORM libraries are pretty stupid in situations like these, and will generate all kinds of expensive reads to the database when you try to solve the problem this way.  If you want to learn more about lazy loading, and why you shouldn't iterate over a collection, check out my earlier post <a href="http://mikedesjardins.us/blog/2008/03/pizza-shop-2-totaling-jpa-order-use.html">here</a>.<br /><br /><span style="font-weight: bold;">We could just create a view in the Database...</span><br />We <span>could</span><span style="font-weight: bold;"> </span>just create a view, and aggregate the data there.  Then we can easily create a Hibernate mapping to that view.  The query for the view is simple:<br />
<pre lang="sql">
create view sales_by_product_view as
select product_id, sum(total_sales) as total_sales
  from YESTERDAY_SALES
 group by product_id
</pre><br />However, we are working with a tyrannical DBA.  She is not keen on proliferating views throughout our otherwise pristine schema every time the President has decided that the company needs a new widget for the executive dashboard application.<br /><br /><span style="font-weight: bold;">...or we could fake it with a custom loader</span><br />Instead, let's create a Hibernate mapping that generates the same results as the view.  First, let's create a simple POJO to contain the results:<br /><br />
<pre lang="java">
package us.mikedesjardins;
public class SalesByProduct {
  private Integer id;
  private Integer productId;
  private BigDecimal sales;
// accessors omitted
}
</pre><br />The corresponding mapping file would look like this.  I re-used the product_id for the ID in this  example.  Note the loader element:<br /><br />
<pre lang="xml">
<hibernate-mapping package="us.mikedesjardins">
  <class name="SalesByProduct"
          dynamic-insert="false"
          dynamic-update="false"
          mutable="false">
    <id name="id" type="int" unsaved-value="null">
      <column name="__id" sql-type="int identity" not-null="true" unique="true" />    
    </id>
    <property name="productId" type="int">
      <column name="__product_id" not-null="false" />
    </property>
    <property name="sales" type="java.math.BigDecimal">
      <column name="__total_sales" not-null="false" />
    </property>
    <loader query-ref="salesByProductQuery" />
  </class>
  <sql-query name="salesByProductQuery">
    <return class="SalesByProduct" />
    <![CDATA[
    select product_id as __id
         , product_id as __product_id
         , sum(total_sales) as __total_sales
      from YESTERDAY_SALES
     where product_id = :product_id
    group by product_id
   ]]>
  </sql-query>
</hibernate-mapping>
</pre><br />Note that you need to put a positional argument in the query, or Hibernate will get nasty about parsing it.  Hope that helps!]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>122</wp:post_id>
<wp:post_date>2008-06-23 13:37:00</wp:post_date>
<wp:post_date_gmt>2008-06-23 18:37:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>use-hibernates-custom-loaders-to-fake</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1230691687</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/06/use-hibernates-custom-loaders-to-fake.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>100</wp:comment_id>
<wp:comment_author><![CDATA[Rafael Rocha]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-06-24 12:22:00</wp:comment_date>
<wp:comment_date_gmt>2008-06-24 17:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[why do not use atributtes types for mapping object product otherwise productid?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Twenty minutes with Hibernate Search; A Cheesy Example</title>
<link>http://mikedesjardins.us/wordpress/2008/07/twenty-minutes-with-hibernate-search-a-cheesy-example/</link>
<pubDate>Sat, 12 Jul 2008 15:48:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[hibernate]]></category>

		<category domain="category" nicename="hibernate"><![CDATA[hibernate]]></category>

		<category><![CDATA[java]]></category>

		<category domain="category" nicename="java"><![CDATA[java]]></category>

		<category><![CDATA[jpa]]></category>

		<category domain="category" nicename="jpa"><![CDATA[jpa]]></category>

		<category><![CDATA[programming]]></category>

		<category domain="category" nicename="programming"><![CDATA[programming]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=31</guid>
<description></description>
<content:encoded><![CDATA[<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/cheese-blog-719088.jpg"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer;" src="http://mikedesjardins.us/blog/uploaded_images/cheese-blog-719057.jpg" alt="" border="0" /></a>In a <a href="http://mikedesjardins.us/blog/2008/06/who-is-running-that-horrible-hibernate.html">recent post</a>, I showed a trick for determining which users in a system are running a long-running query.  One commenter suggested that using a full-text search system made a lot of sense in those situations, and I wholeheartedly agree. So I decided to devote a new post to <a href="http://www.hibernate.org/410.html">Hibernate Search</a>!<br /><br />In this example, I provide a live, <a href="http://mikedesjardins.us/cheese/search">online interactive search</a> of an online cheese database, and you can download the example (more on that at the end of the post).<br /><br /><span style="font-weight: bold;">Step One - The Test Data</span><br />I spent the most time on this project was creating test data for the example program.  I headed over to <a href="http://freebase.com/">Freebase</a> to see what was available for data sets.  Among lots of other things, they have a free database of <a href="http://www.freebase.com/view/food/cheese">cheese</a>.  First, I downloaded the data in TSV format, dumped it into a raw table, and massaged it into a relational, normalized schema.  I ended up with this when I was done:<br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/cheese-search-erd-785039.jpg"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://mikedesjardins.us/blog/uploaded_images/cheese-search-erd-785035.jpg" alt="" border="0" /></a>So, a CHEESE can have only one ORIGIN (a country or region where the cheese is made), is made from one-to-many types of MILK, and may have zero-to-many TEXTURES associated with it.<br /><br /><span style="font-weight: bold;">Step Two - Build the Domain Model</span><br />The domain model for this system is very simple.  Each Cheese class has an Origin, and a set of Milk and Textures:<br /><br />
<pre lang="java">
@Entity @Table(name="MILK")
public class Milk {
  @Id @Column(name="milk_id")
  private Integer id;

  @Basic @Column(name="name")
  private String name;

  @Version @Column(name="version")
  private Integer version;

// Accessors omitted
}
</pre><br />
<pre lang="java">
@Entity @Table(name="ORIGIN")
public class Origin {
  @Id @Column(name="origin_id")
  private Integer id;

  @Basic @Column(name="name")
  private String name;

  @Version @Column(name="version")
  private Integer version;

// Accessors omitted
}
</pre><br />
<pre lang="java">
@Entity @Table(name="TEXTURE")
public class Texture {
  @Id @Column(name="texture_id")
  private Integer id;

  @Basic @Column(name="description")
  private String description;

  @Version @Column(name="version")
  private Integer version;

// Accessors omitted
}
</pre><br />
<pre lang="java">
@Entity @Table(name="CHEESE")
public class Cheese {
  @Id @GeneratedValue(strategy=GenerationType.IDENTITY)
  @Column(name="cheese_id",nullable=false,unique=true)
  private Integer id;

  @Basic @Column(name="name")
  private String name;

  @ManyToOne(cascade={CascadeType.ALL})
  @JoinColumn(name="origin_id",nullable=false)
  private Origin origin;

  @ManyToMany(cascade={CascadeType.PERSIST,CascadeType.MERGE})
  @JoinTable(name="CHEESE_MILK_MAP",
             joinColumns=@JoinColumn(name="cheese_id"),
             inverseJoinColumns=@JoinColumn(name="milk_id"))
  private Set<Milk> milks = new HashSet<Milk>();

  @ManyToMany(cascade={CascadeType.PERSIST,CascadeType.MERGE})
  @JoinTable(name="CHEESE_TEXTURE_MAP",
             joinColumns=@JoinColumn(name="cheese_id"),
             inverseJoinColumns=@JoinColumn(name="texture_id"))
  private Set<Texture> textures = new HashSet<Texture>();

  @Version @Column(name="version")
  private Integer version;

// Accessors omitted
}</pre><br /><span style="font-weight: bold;">Step Three - Add Search Annotations and Configure Lucene</span><br />Behind the scenes, Hibernate Search uses the <a href="http://lucene.apache.org/">Apache Lucene</a> search engine to do its indexing. In short, it maintains a mapping of object IDs to search terms in an external file, and updates the file when objects are added, updated, or deleted.  To start using Hibernate Search, you'll need to configure the location of these index files, as well as a search directory provider (we'll just use the default).  This is done in your Hibernate properties file, or (if you use JPA, like me), in persistence.xml:<br />
<pre lang="xml">
<property name="hibernate.search.default.directory_provider" value="org.hibernate.search.store.FSDirectoryProvider" />
<property name="hibernate.search.default.indexBase" value="/var/lucene/cheese-indexes" />
</pre><br />Next, you need to indicate to Lucene which classes need to be indexed.  You also need to indicate which data fields 1.) contain the document ID, and 2.) contain relevant search text.  In our example, we only need to index the Cheese objects.  We want to allow users to search on cheese name, milk name, origin, and texture.<br /><br />First, we indicate that we want to index the Cheese objects by applying the <span style="font-weight: bold;">@Indexed</span> annotation to the class, and we elect to use the Id field to identify the Cheese objects to Lucene by applying a <span style="font-weight: bold;">@DocumentId</span> annotation to it.  Next, we indicate that the cheese name contains searchable text by adding the <span style="font-weight: bold;">@Field(index=Index.TOKENIZED, store=Store.NO)</span> annotation to it.  The annotation parameters are informing Hibernate Search to use Lucene's default tokenizer to summarize the text, and not to store a copy of the document content.<br /><br />We also want to allow users to search on Origin, Milk Name, and Texture.  This text is not contained within the Cheese object, instead they're in related object.  So we need to add the <span style="font-weight: bold;">@IndexEmbedded</span> annotation to the member variables in the Cheese class that refer to the objects which contain the searchable text, and we also need to add the <span style="font-weight: bold;">@Field(index=Index.TOKENIZED, store=Store.NO)</span> annotation to the Milk, Origin, and Texture classes to indicate which fields are searchable.<br /><br />When you're done, the modified domain classes will look like this:<br />
<pre lang="java">
@Entity @Table(name="MILK")
public class Milk {
  @Id @Column(name="milk_id")
  private Integer id;

  @Field(index=Index.TOKENIZED)
  @Basic @Column(name="name")
  private String name;

  @Version @Column(name="version")
  private Integer version;

// Accessors omitted
}</pre><br />
<pre lang="java">
@Entity @Table(name="ORIGIN")
public class Origin {
  @Id @Column(name="origin_id")
  private Integer id;

  @Field(index=Index.TOKENIZED)
  @Basic @Column(name="name")
  private String name;

  @Version @Column(name="version")
  private Integer version;

// Accessors omitted
}
</pre><br />
<pre lang="java">
@Entity @Table(name="TEXTURE")
public class Texture {
  @Id @Column(name="texture_id")
  private Integer id;

  @Field(index=Index.TOKENIZED)
  @Basic @Column(name="description")
  private String description;

  @Version @Column(name="version")
  private Integer version;

// Accessors omitted
}
</pre><br />
<pre lang="java">
@Indexed
@Entity @Table(name="CHEESE")
public class Cheese {
  @DocumentId
  @Id @GeneratedValue(strategy=GenerationType.IDENTITY)
  @Column(name="cheese_id",nullable=false,unique=true)
  private Integer id;

  @Basic @Column(name="name")
  @Field(index=Index.TOKENIZED, store=Store.NO)
  private String name;

  @IndexedEmbedded
  @ManyToOne(cascade={CascadeType.ALL})
  @JoinColumn(name="origin_id",nullable=false)
  private Origin origin;

  @IndexedEmbedded
  @ManyToMany(cascade={CascadeType.PERSIST,CascadeType.MERGE})
  @JoinTable(name="CHEESE_MILK_MAP",
             joinColumns=@JoinColumn(name="cheese_id"),
             inverseJoinColumns=@JoinColumn(name="milk_id"))
  private Set<Milk> milks = new HashSet<Milk>();

  @IndexedEmbedded
  @ManyToMany(cascade={CascadeType.PERSIST,CascadeType.MERGE})
  @JoinTable(name="CHEESE_TEXTURE_MAP",
             joinColumns=@JoinColumn(name="cheese_id"),
             inverseJoinColumns=@JoinColumn(name="texture_id"))
  private Set<Texture> textures = new HashSet<Texture>();
  
  @Version @Column(name="version")
  private Integer version;

// Accessors omitted
}
</pre><br /><span style="font-weight: bold;">Step Four - The Servlets</span><br />In this example, I didn't want to rely on any web frameworks or even on JSPs, so I wrote a good old-fashioned servlet to exercise the search function.  No sane person would ever do it this way.   There are actually two servlets in the example - one for application initialization and one for the page itself.<br /><br />The initialization servlet does the work of indexing all of the database data the first time through.  For our small data set, this takes less than a minute.  For larger data sets, it wouldn't make sense to re-index everything every time you start the application.  The initialization code iterates over all of the Cheese objects ant tells the FullTextEntityManger to index it:<br />
<pre lang="java">
public void init() {
  Dao<Cheese> dao = new CheeseDao();
  EntityManager em = dao.getEntityManager();
  FullTextEntityManager fullTextEntityManager = Search.createFullTextEntityManager(em);

  List<Cheese> cheeses = em.createQuery("select c from Cheese as c").getResultList();
  for (Cheese cheese : cheeses) {
    fullTextEntityManager.index(cheese);
  }
}
</pre><br />The main page servlet has some code in the doPost method to perform the search based on the contents of the text form field.  That code looks like this (I've shortened it up a bit here by removing some error checking and HTML output):<br />
<pre lang="java">
public void doPost(HttpServletRequest request,
                   HttpServletResponse response) throws ServletException, IOException {
  response.setContentType("text/html");
  PrintWriter out = response.getWriter();
  emitHeader(out);

  String searchTerm = request.getParameter("searchterm");
  EntityManager em = dao.getEntityManager();

  FullTextEntityManager fullTextEntityManager =
    org.hibernate.search.jpa.Search.createFullTextEntityManager(em);
  MultiFieldQueryParser parser =
    new MultiFieldQueryParser( new String[]{"name",
                                            "origin.name",
                                            "milks.name",
                                            "textures.description"},
                               new StandardAnalyzer());

  try {
    org.apache.lucene.search.Query query = parser.parse(searchTerm);
    javax.persistence.Query hibQuery =
      fullTextEntityManager.createFullTextQuery(query,Cheese.class);
    List<Cheese> result = hibQuery.getResultList();
    emitTable(out,result);
  } catch (ParseException e) {
    log.error("Got a parse exception", e);
    throw new ServletException(e.getMessage());
  }
  emitFooter(out);
  out.close();
}</pre><br />That's all there is to it!  As you can see, setting up Hibernate Search is very simple.  Most of the effort for this project was spent creating the data and making the servlets work.<br /><br /><span style="font-weight: bold;">Enjoy the Finished Product</span><br />To see this less-than-world-changing application in action, visit it <a href="http://mikedesjardins.us/cheese/search">here</a>.  You can also <a href="http://mikedesjardins.us/cheese-search-1.0.tar.gz">download the whole eclipse project</a> and try it out for yourself.  It comes with SQL dumps suitable for MySQL and PostgreSQL, and it has been tested with both environments under Tomcat 5.5.<br /><br /><span style="font-style: italic;">Photo Credit: </span><a href="http://www.flickr.com/people/cuse/"><span style="font-style: italic;font-size:100%;" ><span class="RealName"><span class="fn n"><span class="given-name">Chris</span> <span class="family-name">Buecheler</span></span></span></span></a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>31</wp:post_id>
<wp:post_date>2008-07-12 09:48:00</wp:post_date>
<wp:post_date_gmt>2008-07-12 15:48:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>twenty-minutes-with-hibernate-search-a-cheesy-example</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008_07_01_archive.html</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229526866</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>27</wp:comment_id>
<wp:comment_author><![CDATA[Mark]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-07-14 09:09:00</wp:comment_date>
<wp:comment_date_gmt>2008-07-14 15:09:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for this - especially the annotations.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Hibernate Tools: Tips for Reverse Engineering at the Command Line</title>
<link>http://mikedesjardins.us/wordpress/2008/08/hibernate-tools-tips-for-reverse/</link>
<pubDate>Tue, 05 Aug 2008 17:24:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[hibernate]]></category>

		<category domain="category" nicename="hibernate"><![CDATA[hibernate]]></category>

		<category><![CDATA[java]]></category>

		<category domain="category" nicename="java"><![CDATA[java]]></category>

		<category><![CDATA[jpa]]></category>

		<category domain="category" nicename="jpa"><![CDATA[jpa]]></category>

		<category><![CDATA[programming]]></category>

		<category domain="category" nicename="programming"><![CDATA[programming]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=32</guid>
<description></description>
<content:encoded><![CDATA[<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/tools-geishaboy500-716138.jpg"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer;" src="http://mikedesjardins.us/blog/uploaded_images/tools-geishaboy500-716103.jpg" alt="" border="0"></a>One of the ancillary projects of the Hibernate framework is the <a href="http://www.hibernate.org/255.html">Hibernate Tools</a> toolset.  Using Hibernate Tools, you can automatically generate your mapping files (or, if you prefer, JPA annotations), POJOs, and DDL from your database schema.<br /><br />I've been enamored with the "Convention over Configuration" web frameworks lately (e.g., Grails, Django), and wondered how hard it'd be to reproduce some of their magic ORM functionality using Hibernate Tools.  I've concluded that I've still got a <font style="font-weight: bold;">long</font> ways to go, but that I might have some worthwhile tips to share in the meantime.<br /><br />My progress has been impeded a bit because the documentation for Hibernate Tools is pretty weak.  Hibernate Tools was really generated with Eclipse users in mind.  A large portion of the documentation is devoted to explaining how to use the IDE.  I'm not using Eclipse, and I intend to use the tools at the command-line, and command-line use really isn't targeted.<br /><br /><font style="font-weight: bold;">0.) Get the tools and dependencies.</font><br />I'm still in the dark ages - I use ant instead of maven for builds, and need to track down jar dependencies the old fashioned way.  In addition to the usual Hibernate jars, you'll also need <a href="http://www.hibernate.org/30.html">hibernate-tools</a>, <a href="http://freemarker.sourceforge.net/">freemarker</a>, and <a href="http://jtidy.sourceforge.net/download.html">jtidy</a>.<br /><br /><font style="font-weight: bold;">
1.) Setup an Ant task</font><br />This is pretty straightforward, and it is explained fairly well in the documentation.  First, define yourself a Hibernate Tools task.  Mine looks like this:<br /><br />

<pre lang="xml">
<taskdef name="hibernatetool" classname="org.hibernate.tool.ant.HibernateToolTask">
  <classpath>
    <fileset refid="hibernate.libs" />
    <fileset refid="hibernatetools.libs" />
    <fileset refid="app.libs" />
    <fileset refid="compile.libs" />
    <pathelement path="${build}" />
    <pathelement path="${basedir}" /> 
  </classpath>
</taskdef>
</pre><br /><br />Next, create a task that uses our new definition.  We're going to be creating the mapping files and POJOs in this example.  It will look something like this:<br /><br />
<pre lang="xml">
<target name="gen_hibernate" depends="compile"> 
  <delete dir="${genhbm}" />
  <mkdir dir="${genhbm}" />
  <hibernatetool>
    <jdbcconfiguration 
        configurationfile="${src}/hibernate-connection.cfg.xml"
        revengfile="hibernate.reveng.xml"
        packagename="us.mikedesjardins.data"
        detectmanytomany="true"
        detectoptimisticlock="true" />
    <hbm2hbmxml destdir="${genhbm}" />  
    <hbm2java destdir="${genhbm}">
      <property key="jdk5" value="true" />
      <property key="ejb3" value="false" />
    </hbm2java>
  </hibernatetool>
</target>
</pre><br /><br />You'll note that I've created a hibernate configuration file above which only contains connection information.  This is because I ran into problems when I tried to use a hibernate configuration with cache configuration elements in it.  You'll also note a reference to a file called hibernate.reveng.xml.  This file controls various aspects of the reverse engineering process.  Mine is very simple - I'm working with MS SQL Server, and I don't want it to include any of the system tables which begin with the prefix sys:<br /><br />
<pre lang="xml">
<hibernate-reverse-engineering>
  <!-- Eliminate system tables  -->
  <table-filter name="sys.*" exclude="true">
</hibernate-reverse-engineering>
</pre><br /><br />That should be all that you need to do to get started.  When you run this ant target, your domain object POJOs and Mappings should end up in the ${genhbm} directory.<br /><br /><font style="font-weight: bold;">2.) First Problem - Table Names</font><br />Let's say you're in a company that prefixes most of it's tables with something silly, like "tb_".  In that case, Hibernate tools will happily create all kinds of POJOs for you named TbAccount, TbAddress, etc.  This is probably not what you want.  Fortunately, Hibernate tools let you provide your own "Reverse Engineering Strategy" class to deal with situations just like this.<br /><br />First, update your build target in Ant to include a reference to your strategy class as an attribute of the jdbcconfiguration element:<br /><br />
<pre lang="xml">
<target name="gen_hibernate" depends="compile"> 
  <delete dir="${genhbm}" />
  <mkdir dir="${genhbm}" />
  <hibernatetool>
    <jdbcconfiguration 
        configurationfile="${src}/hibernate-connection.cfg.xml"
        revengfile="hibernate.reveng.xml"
        packagename="us.mikedesjardins.data"
        detectmanytomany="true"
        detectoptimisticlock="true" 
        reversestrategy="us.mikedesjardins.hibernate.CustomReverseEngineeringStrategy"/>
    <hbm2hbmxml destdir="${genhbm}" />  
    <hbm2java destdir="${genhbm}">
      <property key="jdk5" value="true" />
      <property key="ejb3" value="false" />
    </hbm2java>
  </hibernatetool>
</target>
</pre>
<br /><br />Next, we'll need to create the strategy class.  The documentation recommends that you extend the <font style="font-weight: bold;">DelegatingReverseEngineeringStrategy</font> class to do this, like this:<br /><br />
<pre lang="java">
package us.mikedesjardins.hibernate;

import org.hibernate.cfg.reveng.DelegatingReverseEngineeringStrategy;
import org.hibernate.cfg.reveng.ReverseEngineeringStrategy;

public class CustomReverseEngineeringStrategy extends DelegatingReverseEngineeringStrategy {
  public CustomReverseEngineeringStrategy(ReverseEngineeringStrategy delegate { 
    super(delegate);
  }
}
</pre>
Unfortunately, I was unable to find any JavaDoc documentation for the Hibernate Tools classes, so I had to do a bit of trial-and-error.  It turns out there is a method called tableToClassName that can be overridden.  This class accepts a TableIdentifier as its input parameter, and returns the class name in a String.  Thus, to remove the tb_ from the class, we could do something like this:<br /><br />
<pre lang="java">
public String tableToClassName(TableIdentifier tableIdentifier) {
  String packageName = "us.mikedesjardins.data";
  String className = super.tableToClassName(tableIdentifier);
  if (className.startsWith("Tb")) {
    className = className.substring(2);
  }
  return className;
}
</pre><br /><br />Compile your CustomReverseEngineeringStrategy class, make sure it's on the hibernatetools task definition's classpath, and re-run the task.  Voila!  The Tb's are gone!<br /><br />There's a similar method for column names named <font style="font-weight: bold;">columnToPropertyName</font> that handles naming your persisted class's member variables.  In my current project, the primary key columns are named the same as the table name, with "_id" appended to the end.  However, in the object model, we like to just name the primary key property "id" to simplify the creation of generic DAOs.  I use the columnToPropertyName method for this.<br /><br /><font style="font-weight: bold;">2.) Next Problem - The Generated POJOs need tweaking.</font><br />Perhaps the code that Hibernate generates is not to your liking.  Maybe you work with standards-compliance-nazis who want a copyright header at the top of each class file.  Or maybe all of your persisted objects implement the same interface for use with generic DAOs.<br /><br />Under the covers, Hibernate uses <a href="http://freemarker.sourceforge.net/">freemarker</a> to generate POJOs and mapping files.  The templates that it uses can be edited to your liking, but doing it is not very straightforward.<br /><br />First, unzip the hibernate tools jar into a temporary directory.  Once unzipped, you'll find a directory named pojo.  This directory contains all of the templates used for POJO generation.  Copy that directory into your build area and name it something like hib_templates.<br /><br />The hbm2java task is actually just an alias for another hibernate tools target called hbmtemplate.  With hbmtemplate, you can configure the location of the source templates.  So we'll remove the hbm2java task from the gen_hibernate target, and replace it with an equivalent hbmtemplate task:<br /><br />
<pre lang="xml">
<target name="gen_hibernate" depends="compile"> 
  <delete dir="${genhbm}" />
  <mkdir dir="${genhbm}" />
  <hibernatetool>
    <jdbcconfiguration 
        configurationfile="${src}/hibernate-connection.cfg.xml"
        revengfile="hibernate.reveng.xml"
        packagename="us.mikedesjardins.data"
        detectmanytomany="true"
        detectoptimisticlock="true" 
        reversestrategy="us.mikedesjardins.hibernate.CustomReverseEngineeringStrategy"/>
     <hbm2hbmxml destdir="${genhbm}" />  
     <hbmtemplate templateprefix="pojo/"
              destdir="${genhbm}"
              template="hib_templates/Pojo.ftl"
              filepattern="{package-name}/{class-name}.java">
       <property key="jdk5" value="true">
       <property key="ejb3" value="false">
    </hbmtemplate>
  </hibernatetool>
</target>
</pre><br /><br />Now that we've told hibernate tools where our template lives, we can edit it to our liking.  For example, if we want to add a copyright notice to the top of each generated POJO, we could do so thusly:<br /><br />
<pre lang="java">
//
// Copyright 2008 Big Amalgamated Mega Global Software Corp.  All Rights Reserved.
//
${pojo.getPackageDeclaration()}
// Generated ${date} by Hibernate Tools ${version}

<#assign classbody>
<#include "PojoTypeDeclaration.ftl"/>; {
.
.
.
(etc)
</pre><br /><br />Now that we've done this, we can create more templates that, e.g., generate empty DAO classes, automatically create derived classes, etc.<br /><br />Hope that helps!<br /><br /><font style="font-style: italic;">Photo Credit: </font><a style="font-style: italic;" href="http://flickr.com/people/geishaboy500/">geishaboy500</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>32</wp:post_id>
<wp:post_date>2008-08-05 12:24:00</wp:post_date>
<wp:post_date_gmt>2008-08-05 17:24:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>hibernate-tools-tips-for-reverse</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008_08_01_archive.html</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860160</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>30</wp:comment_id>
<wp:comment_author><![CDATA[AnjanBacchuDev]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-08-05 15:08:00</wp:comment_date>
<wp:comment_date_gmt>2008-08-05 21:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[hi there,<br/><br/>  From the looks, it appears good.<br/><br/>BR,<br/>~A]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Hibernate Criteria Subqueries: Exists</title>
<link>http://mikedesjardins.us/wordpress/2008/09/hibernate-criteria-subqueries-exists/</link>
<pubDate>Mon, 22 Sep 2008 17:00:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[hibernate]]></category>

		<category domain="category" nicename="hibernate"><![CDATA[hibernate]]></category>

		<category><![CDATA[java]]></category>

		<category domain="category" nicename="java"><![CDATA[java]]></category>

		<category><![CDATA[jpa]]></category>

		<category domain="category" nicename="jpa"><![CDATA[jpa]]></category>

		<category><![CDATA[pizzashop]]></category>

		<category domain="category" nicename="pizzashop"><![CDATA[pizzashop]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=33</guid>
<description></description>
<content:encoded><![CDATA[<a href="http://mikedesjardins.us/blog/uploaded_images/national-pizza-shop-718025.jpg" onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer; width: 169px; height: 210px;" src="http://mikedesjardins.us/blog/uploaded_images/national-pizza-shop-718008.jpg" border="0" alt="" /></a><span style="font-style: italic;">NOTE: Apologies for the recent blogging hiatus.  I just started a new job and haven't had a lot of time to devote to this blog lately!</span>

While working on a recent project, I came into a situation where I needed to do an "exists" query, using a Criteria-style query.  The online documentation for this feature is a little sparse, so I thought I'd share what I did.

<span style="font-weight: bold;">The Pizza-shop Data Model (Again)</span>
<div style="text-align: left;">I keep reusing a data model for a Pizza shop in my posts, and this post will be no different.  This data model first appeared in my <a href="http://mikedesjardins.us/blog/2008/01/new-jpa-tutorial-pizza-shop.html">JPA mapping tutorial</a>.  Here's an ERD of the model again:</div>
<a href="http://mikedesjardins.us/blog/uploaded_images/pizza-erd-737223.jpg" onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer; width: 320px;" src="http://mikedesjardins.us/blog/uploaded_images/pizza-erd-737223.jpg" border="0" alt="" /></a><span style="font-weight: bold;">Find me Orders with Small Pizzas!</span>
Given this model, what if we needed to find each order that contained a small pizza?  Suppose your database had the following data:

<a href="http://mikedesjardins.us/blog/uploaded_images/table-752077.jpg" onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://mikedesjardins.us/blog/uploaded_images/table-752035.jpg" border="0" alt="" /></a>
As with <a href="http://mikedesjardins.us/blog/2008/01/new-jpa-tutorial-pizza-shop.html">my earlier posting</a>, the object model has a PizzaOrder class that contains a Set of Pizza objects which correspond to each customer order.  Your first inclination might be to do a criteria-within-a-criteria, like this:
<pre lang="java">
Criteria criteria = Criteria.forClass(PizzaOrder.class);
criteria.createCriteria("pizza").add("pizza_size_id",1);
List<PizzaOrder> ordersWithOneSmallPizza = criteria.list();
</pre>
You'd be in for a bit of a surprise, though.  While you might expect only two Pizza orders to be returned (namely, orders #1 and #2), you'll actually have three orders in the result set; because order #2 has two small pizzas in it, order #2 will appear twice in your results!

The reason why this happens is pretty simple, and it becomes clear if you enable Hibernate's SQL output feature.  To locate all of the pizza orders which contain a small pizza, Hibernate needs to do an inner join to the PIZZA table.  This is true regardless of whether you've mapped the Pizza objects to be fetched lazily; the join is required because of your query criteria, not because of your mappings.  <span style="font-style: italic;">Note: it'd be really nice if Hibernate were clever enough to identify from the result set that it had duplicate PIZZA_ORDER records, and build the Set of Pizza objects accordingly, but I suspect that this would be a very difficult thing to do, so I'm not holding my breath.</span>

<span style="font-weight: bold;">The Right Way to Do It</span>
What you're really trying to do is to obtain all Pizza Orders where an associated small pizza exists.  In other words, the SQL query that you're trying to emulate is
<pre lang="sql">
select *
  from PIZZA_ORDER
 where exists (select 1
                 from PIZZA
                where PIZZA.pizza_size_id = 1
                  and PIZZA.pizza_order_id = PIZZA_ORDER.pizza_order_id)
</pre>
The way that you do that is by using an "exists" Subquery, like this:
<pre lang="java">
Criteria criteria = Criteria.forClass(PizzaOrder.class);
DetachedCriteria sizeCriteria = DetachedCriteria.forClass(Pizza.class,"pizza");
sizeCriteria.add("pizza_size_id",1);
criteria.add(Subqueries.exists(sizeCriteria.setProjection(Projections.property("pizza.id"))));
List<PizzaOrder> ordersWithOneSmallPizza = criteria.list();
</pre>
And <span style="font-style: italic;">voila</span>, the result will contain two PizzaOrders!
<span style="font-style: italic;">Photo Credit: </span><a href="http://flickr.com/people/squeakymarmot/"><span style="font-style: italic;">Squeaky Marmot</span></a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>33</wp:post_id>
<wp:post_date>2008-09-22 11:00:00</wp:post_date>
<wp:post_date_gmt>2008-09-22 17:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>hibernate-criteria-subqueries-exists</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008_09_01_archive.html</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229701486</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>32</wp:comment_id>
<wp:comment_author><![CDATA[Neil J. Patel]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-09-30 08:02:00</wp:comment_date>
<wp:comment_date_gmt>2008-09-30 14:02:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Good stuff. One more point I'll add is that if your taking notes:<br/><br/>1. Try and use pen and paper<br/>2. If you need to use a laptop, try not to station yourself next to the hand-free phone<br/>3. If you can't do that, try not to hammer the keys, as every little noise is picked up and amplified by the phone...and it's annoying!<br/><br/>Oh and one more thing:<br/>If your all gathered around a table speaking to people across the world..SPEAK UP! Being loud is not half as bad as not being able to hear you at all!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Eight Rules of Conference Call Etiquette</title>
<link>http://mikedesjardins.us/wordpress/2008/09/eight-rules-of-conference-call/</link>
<pubDate>Mon, 29 Sep 2008 20:29:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[career]]></category>

		<category domain="category" nicename="career"><![CDATA[career]]></category>

		<category><![CDATA[industry]]></category>

		<category domain="category" nicename="industry"><![CDATA[industry]]></category>

		<category><![CDATA[programming]]></category>

		<category domain="category" nicename="programming"><![CDATA[programming]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/09/eight-rules-of-conference-call-etiquette/</guid>
<description></description>
<content:encoded><![CDATA[<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/conference-call-746961.jpg"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer;" src="http://mikedesjardins.us/blog/uploaded_images/conference-call-746944.jpg" alt="" border="0" /></a>At my past few jobs, I've had to spend a lot of time on conference calls with developers and project managers.  While I don't profess to be a "conference call expert" (or, for that matter, an etiquette expert), I think there are some general ground rules for conference calls, and I'm going to deviate a bit from my usual Hibernate/JEE topics to itemize the ones that I think are important.<br /><br />At my current job, I'm actually pretty lucky.  Almost all of us work remotely, so we're pretty accustomed to how to behave in the ubiquitous con-call.  At a previous engagement, I wasn't so lucky - I'll omit their names to protect the guilty.<br /><br />So here's an arbitrary list from me, a random guy on the internet of questionable credentials, of what you should and shouldn't do on a conference call.  Some of these probably seem really obvious, but I'm listing even the obvious ones because some people still break them:<br /><br /><span style="font-weight: bold;">1.) Use the Mute Button, especially on a speakerphone.</span> The most important reason for using Mute is to prevent echo-y feedback, particularly on speaker phones.  If you aren't talking, please put your speaker phone on mute for the sake of everyone else listening.  Note that following this rule will invariably lead to the embarrassing situation where you start talking and don't realize that you've left your phone on mute.  Don't worry, we've all done it and we'll all forgive you!<br /><span style="font-weight: bold;">2.) Introduce yourself when you enter the conference.</span>  Some conference systems will force you to state your name when you log in, and then the robo-operator will announce you when you join.  I actually find this to be quite jarring, especially when robo-operator interrupts what everyone is saying.  Better systems will play a quiet tone when people enter or leave the call.  Some, like one that a client had at my previous job, will do nothing at all.  This would allow people to lurk on the line unbeknownst to the participants, which is <span style="font-style: italic;">terribly</span> rude.  Likewise, if you enter a conference room while a conference call is already underway, announce yourself at the next free moment.  Ideally, the moderator of the conference will also take a moment to introduce everybody at the beginning of the call if there is a chance that everyone doesn't know each other.  This is a <span style="font-style: italic;">great idea</span>.<br /><span style="font-weight: bold;">3.) Close the Door.</span>  It's best to go to a closed room to join a conference call to eliminate background noise.  If you can go to such a place, do it.  Don't join a conference call from, e.g., a street cafe or airport gate.  In doing so you risk a passing ambulance, street parade, or TSA threats to destroy unattended luggage interrupting the call.<br /><span style="font-weight: bold;">4.) Don't use a mobile phone if you can help it.</span>  Occasionally you can get away with using a mobile for a con-call in a pinch.  But if it's a super-important meeting where you are trying to make an impression or do something complicated, nothing will be more frustrating than a garbled, broken up, or dropped call.  Try to use a land-line if you can.<br /><span style="font-weight: bold;">5.) Don't eat on the phone.</span>  I guess this is just a personal pet peeve of mine.  I can't even listen to NPR if the announcer's voice is all moist and saliva-sounding.  This is more important if you're wearing a headset.<br /><span style="font-weight: bold;">6.) Have an agenda that everyone receives beforehand.</span>  This goes for all meetings, but it's just as critical for a conference call. This helps you set expectations and stay on-topic during the call.<br /><span style="font-weight: bold;">7.) Get some screen-sharing software.</span>  Better yet, get some screen sharing software and test it out before the meeting.  With it, you can use something as simple as Notepad or TextMate as a virtual whiteboard.  For some reason, we never did this at my previous jobs.  We've done it at my current job and it works great.<br /><span style="font-weight: bold;">8.) Pick a good time for all participants. </span> This is particularly important if you're working in different time zones.  Generally you can depend on developers being available between 10am and 4pm in their respective time zones - you can argue that programmers need to grow up and work regular business hours like everyone else.  But until the voodoo of deadline creation becomes a perfected science, software people will need to occasionally work late into the night or early in the morning to meet schedules.  Or (like anyone else) we may have daycare responsibilities and have to leave a little early.  So we stay flexible.  This means that if you're working on, e.g., both coasts of the United States, your best bet is between 1pm and 3pm, eastern time.  If you're working in the U.S. and the far east, you're usually stuck with getting the U.S. participants to work early, and the others late in their workday.  Similarly between Europe and the U.S., the U.S. participants will probably need to be available late in the day, and the Europeans earlier.<br /><br />What do you think?  Have I missed any conference call ground rules?<br /><br /><span style="font-style: italic;">Photo Credit: </span><a style="font-style: italic;" href="http://flickr.com/people/spcummings/">Stephen Cummings</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>126</wp:post_id>
<wp:post_date>2008-09-29 15:29:00</wp:post_date>
<wp:post_date_gmt>2008-09-29 20:29:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>eight-rules-of-conference-call</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229860071</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/09/eight-rules-of-conference-call.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>114</wp:comment_id>
<wp:comment_author><![CDATA[Neil J. Patel]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-09-30 09:02:00</wp:comment_date>
<wp:comment_date_gmt>2008-09-30 14:02:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Good stuff. One more point I'll add is that if your taking notes:<br/><br/>1. Try and use pen and paper<br/>2. If you need to use a laptop, try not to station yourself next to the hand-free phone<br/>3. If you can't do that, try not to hammer the keys, as every little noise is picked up and amplified by the phone...and it's annoying!<br/><br/>Oh and one more thing:<br/>If your all gathered around a table speaking to people across the world..SPEAK UP! Being loud is not half as bad as not being able to hear you at all!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>115</wp:comment_id>
<wp:comment_author><![CDATA[Mike Desjardins]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-09-30 09:07:00</wp:comment_date>
<wp:comment_date_gmt>2008-09-30 14:07:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[@Neil - excellent points!  I can't believe I forgot loud typing and mumbling!  :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Clearing Hibernate Second-Level Caches</title>
<link>http://mikedesjardins.us/wordpress/2008/10/clearing-hibernate-second-level-caches/</link>
<pubDate>Thu, 09 Oct 2008 12:03:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[cache]]></category>

		<category domain="category" nicename="cache"><![CDATA[cache]]></category>

		<category><![CDATA[hibernate]]></category>

		<category domain="category" nicename="hibernate"><![CDATA[hibernate]]></category>

		<category><![CDATA[java]]></category>

		<category domain="category" nicename="java"><![CDATA[java]]></category>

		<category><![CDATA[jpa]]></category>

		<category domain="category" nicename="jpa"><![CDATA[jpa]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=34</guid>
<description></description>
<content:encoded><![CDATA[<a href="http://mikedesjardins.us/blog/uploaded_images/chalkboards-1-FolkeB-735126.jpg" onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer;" src="http://mikedesjardins.us/blog/uploaded_images/chalkboards-1-FolkeB-735124.jpg" border="0" alt="" /></a>Recently, I wanted to be able to clear out all of the Hibernate caches via JBoss's JMX console.  I could have taken the easy way out; we're using EHCache, so it could have been as simple as calling <span style="font-style: italic;">CacheManager.clearAll()</span>.  However, that would have tied me to a specific cache provider.  We're still evaluating switching to other cache providers.  Ideally, my solution would not be dependent on a specific cache implementation.

Hibernate's API does provide a simple way to clear specific caches, but does not provide any method for clearing out all of them.  Writing your own is fairly straightforward.  First, you obtain all of the entity and collection metadata from the session factory.  Next you iterate over the entities, and if the object is cached, you clear out all of the caches associated with the persisted class or collection.  Here's the code:
<pre lang="java">  
  @PersistenceContext
  private EntityManager em;

  public void clearHibernateCache() {      
    Session s = (Session)em.getDelegate();
    SessionFactory sf = s.getSessionFactory();
    Map<String,EntityPersister> classMetadata = sf.getAllClassMetadata();

    for (EntityPersister ep : classMetadata.values()) {          
      if (ep.hasCache()) {              
        sf.evictEntity(ep.getCache().getRegionName());          
      }      
    }

    Map<String,AbstractCollectionPersister> collMetadata = sf.getAllCollectionMetadata();      
    for (AbstractCollectionPersister acp : collMetadata.values()) {          
      if (acp.hasCache()) {              
        sf.evictCollection(acp.getCache().getRegionName());          
      }      
    }
    return;  
  }
</pre>
Now, if we decide to switch to a different cache provider, this code will not need to be re-written.  Hopefully we won't ever change to a different JPA implementaion.  :)

<span style="font-style: italic;">Photo Credit: </span><a style="font-style: italic;" href="http://flickr.com/people/24337020@N07/">FolkeB</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>34</wp:post_id>
<wp:post_date>2008-10-09 06:03:00</wp:post_date>
<wp:post_date_gmt>2008-10-09 12:03:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>clearing-hibernate-second-level-caches</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008_10_01_archive.html</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229519254</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>33</wp:comment_id>
<wp:comment_author><![CDATA[David]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-10-09 10:17:00</wp:comment_date>
<wp:comment_date_gmt>2008-10-09 16:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Tnxs for the tip Mike, I'm currently working on Hibernate projects and I appreciate this kind of info.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Configure Spring to automatically re-connect to your EJBs</title>
<link>http://mikedesjardins.us/wordpress/2008/10/configure-spring-to-automatically-re/</link>
<pubDate>Fri, 24 Oct 2008 15:21:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[ejb]]></category>

		<category domain="category" nicename="ejb"><![CDATA[ejb]]></category>

		<category><![CDATA[ejb3]]></category>

		<category domain="category" nicename="ejb3"><![CDATA[ejb3]]></category>

		<category><![CDATA[java]]></category>

		<category domain="category" nicename="java"><![CDATA[java]]></category>

		<category><![CDATA[spring]]></category>

		<category domain="category" nicename="spring"><![CDATA[spring]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/2008/10/configure-spring-to-automatically-re-connect-to-your-ejbs/</guid>
<description></description>
<content:encoded><![CDATA[<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/beans-777004.jpg"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer; width: 320px; height: 240px;" src="http://mikedesjardins.us/blog/uploaded_images/beans-776973.jpg" alt="" border="0" /></a>If you have a service that is a client of a remote EJB, you may have run into the situation where the EJB server shuts down and restarts.  When this happens your EJB client may need to be restarted as well, in order to re-discover and reconnect to the EJBs; otherwise you'll end up with connection exceptions in the client.<br /><br />If you're using Spring to autowire your EJB clients, it's quite easy to configure the service so that the home interface will refresh on connection failures.  Note that if you're using EJB3, you will need to upgrade to at least version 2.5.5 of Spring.  There is a <a href="http://jira.springframework.org/browse/SPR-4801">bug</a> in earlier versions of Spring which prevented this technique from working with EJB3.<br /><br />In your spring file, make sure you configure your slsb references to have cache-home disabled, and refresh-home-0n-connect-failure thusly:<br />
<pre lang="xml">
<jee:remote-slsb id="myService" jndi-name="MyService/remote"
        business-interface="us.mikedesjardins.services.MyService"
        cache-home="false" lookup-home-on-startup="false"
        home-interface="us.mikedesjardins.services.MyService"
        resource-ref="false" refresh-home-on-connect-failure="true">
    <jee:environment>
           <!-- Include any relevant environment settings here -->
    </jee:environment>
</jee:remote-slsb>
</pre><br />With this, you should be able to restart your EJB hosts without needing to restart your EJB clients!<br /><br /><i>Photo Credit: <a href="http://flickr.com/people/wanko/">Wanko</a></i>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>128</wp:post_id>
<wp:post_date>2008-10-24 10:21:00</wp:post_date>
<wp:post_date_gmt>2008-10-24 15:21:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>configure-spring-to-automatically-re</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_wp_old_slug</wp:meta_key>
<wp:meta_value>configure-spring-to-automatically-re-connect-to-your-ejbs</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229905204</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_author</wp:meta_key>
<wp:meta_value>Mike Desjardinshttp://www.blogger.com/profile/07892630576680251412noreply@blogger.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008/10/configure-spring-to-automatically-re.html</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Don&#039;t Ignore serialVersionUID</title>
<link>http://mikedesjardins.us/wordpress/2008/12/dont-ignore-serialversionuid/</link>
<pubDate>Thu, 11 Dec 2008 13:40:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[avant]]></category>

		<category domain="category" nicename="avant"><![CDATA[avant]]></category>

		<category><![CDATA[ejb]]></category>

		<category domain="category" nicename="ejb"><![CDATA[ejb]]></category>

		<category><![CDATA[java]]></category>

		<category domain="category" nicename="java"><![CDATA[java]]></category>

		<category><![CDATA[jee]]></category>

		<category domain="category" nicename="jee"><![CDATA[jee]]></category>

		<category><![CDATA[remoting]]></category>

		<category domain="category" nicename="remoting"><![CDATA[remoting]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=35</guid>
<description></description>
<content:encoded><![CDATA[<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mikedesjardins.us/blog/uploaded_images/bowl-of-cereal-774086.jpg"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer; width: 212px; height: 320px;" src="http://mikedesjardins.us/blog/uploaded_images/bowl-of-cereal-774065.jpg" alt="" border="0" /></a>Okay,I admit that this one should have totally been obvious to me long ago.  But I'm still a bit of a JEE newcomer (been doing it for almost five years), so perhaps I can be forgiven.<br /><br />If you do a lot of ORM or EJB remoting,  you probably deal with a lot of Serializable classes.  And you're probably used to the annoying warning message that you see all the time in your IDE when you're working with Serializable classes:<br /><br />The serializable class BlaBlaBla does not declare a static final serialVersionUID field of type long    BlaBlaBla.java    myProject/src/main/java/us/mikedesjardins/foo/domain/entity    line 44<br /><br />If you're like me, you roll your eyes and politely add a @SuppressWarnings("serial") to the top of the class definition (or, worse, you just shut the warning message off in your IDE altogether.  Even I don't do that!). You reason with yourself that current versions of Java conveniently and automatically compute the serialVersionUID at run-time, so there's no need to bother with the formality of a version number on your class - it's just a nuisance holdover from days of Java yore.<br /><br /><span style="font-weight: bold;">IT'S A TRAP!</span><br />Now that I've found myself well into a new project with this lazy philosophy, I'm starting to run into problems.  I have a client of my EJB that uses one of these Serializable objects, and I'm finding that when I make the most trivial changes to my shared classes, I need to compile both the server and the client components.  The two components that were supposed to be loosely coupled are now hopelessly intertwined.  So I did some further research on how the JVM computes the ad-hoc serialVersionUID at runtime when it isn't provided.<br /><br /><a href="http://www.javaworld.com/javaworld/jw-02-2006/jw-0227-control.html?page=1">This article over at JavaWorld does a far better and more thorough job of explaining it than I will</a>.  In a nutshell, backward-compatability with respect to serialization and de-serialization is a lot less fragile than the cases that the serialVersionUID generation is protecting you against.  That version generation algorithm computes an SHA hash based on the class name, sorted member variables, modifiers, and interfaces.<br /><br />In reality, serialization and de-serialization generally only breaks when one of the following things happens to your class (from the aforementioned article at JavaWorld):<br /><ul><li>Delete fields</li><li>Change class hierarchy</li><li>Change non-static to static</li><li>Change non-transient to transient</li><li>Change type of a primitive field</li></ul><span style="font-weight: bold;">Ensure Minimal Coupling Between Components</span><br />To ensure that your components which use Serialization have minimal runtime dependencies on each other, you have two options:<br /><ul><li>Declare a specific serialVersionUID, and update it whenever you make a change that breaks backward compatability.</li><li>Don't rely on any classes for use as transfer objects which will potentially change.  This one is pretty obvious, but sometimes you will be surprised down the road at which classes are modified more often than others.</li><li>Don't use your own objects at all when transferring data.  Instead, rely on classes like Integers, Strings, or HashMaps to shuttle data around among components.  (Obviously, protocols like SOAP and REST rely on XML documents for this to ensure maximum de-coupling, but you're presumably using something like EJB remoting to avoid the complexity or overhead of these protocols).<br /></li></ul><span style="font-style: italic;">Photo Credit: </span><a style="font-style: italic;" href="http://flickr.com/people/thebusybrain/">Mike Johnson</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>35</wp:post_id>
<wp:post_date>2008-12-11 07:40:00</wp:post_date>
<wp:post_date_gmt>2008-12-11 13:40:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>dont-ignore-serialversionuid</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229632014</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_blog</wp:meta_key>
<wp:meta_value>mikedesjardins.blogspot.com</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>blogger_permalink</wp:meta_key>
<wp:meta_value>/2008_12_01_archive.html</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>34</wp:comment_id>
<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-12-15 06:16:00</wp:comment_date>
<wp:comment_date_gmt>2008-12-15 12:16:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Mike,<br/><br/>I always thought its ide related.<br/>I&#39;m working with both eclipse &amp; intellij.<br/>In Intellij i never recieved the warning of the serial id....<br/>Tomerz]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>About</title>
<link>http://mikedesjardins.us/wordpress/about/</link>
<pubDate>Tue, 16 Dec 2008 17:52:29 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?page_id=2</guid>
<description></description>
<content:encoded><![CDATA[This is an example of a WordPress page, you could edit this to put information about yourself or your site so readers know where you are coming from. You can create as many pages like this one or sub-pages as you like and manage all of your content inside of WordPress.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>2</wp:post_id>
<wp:post_date>2008-12-16 11:52:29</wp:post_date>
<wp:post_date_gmt>2008-12-16 17:52:29</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>about</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>page</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Test your EJBs with JMeter</title>
<link>http://mikedesjardins.us/wordpress/2008/12/test-your-ejbs-with-jmeter/</link>
<pubDate>Tue, 23 Dec 2008 02:14:21 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[ejb]]></category>

		<category domain="category" nicename="ejb"><![CDATA[ejb]]></category>

		<category><![CDATA[ejb3]]></category>

		<category domain="category" nicename="ejb3"><![CDATA[ejb3]]></category>

		<category><![CDATA[java]]></category>

		<category domain="category" nicename="java"><![CDATA[java]]></category>

		<category><![CDATA[jmeter]]></category>

		<category domain="category" nicename="jmeter"><![CDATA[jmeter]]></category>

		<category><![CDATA[programming]]></category>

		<category domain="category" nicename="programming"><![CDATA[programming]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=196</guid>
<description></description>
<content:encoded><![CDATA[<em>Note: This is my first blog post on my newly upgraded Wordpress blog (prior to thi</em><em><img class="alignright size-thumbnail wp-image-198" title="jaguar-tachometer.jpg" src="http://mikedesjardins.us/wordpress/wp-content/uploads/2008/12/jaguar-tachometer-150x150.jpg" alt="jaguar-tachometer.jpg" width="150" height="150" /></em><em>s, I used </em><em>Blogger).  Hopefully everything goes OK!</em>

Sometimes it's helpful to do some performance benchmarks on your EJBs.  There are a few different ways to do this, but I've found that Apache's <a href="http://jakarta.apache.org/jmeter">JMeter</a> is an excellent tool for benchmarking.  Unfortunately, JMeter doesn't come with a general-purpose sampler for testing arbitrary EJBs.  Luckily, it isn't very difficult to create one.

For this article, I'm using the JBoss application server to host my EJBs.  The process for using other containers should be quite similar.
<h3>1.) Create a factory to lookup your EJBs.</h3>
The first thing that you'll probably want to do is create a simple singleton factory class to create instances of your EJB client for your test.  I use something like the following:
<pre lang="java">public class MyServiceFactory {
  private static final Log log = LogFactory.getLog(MyServiceFactory.class);
  private static MyService service;
  private static MyServiceFactory me;

  private MyServiceFactory() { }

  static {
    MyServiceFactory.me = new MyServiceFactory();
  }

  public static MyServiceFactory getInstance() {
    return MyServiceFactory.me;
  }

  public MyService getService() {
    if (MyService.service == null) {
      // Get the remote interface of the music search service
      try {
        log.info("Loading the service...");

        // JNDI the old-fashioned way:
        Context ctx = new InitialContext();
        service = (MyService)ctx.lookup("MyAction/remote");
        if (service == null) {
          log.error("Didn't get the service!");
        }
      } catch (NamingException e) {
        log.error("Error looking up the remote service", e);
        return null;
      }
    }
    return service;
  }
}</pre>
<h3>2.) Write the test</h3>
Next, we'll need to write the test itself.  To do this, we'll extend the AbstractJavaSamplerClient class in JMeter's org.apache.jmeter.protocol.java.sampler package.  This abstract class has a runTest method that we will override, and this method implements the actual test.   We will also override the getDefaultParameters method to provide some reasonable defaults values which will be displayed in JMeter's GUI application.
<pre lang="java">package us.mikedesjardins.demo.jmeter;

import org.apache.jmeter.config.Arguments;
import org.apache.jmeter.protocol.java.sampler.AbstractJavaSamplerClient;
import org.apache.jmeter.protocol.java.sampler.JavaSamplerContext;
import org.apache.jmeter.samplers.SampleResult;

public class DigitalContentServiceEJBTestSampler extends AbstractJavaSamplerClient {
  public SampleResult runTest(JavaSamplerContext context) {
    SampleResult results = new SampleResult();
    MyService service = MyServiceFactory.getInstance().getService();

    results.sampleStart();
    Long param1 = context.getLongParameter("PARAM_1");
    String param2 = context.getStringParameter("PARAM_2");

    MyResult result = service.myMethod(param1, param2);
    if (result != null) {
       results.setSuccessful(true);
       results.setResponseCodeOK();
       results.setResponseMessage("'myResult:" + myResult);
    } else {
       results.setSuccessful(false);
    }
    results.sampleEnd();
    return results;
  }

  @Override
  public Arguments getDefaultParameters() {
    Arguments args = new Arguments();
    args.addArgument("PARAM_1", "4815162342");
    args.addArgument("PARAM_2", "Iculus");
    return args;
  }
}</pre>
<h3>3.) Setup JMeter</h3>
JMeter's extra libs directory is ${JMETER_INSTALL_LIB}/lib/ext.  Into that directory you will need to copy any jars that your EJB client will need.  In you're using JBoss, you will want to copy the jbossall-client.jar into that directory as well (for the JNDI client and other remoting goodies) - presumably other application servers have similar client jar files available.

When you fire up JMeter, your new sampler should appear in the Samplers menu.  Enjoy!

<em>Photo Credit: <a href="http://flickr.com/people/billjacobus1/">Bill Jacobus</a></em>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>196</wp:post_id>
<wp:post_date>2008-12-22 21:14:21</wp:post_date>
<wp:post_date_gmt>2008-12-23 02:14:21</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>test-your-ejbs-with-jmeter</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229999340</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>146</wp:comment_id>
<wp:comment_author><![CDATA[JMeter &#38; Plugins &laquo; Ambient Ideas&#8217; Denver Dev]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://ambientideas.com/blog/index.php/2008/12/jmeter-plugins/</wp:comment_author_url>
<wp:comment_author_IP>216.119.125.40</wp:comment_author_IP>
<wp:comment_date>2009-02-01 12:43:56</wp:comment_date>
<wp:comment_date_gmt>2009-02-01 17:43:56</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] I noticed a post on JMeter EJB plugin. It is a short but well written example. My ears are a bit more attuned to Apache JMeter these days after I wrote the first OSS Groovy plugin for JMeter last month. One of my clients is now using it for scalability testing of a JEE application. I highly suggest you take a look and consider contributing ideas or code to the project. I&#8217;d be glad to have other contributors. [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>jaguar-tachometer.jpg</title>
<link>http://mikedesjardins.us/wordpress/2008/12/test-your-ejbs-with-jmeter/jaguar-tachometerjpg/</link>
<pubDate>Tue, 23 Dec 2008 02:17:57 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/wp-content/uploads/2008/12/jaguar-tachometer.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>198</wp:post_id>
<wp:post_date>2008-12-22 21:17:57</wp:post_date>
<wp:post_date_gmt>2008-12-23 02:17:57</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>jaguar-tachometerjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>196</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://mikedesjardins.us/wordpress/wp-content/uploads/2008/12/jaguar-tachometer.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2008/12/jaguar-tachometer.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"500";s:6:"height";s:3:"493";s:14:"hwstring_small";s:22:"height='96' width='97'";s:4:"file";s:29:"2008/12/jaguar-tachometer.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:29:"jaguar-tachometer-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:29:"jaguar-tachometer-300x295.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"295";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>jaguar-tachometer1</title>
<link>http://mikedesjardins.us/wordpress/2008/12/test-your-ejbs-with-jmeter/jaguar-tachometer1/</link>
<pubDate>Tue, 23 Dec 2008 02:19:49 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/wp-content/uploads/2008/12/jaguar-tachometer1.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>201</wp:post_id>
<wp:post_date>2008-12-22 21:19:49</wp:post_date>
<wp:post_date_gmt>2008-12-23 02:19:49</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>jaguar-tachometer1</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>196</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://mikedesjardins.us/wordpress/wp-content/uploads/2008/12/jaguar-tachometer1.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2008/12/jaguar-tachometer1.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"500";s:6:"height";s:3:"493";s:14:"hwstring_small";s:22:"height='96' width='97'";s:4:"file";s:30:"2008/12/jaguar-tachometer1.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:30:"jaguar-tachometer1-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:30:"jaguar-tachometer1-300x295.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"295";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>private-property</title>
<link>http://mikedesjardins.us/wordpress/2009/01/external-configuration-with-jboss/private-property/</link>
<pubDate>Fri, 09 Jan 2009 21:52:07 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/wp-content/uploads/2009/01/private-property.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>213</wp:post_id>
<wp:post_date>2009-01-09 16:52:07</wp:post_date>
<wp:post_date_gmt>2009-01-09 21:52:07</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>private-property</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>212</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://mikedesjardins.us/wordpress/wp-content/uploads/2009/01/private-property.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/01/private-property.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"500";s:6:"height";s:3:"375";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:28:"2009/01/private-property.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"private-property-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:28:"private-property-300x225.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>External Configuration with JBoss</title>
<link>http://mikedesjardins.us/wordpress/2009/01/external-configuration-with-jboss/</link>
<pubDate>Fri, 09 Jan 2009 21:52:49 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[java]]></category>

		<category domain="category" nicename="java"><![CDATA[java]]></category>

		<category><![CDATA[jee]]></category>

		<category domain="category" nicename="jee"><![CDATA[jee]]></category>

		<category><![CDATA[wireless]]></category>

		<category domain="category" nicename="wireless"><![CDATA[wireless]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=212</guid>
<description></description>
<content:encoded><![CDATA[<p><img class="alignright size-medium wp-image-213" title="private-property" src="http://mikedesjardins.us/wordpress/wp-content/uploads/2009/01/private-property-300x225.jpg" alt="private-property" width="300" height="225" />In a project I'm currently working on, I need to make some parameters configurable, and they need to be outside the .war file that I'm deploying.  For example, let's say I'm creating a service which reads data from some other RESTful service.  And let's say that the other RESTful service has two URLs, one for test and one for production.  I'd like to be able to deploy my .war, and then edit a file outside of that .war file to configure which URL my service should be using.</p>
<p>My first inclination was to try to do this with a JNDI Environment Entry, so I began researching that approach.  However, while the EJB spec states in 20.2.4 that the container must "provide a deployment tool that allows the Deployer to set and modify the values of the enterprise bean's environment entries" (thanks for finding that one, <a href="http://www.jboss.com/?module=bb&amp;op=viewtopic&amp;t=58190">ipage</a>), JBoss does not seem to have such a facility.</p>
<p>Soon I started to wonder if JNDI wasn't a bit overkill for what I needed to do, anyway.  I didn't want to specify my parameters on the command-line; I wanted to simplify deployment and wanted to be able to change these values at runtime without restarting the server. But perhaps a System Property was all I needed.</p>
<p>As it turns out, JBoss has the <a href="http://docs.jboss.org/jbossas/jboss4guide/r3/html/ch10.html">System Properties Management Service</a> for such things.  Here's what you need to do:</p>
<ol>
<li>Make sure properties-plugin.jar is in your ${JBOSS_HOME}/server/&lt;server&gt;/lib directory.</li>
<li>Make sure the properties-service.xml is in your deploy directory (you can find a copy in the "default" server directory)</li>
<li>You now have two options, either edit the URLList to have a comma-separated list of locations of properties files, or you can specify your properties directly in properties-service.xml in the &lt;attribute name="Properties"&gt; element.</li>
</ol>
<p>Now, to access your property, all you need to do is call the venerable System.getProperty() method.</p>
<p><em>Photo Credit: <a href="http://flickr.com/people/shelleygibb/">Shelley Gibb</a></em></p>
]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>212</wp:post_id>
<wp:post_date>2009-01-09 16:52:49</wp:post_date>
<wp:post_date_gmt>2009-01-09 21:52:49</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>external-configuration-with-jboss</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1231940215</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_dzone</wp:meta_key>
<wp:meta_value>false<--></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>138</wp:comment_id>
<wp:comment_author><![CDATA[feniix]]></wp:comment_author>
<wp:comment_author_email>feniix@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>38.106.170.210</wp:comment_author_IP>
<wp:comment_date>2009-01-12 19:29:31</wp:comment_date>
<wp:comment_date_gmt>2009-01-13 00:29:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[What would be the difference with setting environment variables from the command line in the startup script in a JAVA_OPTS variable?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>139</wp:comment_id>
<wp:comment_author><![CDATA[feniix]]></wp:comment_author>
<wp:comment_author_email>feniix@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>38.106.170.210</wp:comment_author_IP>
<wp:comment_date>2009-01-12 19:31:14</wp:comment_date>
<wp:comment_date_gmt>2009-01-13 00:31:14</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I meant:

set JAVA_OPTS=%JAVA_OPTS% -DURL=pete.com
or 
JAVA_OPTS="${JAVA_OPTS} -DURL=pete.com"
export JAVA_OPTS]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>141</wp:comment_id>
<wp:comment_author><![CDATA[feniix]]></wp:comment_author>
<wp:comment_author_email>feniix@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>98.227.63.72</wp:comment_author_IP>
<wp:comment_date>2009-01-13 02:36:31</wp:comment_date>
<wp:comment_date_gmt>2009-01-13 07:36:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I slightly dissent on that, I mean, may be for a local environment its better/configurable from the IDE really quick and without a restart.
I tried the properties-service.xml with one of the applications I manage that uses the environment variables defined in the command line and it seems is not working as expected.
I still need to do another test making sure that the properties-service.xml gets loaded always before the application.
At any rate, if you define properties in the service.xml I'd say that you application won't get the new property values from there even if you redeploy the properties-service.xml 

I was really looking forward to see this working on my environments.

It's pretty cool though :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>140</wp:comment_id>
<wp:comment_author><![CDATA[admin]]></wp:comment_author>
<wp:comment_author_email>desjardinsmike@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://mikedesjardins.us</wp:comment_author_url>
<wp:comment_author_IP>69.207.227.53</wp:comment_author_IP>
<wp:comment_date>2009-01-12 19:39:00</wp:comment_date>
<wp:comment_date_gmt>2009-01-13 00:39:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[@feniix - nothing really.  In my particular situation, it's easier to have people deploy an .xml file to the deploy directory than it is to make different run scripts for each server that define the different JAVA_OPTS.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Presentation on Maven</title>
<link>http://mikedesjardins.us/wordpress/2009/02/presentation-on-maven/</link>
<pubDate>Thu, 26 Feb 2009 15:38:33 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[ant]]></category>

		<category domain="category" nicename="ant"><![CDATA[ant]]></category>

		<category><![CDATA[java]]></category>

		<category domain="category" nicename="java"><![CDATA[java]]></category>

		<category><![CDATA[maven]]></category>

		<category domain="category" nicename="maven"><![CDATA[maven]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=223</guid>
<description></description>
<content:encoded><![CDATA[Last night I spoke at TechMaine's Java Users Group about Maven.  I've made the slides available on Slideshare, although Slideshare botched some of the formatting a bit.  You will get the proper format if you download it and view it locally.
<div id="__ss_1073225" style="width: 425px; text-align: left;"><a style="font:14px Helvetica,Arial,Sans-serif;display:block;margin:12px 0 3px 0;text-decoration:underline;" title="Demystifying Maven" href="http://www.slideshare.net/mdesjardins/demystifying-maven?type=powerpoint">Demystifying Maven</a><object width="425" height="355" data="http://static.slideshare.net/swf/ssplayer2.swf?doc=maven-for-maine-jug-090226091601-phpapp02&amp;rel=0&amp;stripped_title=demystifying-maven" type="application/x-shockwave-flash"><param name="allowFullScreen" value="true" /><param name="allowScriptAccess" value="always" /><param name="src" value="http://static.slideshare.net/swf/ssplayer2.swf?doc=maven-for-maine-jug-090226091601-phpapp02&amp;rel=0&amp;stripped_title=demystifying-maven" /><param name="allowfullscreen" value="true" /></object>
<div style="font-size: 11px; font-family: tahoma,arial; height: 26px; padding-top: 2px;">View more <a style="text-decoration:underline;" href="http://www.slideshare.net/">presentations</a> from <a style="text-decoration:underline;" href="http://www.slideshare.net/mdesjardins">mdesjardins</a>. (tags: <a style="text-decoration:underline;" href="http://slideshare.net/tag/maven">maven</a> <a style="text-decoration:underline;" href="http://slideshare.net/tag/build-tools">build-tools</a>)</div>
</div>
Enjoy!  Here is the abstract for the presentation if you want to know what it's about before diving in:

"Why do we need another build tool when we already have Ant? By focusing on convention over configuration, Maven allows you to declaratively define how your project is built, which reduces a lot of the procedural code that you'd need to implement in every build file if you were using Ant. This, along with Maven's built-in management of repositories for project dependencies, allows you to streamline your build process. Ultimately Maven can reduce the amount of time that would otherwise be wasted hunting down jar files and fiddling with boilerplate build scripts.

<span>This presentation covers Maven's core concepts. It introduces the Plugin architecture, and explain how the most popular plugins are used. It also covers the POM concept and how it relates to dependency tracking and repositories."</span>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>223</wp:post_id>
<wp:post_date>2009-02-26 10:38:33</wp:post_date>
<wp:post_date_gmt>2009-02-26 15:38:33</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>presentation-on-maven</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1235662755</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_dzone</wp:meta_key>
<wp:meta_value>false<--></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>twitter-bird-2</title>
<link>http://mikedesjardins.us/wordpress/2009/03/bluebird-1alpha1-released/twitter-bird-2/</link>
<pubDate>Mon, 09 Mar 2009 14:07:44 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/wp-content/uploads/2009/03/twitter-bird-2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>228</wp:post_id>
<wp:post_date>2009-03-09 09:07:44</wp:post_date>
<wp:post_date_gmt>2009-03-09 14:07:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>twitter-bird-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>227</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://mikedesjardins.us/wordpress/wp-content/uploads/2009/03/twitter-bird-2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/03/twitter-bird-2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"360";s:6:"height";s:3:"360";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:26:"2009/03/twitter-bird-2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"twitter-bird-2-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:26:"twitter-bird-2-300x300.png";s:5:"width";s:3:"300";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Bluebird 1alpha1 released</title>
<link>http://mikedesjardins.us/wordpress/2009/03/bluebird-1alpha1-released/</link>
<pubDate>Mon, 09 Mar 2009 14:09:04 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[bluebird]]></category>

		<category domain="category" nicename="bluebird"><![CDATA[bluebird]]></category>

		<category><![CDATA[xul]]></category>

		<category domain="category" nicename="xul"><![CDATA[xul]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=227</guid>
<description></description>
<content:encoded><![CDATA[Just in case you've been wondering what I've been up to - I've been working on a XUL-based desktop twitter client <img class="alignright size-medium wp-image-228" title="twitter-bird-2" src="http://mikedesjardins.us/wordpress/wp-content/uploads/2009/03/twitter-bird-2-300x300.png" alt="twitter-bird-2" width="129" height="129" />for the past few months.  It's alpha quality now, but it's mostly usable if you want to kick the tires on it a bit.  Right now it's only available as a Mac OSX DMG file, but it should be fairly portable to other platforms in short order (volunteers are appreciated!).

It's called Bluebird, and it's homepage is <a href="http://bluebirdtwitterclient.com" target="_blank">bluebirdtwitterclient.com</a> (yeah, it's a mouthful).  Check it out and let me know what you think!]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>227</wp:post_id>
<wp:post_date>2009-03-09 09:09:04</wp:post_date>
<wp:post_date_gmt>2009-03-09 14:09:04</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>bluebird-1alpha1-released</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1236607817</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_dzone</wp:meta_key>
<wp:meta_value>false<--></wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Rails, REST, and soapUI</title>
<link>http://mikedesjardins.us/wordpress/2009/03/rails-rest-and-soapui/</link>
<pubDate>Wed, 18 Mar 2009 14:32:07 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[REST]]></category>

		<category domain="category" nicename="rest"><![CDATA[REST]]></category>

		<category><![CDATA[rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[rails]]></category>

		<category><![CDATA[soapUI]]></category>

		<category domain="category" nicename="soapui"><![CDATA[soapUI]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=231</guid>
<description></description>
<content:encoded><![CDATA[I used to use <a href="http://soapui.org" target="_blank">soapUI</a> back when I was creating a SOAP API for a national wireless carrier.  Thankfully, I've been working primarily with REST APIs since then.  I noticed that soapUI had added REST support to their product, and recently I decided to try it out.

The REST API that I'm developing is in Rails (this is my first foray into Rails; I'm usually a Java guy with some occasional dabbling in Django and Grails), so the URLs don't follow the traditional query-string format for passing parameters.  E.g., instead of GETting <strong>http://server:port/resource?id=123</strong> to retrieve the resource with ID 123, it's <strong>http://server:port/resource/123</strong>.

For some reason (admittedly, I was being pretty dense at the time), it took me a long time to figure out how to do this in soapUI, but if you've stumbled into my blog by Googling for how it's done, here's the trick: first, set your resource URL to <strong>/resource/{id}</strong> (note that id is in curly braces).  Then, when defining your parameters, instead of leaving the STYLE parameter at its default value of QUERY, set it to TEMPLATE, being careful to name your parameter as it is named in the resource URL (in this case, id).  When soapUI generates the request, it'll replace the {id} with the parameter's value.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>231</wp:post_id>
<wp:post_date>2009-03-18 09:32:07</wp:post_date>
<wp:post_date_gmt>2009-03-18 14:32:07</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>rails-rest-and-soapui</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_dzone</wp:meta_key>
<wp:meta_value>false<--></wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1237386731</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>tereu-tereu-ian-matthew-soper</title>
<link>http://mikedesjardins.us/wordpress/2009/03/is-your-programming-team-your-rock-band/tereu-tereu-ian-matthew-soper/</link>
<pubDate>Tue, 24 Mar 2009 19:49:22 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/wp-content/uploads/2009/03/tereu-tereu-ian-matthew-soper.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>235</wp:post_id>
<wp:post_date>2009-03-24 14:49:22</wp:post_date>
<wp:post_date_gmt>2009-03-24 19:49:22</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>tereu-tereu-ian-matthew-soper</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>234</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://mikedesjardins.us/wordpress/wp-content/uploads/2009/03/tereu-tereu-ian-matthew-soper.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/03/tereu-tereu-ian-matthew-soper.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"500";s:6:"height";s:3:"334";s:14:"hwstring_small";s:23:"height='85' width='128'";s:4:"file";s:41:"2009/03/tereu-tereu-ian-matthew-soper.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:41:"tereu-tereu-ian-matthew-soper-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:41:"tereu-tereu-ian-matthew-soper-300x200.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"200";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Is Your Programming Team Your Rock Band?</title>
<link>http://mikedesjardins.us/wordpress/2009/03/is-your-programming-team-your-rock-band/</link>
<pubDate>Tue, 24 Mar 2009 19:50:52 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=234</guid>
<description></description>
<content:encoded><![CDATA[I'm sure that I'm not the person to make this connection, but it occurred to me the other day that being on a small<img class="alignright size-medium wp-image-235" title="tereu-tereu-ian-matthew-soper" src="http://mikedesjardins.us/wordpress/wp-content/uploads/2009/03/tereu-tereu-ian-matthew-soper-300x200.jpg" alt="tereu-tereu-ian-matthew-soper" width="300" height="200" /> team of coders is a lot like being in a band.  I've been in a couple bands that never went far beyond the garage (I'm allegedly a bass player), so perhaps I'm not the foremost authority on this topic.  However, I think there are a few parallels between building, e.g., a small MVC web application, and writing and performing the next standard verse-chorus-verse rock anthem.

In particular, I think there are parallels between the specific members of a prototypical Rock band, and the members of a team who create MVC applications:
<ul>
	<li><strong>Drummer</strong> - The Anchor.  Provides the foundation for the music, onto which the other layers are stacked and woven.  In an MVC app, this is your database guy/gal.  The person modeling your data and managing the schematic underpinnings of your application is your drummer.  And if you're using a weird schema-less database like CouchDB, then you have yourself a sloppy jazz drummer, which means more work for the Bassist.</li>
	<li><strong>Bass Player</strong> - The Bass Player sets the groove for the song, and maps the primal beats that the drummer is hammering out into something melodic for the rest of the band to work with.  The bassist is also crucial for carrying the beat for the rest of the band when the drummer is screwing around (see note about jazz drummers, above).  In our web application, this is the domain layer, where your ORM, caching, and validation all chill out.  And like the bass player, this is rarely the sexiest or most glamorous part of the application.</li>
	<li><strong>Guitarist(s) </strong>- This is your business logic developer.  Some bands choose to break this up into your traditional Angus/Malcom roles of "rhythm" and "lead" guitar.  Likewise, you may choose to have separate model and controller layers in your app (particularly if you're a three-tier app: the web tier controller is your Angus and the middle tier model is your Malcom).  Bass players can sometimes get by as guitarists in a pinch, and vice versa.  Likewise, you'll see business logic guys doing domain work and vice versa.  Just don't let them try to play their parts on the wrong instrument - you've gotta separate your concerns, dude.  Aside from the lyrics, this is the part of the song that your listeners are the most likely to hear.</li>
	<li><strong>Lead Singer</strong> - This is your AJAXy, CSS laden, poetic presentation of your band's message.  It's what your listeners hear (and see) first.  And the singer gets all flustered when the rest of the band screws up (the singer is a real primadonna, very sensitive). Changing your lead singer will almost certainly alieniate your fans (think Facebook redesign - the Sammy Hagar of UI decisions).</li>
</ul>
I tend to get carried away with analogies, and this one is no different - I could keep going (your roadies are your project managers, your label is the marketing and executives who make all the money) but I'll try to show some restraint.  But given this analogy, I find it interesting that the role I play on software teams is often similar to the role I play in a band.  I like bass.

<em>Photo Credit: <a href="http://www.flickr.com/people/iansoper/">Ian Matthew Soper</a></em>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>234</wp:post_id>
<wp:post_date>2009-03-24 14:50:52</wp:post_date>
<wp:post_date_gmt>2009-03-24 19:50:52</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>is-your-programming-team-your-rock-band</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_dzone</wp:meta_key>
<wp:meta_value>false<--></wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1237941293</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>150</wp:comment_id>
<wp:comment_author><![CDATA[Posts about Programming from google blogs as of March 24, 2009 &laquo; tryfly.com]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://tryfly.com/?p=10</wp:comment_author_url>
<wp:comment_author_IP>70.87.90.130</wp:comment_author_IP>
<wp:comment_date>2009-03-24 20:26:23</wp:comment_date>
<wp:comment_date_gmt>2009-03-25 00:26:23</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] on parallles applications for his GPU. (Eureka Press). This entry was posted on Tuesday, &#8230;   mike desjardins » Blog Archive » Is Your Programming Team Your &#8230; - mikedesjardins.us 03/24/2009 Python, Java, Javascript, Mac OS X, Avant Window Navigator, and [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>165</wp:comment_id>
<wp:comment_author><![CDATA[Mike]]></wp:comment_author>
<wp:comment_author_email>mikemail343@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://vkontakte.com/</wp:comment_author_url>
<wp:comment_author_IP>91.124.38.5</wp:comment_author_IP>
<wp:comment_date>2009-05-23 17:01:02</wp:comment_date>
<wp:comment_date_gmt>2009-05-23 21:01:02</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi, nice posts there :-) thank's for the interesting information]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Good Example - If I like Photographs, I should follow this guy</title>
<link>http://mikedesjardins.us/wordpress/2009/07/the-one-where-i-rant-about-followfriday-dos-and-donts/picture-1/</link>
<pubDate>Thu, 09 Jul 2009 17:09:35 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/wp-content/uploads/2009/07/picture-1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>240</wp:post_id>
<wp:post_date>2009-07-09 13:09:35</wp:post_date>
<wp:post_date_gmt>2009-07-09 17:09:35</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>picture-1</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>239</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://mikedesjardins.us/wordpress/wp-content/uploads/2009/07/picture-1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/picture-1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"572";s:6:"height";s:3:"194";s:14:"hwstring_small";s:23:"height='43' width='128'";s:4:"file";s:21:"2009/07/picture-1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"picture-1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:21:"picture-1-300x101.png";s:5:"width";s:3:"300";s:6:"height";s:3:"101";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>picture-2</title>
<link>http://mikedesjardins.us/wordpress/2009/07/the-one-where-i-rant-about-followfriday-dos-and-donts/picture-2/</link>
<pubDate>Thu, 09 Jul 2009 17:18:29 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/wp-content/uploads/2009/07/picture-2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>241</wp:post_id>
<wp:post_date>2009-07-09 13:18:29</wp:post_date>
<wp:post_date_gmt>2009-07-09 17:18:29</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>picture-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>239</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://mikedesjardins.us/wordpress/wp-content/uploads/2009/07/picture-2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/picture-2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"529";s:6:"height";s:3:"689";s:14:"hwstring_small";s:22:"height='96' width='73'";s:4:"file";s:21:"2009/07/picture-2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"picture-2-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:21:"picture-2-230x300.png";s:5:"width";s:3:"230";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>picture-3</title>
<link>http://mikedesjardins.us/wordpress/2009/07/the-one-where-i-rant-about-followfriday-dos-and-donts/picture-3/</link>
<pubDate>Thu, 09 Jul 2009 17:24:01 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/wp-content/uploads/2009/07/picture-3.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>242</wp:post_id>
<wp:post_date>2009-07-09 13:24:01</wp:post_date>
<wp:post_date_gmt>2009-07-09 17:24:01</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>picture-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>239</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://mikedesjardins.us/wordpress/wp-content/uploads/2009/07/picture-3.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/picture-3.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"544";s:6:"height";s:2:"81";s:14:"hwstring_small";s:23:"height='19' width='128'";s:4:"file";s:21:"2009/07/picture-3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"picture-3-150x81.png";s:5:"width";s:3:"150";s:6:"height";s:2:"81";}s:6:"medium";a:3:{s:4:"file";s:20:"picture-3-300x44.png";s:5:"width";s:3:"300";s:6:"height";s:2:"44";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>picture-4</title>
<link>http://mikedesjardins.us/wordpress/2009/07/the-one-where-i-rant-about-followfriday-dos-and-donts/picture-4/</link>
<pubDate>Thu, 09 Jul 2009 17:35:03 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/wp-content/uploads/2009/07/picture-4.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>243</wp:post_id>
<wp:post_date>2009-07-09 13:35:03</wp:post_date>
<wp:post_date_gmt>2009-07-09 17:35:03</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>picture-4</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>239</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://mikedesjardins.us/wordpress/wp-content/uploads/2009/07/picture-4.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/picture-4.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"579";s:6:"height";s:2:"66";s:14:"hwstring_small";s:23:"height='14' width='128'";s:4:"file";s:21:"2009/07/picture-4.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"picture-4-150x66.png";s:5:"width";s:3:"150";s:6:"height";s:2:"66";}s:6:"medium";a:3:{s:4:"file";s:20:"picture-4-300x34.png";s:5:"width";s:3:"300";s:6:"height";s:2:"34";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>picture-41</title>
<link>http://mikedesjardins.us/wordpress/2009/07/the-one-where-i-rant-about-followfriday-dos-and-donts/picture-41/</link>
<pubDate>Thu, 09 Jul 2009 17:35:28 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/wp-content/uploads/2009/07/picture-41.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>244</wp:post_id>
<wp:post_date>2009-07-09 13:35:28</wp:post_date>
<wp:post_date_gmt>2009-07-09 17:35:28</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>picture-41</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>239</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://mikedesjardins.us/wordpress/wp-content/uploads/2009/07/picture-41.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/picture-41.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"579";s:6:"height";s:2:"66";s:14:"hwstring_small";s:23:"height='14' width='128'";s:4:"file";s:22:"2009/07/picture-41.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"picture-41-150x66.png";s:5:"width";s:3:"150";s:6:"height";s:2:"66";}s:6:"medium";a:3:{s:4:"file";s:21:"picture-41-300x34.png";s:5:"width";s:3:"300";s:6:"height";s:2:"34";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>picture-5</title>
<link>http://mikedesjardins.us/wordpress/2009/07/the-one-where-i-rant-about-followfriday-dos-and-donts/picture-5/</link>
<pubDate>Thu, 09 Jul 2009 17:37:27 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/wp-content/uploads/2009/07/picture-5.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>245</wp:post_id>
<wp:post_date>2009-07-09 13:37:27</wp:post_date>
<wp:post_date_gmt>2009-07-09 17:37:27</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>picture-5</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>239</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://mikedesjardins.us/wordpress/wp-content/uploads/2009/07/picture-5.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/picture-5.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"554";s:6:"height";s:2:"69";s:14:"hwstring_small";s:23:"height='15' width='128'";s:4:"file";s:21:"2009/07/picture-5.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"picture-5-150x69.png";s:5:"width";s:3:"150";s:6:"height";s:2:"69";}s:6:"medium";a:3:{s:4:"file";s:20:"picture-5-300x37.png";s:5:"width";s:3:"300";s:6:"height";s:2:"37";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>picture-6</title>
<link>http://mikedesjardins.us/wordpress/2009/07/the-one-where-i-rant-about-followfriday-dos-and-donts/picture-6/</link>
<pubDate>Thu, 09 Jul 2009 17:43:55 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/wp-content/uploads/2009/07/picture-6.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>246</wp:post_id>
<wp:post_date>2009-07-09 13:43:55</wp:post_date>
<wp:post_date_gmt>2009-07-09 17:43:55</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>picture-6</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>239</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://mikedesjardins.us/wordpress/wp-content/uploads/2009/07/picture-6.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/picture-6.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"569";s:6:"height";s:2:"69";s:14:"hwstring_small";s:23:"height='15' width='127'";s:4:"file";s:21:"2009/07/picture-6.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"picture-6-150x69.png";s:5:"width";s:3:"150";s:6:"height";s:2:"69";}s:6:"medium";a:3:{s:4:"file";s:20:"picture-6-300x36.png";s:5:"width";s:3:"300";s:6:"height";s:2:"36";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>The one where I rant about #FollowFriday - Do&#039;s and Don&#039;ts</title>
<link>http://mikedesjardins.us/wordpress/2009/07/the-one-where-i-rant-about-followfriday-dos-and-donts/</link>
<pubDate>Fri, 10 Jul 2009 12:14:00 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[social]]></category>

		<category domain="category" nicename="social"><![CDATA[social]]></category>

		<category><![CDATA[twitter]]></category>

		<category domain="category" nicename="twitter"><![CDATA[twitter]]></category>

		<category domain="tag"><![CDATA[followfriday]]></category>

		<category domain="tag" nicename="followfriday"><![CDATA[followfriday]]></category>

		<category domain="tag"><![CDATA[social]]></category>

		<category domain="tag" nicename="social"><![CDATA[social]]></category>

		<category domain="tag"><![CDATA[social media]]></category>

		<category domain="tag" nicename="social-media"><![CDATA[social media]]></category>

		<category domain="tag"><![CDATA[twitter]]></category>

		<category domain="tag" nicename="twitter"><![CDATA[twitter]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=239</guid>
<description></description>
<content:encoded><![CDATA[Unless you've been living in a cave, you have heard about or participate in <a href="http://twitter.com">Twitter</a> (no disrespect to those annoying, ubiquitous <a href="http://en.wikipedia.org/wiki/GEICO_Cavemen">Geico cavemen</a>.  Hell, they are probably on Twitter now).  If you do tweet, then you probably know about <a href="http://search.twitter.com/search?q=%23followfriday">#followfriday</a>.  For the uninitiated, #followfriday is a tradition whereby you tweet your recommendations of fellow twitters worth following.

What started as a quaint concept in a <a href="http://twitter.com/micah/status/1124262248">single tweet</a> by Micah Baldwin (<a href="http://twitter.com/micha">@micah</a>) avalanched into an internet meme.  You can read about this phenomenon's history in a great <a href="http://mashable.com/2009/03/06/twitter-followfriday/">article on Mashable</a> and on <a href="http://learntoduck.com/micah/follow-friday">Micha's own blog</a>.

Fellow blogger, Portlander, and all-around great guy <a href="http://twitter.com/therichbrooks">Rich Brooks</a> (<em><a href="http://twitter.com/therichbrooks">The</a></em><a href="http://twitter.com/therichbrooks"> Rich Brooks</a>) posted some <a href="http://www.flyteblog.com/flyte/2009/06/what-is-followfriday-or-ff-best-practices.html">advice</a> on his company's blog on how to properly do follow Friday, and I think his points are worth repeating.  At the risk of sounding like a social media curmudgeon, here is my take on how best to do #followfriday:

<strong>DO:</strong> Post an explanation on <em>why</em> someone is worth following.  I might be following you because you live in my hometown.  If you follow someone else because they share your hobby, then they might not make a good match for me.  Tell me why I should care about your friend.  The tweet below says I should follow <a href="http://twitter.com/staffphoto">@staffphoto</a> for photographs (I think).  Well done, <a href="http://twitter.com/lucaseditor">@lucaseditor</a>!

<img class="aligncenter size-medium wp-image-240" title="Good Example - If I like Photographs, I should follow this guy" src="http://mikedesjardins.us/wordpress/wp-content/uploads/2009/07/picture-1-300x101.png" alt="Good Example - If I like Photographs, I should follow this guy" width="300" height="101" />

<strong>DON'T:</strong> Retweet other people's #followfridays, <em>especially</em> without any explanation.  An occasional "oh, I agree, @reallycoolguy is worth following" retweet is one thing, but some of the #followfriday's are getting downright spammy:
<p style="text-align: center;"><img class="aligncenter size-medium wp-image-241" title="What the hell is this?  Does this add value to my life?" src="http://mikedesjardins.us/wordpress/wp-content/uploads/2009/07/picture-2-230x300.png" alt="picture-2" width="230" height="300" /></p>

Above - what is this?  Spam?  A bot? I can't even tell.  Below - who are these people?  And why is <em>this particular </em>list so special that it's worth parroting twice over?
<p style="text-align: center;"><img class="aligncenter size-medium wp-image-242" title="If it's worth retweeting twice, it must be special?  Maybe???" src="http://mikedesjardins.us/wordpress/wp-content/uploads/2009/07/picture-3-300x44.png" alt="picture-3" width="300" height="44" /></p>

<strong>DO:</strong> Tell us about interesting twitterers that regularly make you chuckle, teach you something, or share interesting links.  Tell us about the people who make you love twitter and keep you coming back.  And it doesn't hurt to use a catchy "teaser" that makes me want to check out a profile:
<p style="text-align: center;"><img class="aligncenter size-medium wp-image-245" title="Who doesn't want to learn more about kickass web sites?" src="http://mikedesjardins.us/wordpress/wp-content/uploads/2009/07/picture-5-300x37.png" alt="picture-5" width="300" height="37" /></p>

<strong>DON'T:</strong> Worry about offending your friends if you don't mention them in your #followfriday. Worry about the quality of your tweets.  If you're rattling off a list of people in your friends list because you're afraid of otherwise offending them, then you're diluting your own credibility and the quality of your tweets.  And don't sweat it if you have nobody new to recommend this week - you'll be inspired next week!

<strong>DO:</strong> Share people who you would want to have learned about sooner.  When #followfriday actually works, it's a beautiful thing, just ask <a href="http://twitter.com/MsLatina">MsLatina</a> and <a href="http://twitter.com/Nachhi">Nachhi</a>:
<p style="text-align: center;"><img class="aligncenter size-medium wp-image-244" title="See?  Sometimes it works great!" src="http://mikedesjardins.us/wordpress/wp-content/uploads/2009/07/picture-41-300x34.png" alt="picture-41" width="300" height="34" /><strong></strong></p>

<strong>DON'T:</strong> Please don't fill your entire feed with #followfriday's for several hours in a row.  I followed you because I thought <em>you</em> were interesting.  I agree with this guy, <a href="http://twitter.com/ajayshroff">@ajayshroff</a>:
<p style="text-align: center;"><img class="aligncenter size-medium wp-image-246" title="Dude, I'm totally there with you." src="http://mikedesjardins.us/wordpress/wp-content/uploads/2009/07/picture-6-300x36.png" alt="picture-6" width="300" height="36" /></p>

<strong>DO:</strong> If they're interesting, it's definitely okay to help out a new friend on twitter who doesn't have a lot of followers yet.  We all have to start somewhere. #Followfriday is all about spreading the word about interesting people.
<h2>Conclusion</h2>
I don't claim to be a "social media expert" or "twitter guru," so take all of my humble suggestions for what they are: opinions from a crotchety old grump with a blog.  I actually really do enjoy #followfriday, and I sincerely hope that it doesn't lose its usefulness because it isn't used as well as it could be.  What are your suggestions?]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>239</wp:post_id>
<wp:post_date>2009-07-10 08:14:00</wp:post_date>
<wp:post_date_gmt>2009-07-10 12:14:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>the-one-where-i-rant-about-followfriday-dos-and-donts</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1247228043</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>167</wp:comment_id>
<wp:comment_author><![CDATA[Rebecca]]></wp:comment_author>
<wp:comment_author_email>hopgal@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://knitting4dummies.blogspot.com</wp:comment_author_url>
<wp:comment_author_IP>74.69.242.44</wp:comment_author_IP>
<wp:comment_date>2009-07-11 09:02:37</wp:comment_date>
<wp:comment_date_gmt>2009-07-11 13:02:37</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Interesting.  I am still trying to decide whether or not to use Twitter.  I still think it may be a tool of the devil.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Unmasking SMUG: Part One</title>
<link>http://mikedesjardins.us/wordpress/2009/09/unmasking-smug-part-one/</link>
<pubDate>Fri, 11 Sep 2009 12:41:06 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[portland]]></category>

		<category domain="category" nicename="portland"><![CDATA[portland]]></category>

		<category><![CDATA[social]]></category>

		<category domain="category" nicename="social"><![CDATA[social]]></category>

		<category><![CDATA[twitter]]></category>

		<category domain="category" nicename="twitter"><![CDATA[twitter]]></category>

		<category domain="tag"><![CDATA[portland]]></category>

		<category domain="tag" nicename="portland"><![CDATA[portland]]></category>

		<category domain="tag"><![CDATA[social media]]></category>

		<category domain="tag" nicename="social-media"><![CDATA[social media]]></category>

		<category domain="tag"><![CDATA[twitter]]></category>

		<category domain="tag" nicename="twitter"><![CDATA[twitter]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=253</guid>
<description></description>
<content:encoded><![CDATA[If you live in the Portland, Maine area, and you use Twitter, you have probably heard of SMUG.  For the uninitiated, SMUG stands for "Social Media Usability Gurus."  It's a <a href="http://smuggroup.com" target="_blank">parody blog</a>, <a href="http://twitter.com/SMUG_group">Twitter account</a>, and <a href="http://www.facebook.com/profile.php?id=100000159984125&amp;ref=ts" target="_blank">Facebook profile</a> page that mocks so-called Social Media experts.  The owner of the account is not afraid of offending anyone, including local internet micro-celebrities and social media aficionados.

SMUG keeps his real-life identity a secret.  I imagine that it's so he can hurl his snarkiness without fear of retribution.
<h2>The first SMUGup</h2>
On September 9, SMUG hosted the first ever "SMUGup."  The big draw was that SMUG would finally reveal himself/herself/itself to the attendees.  I was in attendance, and like most of the people I spoke with, was skeptical that we would actually get to see the real SMUG.  As it turns out, our skepticism was warranted.
<h2>Disappointment</h2>
SMUG was not revealed.  We were greeted with a bevy of professionally produced low-grade swag (pens, business cards), posters, programs, and surveys.  And we were shown a video, allegedly a live feed of SMUG addressing the attendees:

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="560" height="340" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowFullScreen" value="true" /><param name="allowscriptaccess" value="always" /><param name="src" value="http://www.youtube.com/v/cb3J6nIJmeU&amp;hl=en&amp;fs=1&amp;" /><param name="allowfullscreen" value="true" /><embed type="application/x-shockwave-flash" width="560" height="340" src="http://www.youtube.com/v/cb3J6nIJmeU&amp;hl=en&amp;fs=1&amp;" allowscriptaccess="always" allowfullscreen="true"></embed></object>
<h2>Clues to SMUG's true identity</h2>
Has SMUG grown too careless?  The recent event revealed many clues about the perpetrator.  The first clue is what I'll be addressing in today's post.  SMUG, or an agent of SMUG, disguised his voice in the video address, but it seems like he used a simple pitch adjustment.  If you want to adjust the pitch back, well, there's an app for that.  So I took the liberty of adjusting the pitch on the audio.  Unfortunately, I can't identify the voice - it must be someone I don't know very well.  But perhaps one of my astute readers (and I know there are a lot of you!  Hi, mom!) can figure it out.

Without further ado, I present to you, the unaltered <a href="http://mikedesjardins.us/static/audio/smug-address.mp3">voice of SMUG</a>.
<h2>Why I Am Doing This</h2>
I don't have any problem with SMUG.  Although he/she/it has been a little <a href="http://twitter.com/SMUG_group/status/3847567172" target="_blank">caustic</a> with <a href="http://twitter.com/SMUG_group/status/3451142839" target="_blank">me</a> on Twitter, he's been a lot <a href="http://twitter.com/SMUG_group/status/3514778088" target="_blank">worse</a> <a href="http://twitter.com/SMUG_group/status/3291945704" target="_blank">to</a> <a href="http://twitter.com/SMUG_group/status/3580294089" target="_blank">other</a> <a href="http://smuggroup.com/?p=31" target="_blank">folks</a>.  I find the whole thing pretty funny.  I think a lot of the "experts" have no idea how desperate they look while trying to cash in on something they barely understand, and SMUG puts them in their place.  But I love a challenge.  I think it takes cojones to think you can pull off hiding in plain sight, in the tiny world of our small city's social media community.

Part of me is reluctant to even try to figure this out, because it might ruin the fun for me and for everyone else.  But I also think SMUG needs to be knocked down a peg, and shown that it's not that easy to hide behind an anonymous account.  He can't hide forever.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>253</wp:post_id>
<wp:post_date>2009-09-11 08:41:06</wp:post_date>
<wp:post_date_gmt>2009-09-11 12:41:06</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>unmasking-smug-part-one</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1252672868</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>enclosure</wp:meta_key>
<wp:meta_value>http://mikedesjardins.us/static/audio/smug-address.mp3
1021019
audio/mpeg
</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>188</wp:comment_id>
<wp:comment_author><![CDATA[mike desjardins &raquo; Blog Archive &raquo; Unmasking SMUG: Part Two]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://mikedesjardins.us/wordpress/2009/09/unmasking-smug-part-two/</wp:comment_author_url>
<wp:comment_author_IP>199.85.212.111</wp:comment_author_IP>
<wp:comment_date>2009-09-14 09:49:23</wp:comment_date>
<wp:comment_date_gmt>2009-09-14 13:49:23</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] contact     &laquo; Unmasking SMUG: Part One [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>184</wp:comment_id>
<wp:comment_author><![CDATA[Chris Kast]]></wp:comment_author>
<wp:comment_author_email>chris@kastc.com</wp:comment_author_email>
<wp:comment_author_url>http://kastc.com</wp:comment_author_url>
<wp:comment_author_IP>208.125.198.18</wp:comment_author_IP>
<wp:comment_date>2009-09-11 09:45:53</wp:comment_date>
<wp:comment_date_gmt>2009-09-11 13:45:53</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Does it really matter? Isn't the whole point of SMUG to shine a mirror on the ridiculousness of one calling oneself and expert? Where is the line between over-the-top self puffery and true reality. The simple truth is that so-called Social Media is a tactic that can be leveraged by business. BUT at it's core, Social Media is about connection. Not necessarily person-to-person connection because that only happens, well, in person, but maintaining and nurturing connection in an over-worked, self-made-chaotic world. Just my thoughts. I'm a SMUG fan, too.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Form 90125, from 9/8 SMUGup</title>
<link>http://mikedesjardins.us/wordpress/2009/09/unmasking-smug-part-two/dscn2540/</link>
<pubDate>Mon, 14 Sep 2009 13:36:37 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/wp-content/uploads/2009/09/DSCN2540.jpg</guid>
<description></description>
<content:encoded><![CDATA[Form 90125, from 9/8 SMUGup]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>273</wp:post_id>
<wp:post_date>2009-09-14 09:36:37</wp:post_date>
<wp:post_date_gmt>2009-09-14 13:36:37</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>dscn2540</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>272</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://mikedesjardins.us/wordpress/wp-content/uploads/2009/09/DSCN2540.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/09/DSCN2540.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"360";s:6:"height";s:3:"270";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:20:"2009/09/DSCN2540.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"DSCN2540-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"DSCN2540-300x225.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Unmasking SMUG: Part Two</title>
<link>http://mikedesjardins.us/wordpress/2009/09/unmasking-smug-part-two/</link>
<pubDate>Mon, 14 Sep 2009 13:47:59 +0000</pubDate>
<dc:creator><![CDATA[admin]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://mikedesjardins.us/wordpress/?p=272</guid>
<description></description>
<content:encoded><![CDATA[<h3>Catching Up</h3>
In my <a href="http://mikedesjardins.us/wordpress/2009/09/unmasking-smug-part-one/">previous post</a>, I described a local twitter phenomenon, known only as "SMUG," which stands for "Social Media Usability Gurus."  It's a satirical account intended to mock the abundant so-called social media experts who have infested sites like Twitter and Facebook.

One part of SMUG's mystique is his/her/their anonymity, and I decided to try to play detective/journalist and figure out who was behind SMUG.  Sadly, SMUG has only <a href="http://twitter.com/SMUG_group" target="_blank">tweeted</a> once since my previous post.  I sincerely hope that I haven't scared SMUG into hiding.  The fact of the matter is, I really don't have any conclusive evidence at this point of exactly who SMUG is, just a few good leads.
<h3>Pressing On</h3>
Having said that, I intend to consider sharing my observations and clues.  At any tweetup these days, you'll find hushed people in the corner speculating who SMUG is, and providing their own theories and clues.  This is no different than any of that.
<h3>Form 90125</h3>
At the recent SMUGup, we were given an amusing fill-in-the-oval "survey" to fill out entitled "Form 90125."  An example question would be "My online personality matches my personality in real life (Strongly Agree/Agree/Disagree/Strongly Disagree)."  The surveys were unceremoniously shredded on stage after attendees finished filling them out.

<img class="aligncenter size-medium wp-image-273" title="Form 90125, from 9/8 SMUGup" src="http://mikedesjardins.us/wordpress/wp-content/uploads/2009/09/DSCN2540-300x225.jpg" alt="Form 90125, from 9/8 SMUGup" width="300" height="225" />

If you're like me, you believe nothing is random, including the title of this form.  Also, if you're like me, you grew up where the only reasonably "cool" radio station played classic rock.  If you're <em>really</em> like me, you know all sorts of worthless trivia, particularly about music.
<h3>Damning Taste in Music</h3>
It turns out 90125 was the name of a really horrible album released in 1984 by a then washed-up version of the British Prog-rock band Yes.  At this point in their career, a few remaining members of Yes decided to abandon its prog-rock roots and record a bunch of banal pop tunes.  Elf-sounding lead singer Jon Anderson was eventually brought back in, and he rewrote all the lyrics and recorded himself on vocals. As is often the case, this crappy little pedestrian album turned out to be Yes's biggest commercial success (think Metallica's black album).
<p style="text-align: center;"><img class="aligncenter" title="Ugh." src="http://upload.wikimedia.org/wikipedia/en/0/09/90125album.jpg" alt="" width="300" height="300" /></p>
<p style="text-align: left;">From <a href="http://en.wikipedia.org/wiki/90125" target="_blank">Wikipedia</a>, the album cover was designed on one of the band member's Apple II computers.  You can hardly tell, can you?</p>

BTW, the history of the band Yes is fraught with soap-opera crap like this, with members leaving and re-joining all the time.  It's really great.
<h3>Why am I telling you all this?</h3>
Because at least one member of SMUG is into Prog Rock enough that he/she knows about this awful little album.  It's the kind of thing that you
<ul>
	<li>Purchased (on a charming little plastic thing called a "cassette" in those days - <a href="http://en.wikipedia.org/wiki/Compact_Cassette" target="_blank">look it up</a>) because you like the band, and are happy to get new output from them, regardless of its quality or lack thereof (see Pink Floyd's "Momentary Lapse of Reason," or Jethro Tull's "Catfish Rising" for other examples).</li>
	<li>Purchased because you liked the catchy little pop tunes that were reminiscent of a laundry detergent commercial jingle.</li>
	<li>Didn't purchase at all, but the ubiquity of "Owner of a Lonely Heart" on every radio station at the time forced the song into your memory against your will.</li>
</ul>
What does all of this mean?  It means our perpetrator likely listens to classic rock, and probably graduated from high school around, say, 1986.  Oh, he probably lived in white suburbia, where music like this was unavoidable growing up.

Check out all your blip.fm friends to look for classic rock like this, and checkout some facebook profiles for graduation dates - draw your own conclusions.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>272</wp:post_id>
<wp:post_date>2009-09-14 09:47:59</wp:post_date>
<wp:post_date_gmt>2009-09-14 13:47:59</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>unmasking-smug-part-two</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1252936081</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>191</wp:comment_id>
<wp:comment_author><![CDATA[Scott Nolan]]></wp:comment_author>
<wp:comment_author_email>snolan@scottnolan.org</wp:comment_author_email>
<wp:comment_author_url>http://blog.scottnolan.org</wp:comment_author_url>
<wp:comment_author_IP>68.48.100.55</wp:comment_author_IP>
<wp:comment_date>2009-09-15 07:36:02</wp:comment_date>
<wp:comment_date_gmt>2009-09-15 11:36:02</wp:comment_date_gmt>
<wp:comment_content><![CDATA[OK, now these are fightin' words...  I will agree that 90125 is not quintessential Yes, and I'll agree that it is not a true album in the tradition of "Tales from Topographic Oceans" or "Going for the One" - but it is a good album in "The Yes Album" tradition - which is more a container for a new collection of songs with a different sound.  Like "The Yes Album" it reveals a new sound for the band, and is a loose collection of otherwise unrelated songs.  Unlike "The Yes Album" it is not as overwhelmingly good; but it is good - a damned site better than most of the crap being released in 1984.  I am particularly fond of "Changes" which I consider to be one of Yes's best songs ever, though "And You And I" is my all time favourite.

While the electronic overtones in 90125 needed to be trimmed back considerably, it is a logical progression from "Drama" and led into 9012live and Union - which are celebrations of 20 years of progressive rock, and I am glad we had 90125 in order to get the follow ons, and especially to get "Changes" - which is still, 27 years later, sublime.  The album should have been called "Changes" as it made more sense than 90125.

Yeah, the cover art is lame - but who can afford Roger Dean for all their records?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>197</wp:comment_id>
<wp:comment_author><![CDATA[yourbig.ru]]></wp:comment_author>
<wp:comment_author_email>munukil40@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://yourbig.ru</wp:comment_author_url>
<wp:comment_author_IP>89.149.244.89</wp:comment_author_IP>
<wp:comment_date>2009-09-28 02:04:38</wp:comment_date>
<wp:comment_date_gmt>2009-09-28 06:04:38</wp:comment_date_gmt>
<wp:comment_content><![CDATA[How do know if a money order from the post office is real?]]></wp:comment_content>
<wp:comment_approved>spam</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>198</wp:comment_id>
<wp:comment_author><![CDATA[Floost]]></wp:comment_author>
<wp:comment_author_email>gilcreaseqejayma1795@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tvlocales-depays.com/</wp:comment_author_url>
<wp:comment_author_IP>118.98.32.34</wp:comment_author_IP>
<wp:comment_date>2009-09-28 21:32:53</wp:comment_date>
<wp:comment_date_gmt>2009-09-29 01:32:53</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I liked it. So much useful material. I read with great interest.]]></wp:comment_content>
<wp:comment_approved>spam</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>189</wp:comment_id>
<wp:comment_author><![CDATA[GriffinClubMerv]]></wp:comment_author>
<wp:comment_author_email>keith@lukephotography.net</wp:comment_author_email>
<wp:comment_author_url>http://www.twitter.com/GriffinClubMerv</wp:comment_author_url>
<wp:comment_author_IP>74.65.157.106</wp:comment_author_IP>
<wp:comment_date>2009-09-14 09:56:46</wp:comment_date>
<wp:comment_date_gmt>2009-09-14 13:56:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You had me at "Elf-sounding lead singer Jon Anderson". Clearly anyone who enjoys the music of Yes would also enjoy (and maybe even prefer) the elf-inspired lyrics of the band Rush. Which could lead one to believe that Smug spent his formative years living in or near the town of Cumberland.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>196</wp:comment_id>
<wp:comment_author><![CDATA[ourbig.ru]]></wp:comment_author>
<wp:comment_author_email>munukil32@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://ourbig.ru</wp:comment_author_url>
<wp:comment_author_IP>89.149.244.89</wp:comment_author_IP>
<wp:comment_date>2009-09-27 03:07:02</wp:comment_date>
<wp:comment_date_gmt>2009-09-27 07:07:02</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can you still say "Put it where the sun don't shine " on a nude beach?]]></wp:comment_content>
<wp:comment_approved>spam</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>199</wp:comment_id>
<wp:comment_author><![CDATA[ofigennoe.ru]]></wp:comment_author>
<wp:comment_author_email>187@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ofigennoe.ru</wp:comment_author_url>
<wp:comment_author_IP>89.149.244.89</wp:comment_author_IP>
<wp:comment_date>2009-10-09 01:29:34</wp:comment_date>
<wp:comment_date_gmt>2009-10-09 05:29:34</wp:comment_date_gmt>
<wp:comment_content><![CDATA[When you order frogs legs at a restaurant what do they do with the rest of the frog ? - Well surely they just throw the rest of the frog away and take it to the tip.]]></wp:comment_content>
<wp:comment_approved>spam</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>194</wp:comment_id>
<wp:comment_author><![CDATA[rosostrov.ru]]></wp:comment_author>
<wp:comment_author_email>munukil30@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://rosostrov.ru</wp:comment_author_url>
<wp:comment_author_IP>89.149.244.89</wp:comment_author_IP>
<wp:comment_date>2009-09-25 10:27:48</wp:comment_date>
<wp:comment_date_gmt>2009-09-25 14:27:48</wp:comment_date_gmt>
<wp:comment_content><![CDATA[How much money would I need to save for a holiday in the Caribbean?]]></wp:comment_content>
<wp:comment_approved>spam</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>195</wp:comment_id>
<wp:comment_author><![CDATA[prizebig.ru]]></wp:comment_author>
<wp:comment_author_email>munukil31@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://prizebig.ru</wp:comment_author_url>
<wp:comment_author_IP>89.149.244.89</wp:comment_author_IP>
<wp:comment_date>2009-09-26 06:42:26</wp:comment_date>
<wp:comment_date_gmt>2009-09-26 10:42:26</wp:comment_date_gmt>
<wp:comment_content><![CDATA[How do people actually make money with porn?]]></wp:comment_content>
<wp:comment_approved>spam</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
</channel>
</rss>
