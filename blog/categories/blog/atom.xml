<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: blog | Mike Desjardins]]></title>
  <link href="http://mdesjardins.github.io/blog/categories/blog/atom.xml" rel="self"/>
  <link href="http://mdesjardins.github.io/"/>
  <updated>2015-12-04T17:04:38-05:00</updated>
  <id>http://mdesjardins.github.io/</id>
  <author>
    <name><![CDATA[Mike Desjardins]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Amazon SES, ses-verify-email-address.pl failing on OSX]]></title>
    <link href="http://mdesjardins.github.io/2011/08/23/amazon-ses-ses-verify-email-address-pl-failing-on-osx/"/>
    <updated>2011-08-23T00:00:00-04:00</updated>
    <id>http://mdesjardins.github.io/2011/08/23/amazon-ses-ses-verify-email-address-pl-failing-on-osx</id>
    <content type="html"><![CDATA[<p>I spent the better part of last night trying to get Amazon SES working from my Mac. After
reading the README, installing all the dependencies, and doing everything correctly, I
kept getting the following error:</p>

<pre><code>Can't locate object method "ssl_opts" via package "LWP::UserAgent" at SES.pm line 249.
</code></pre>

<p>The only Google hits were for people trying to set up SES with Ubuntu or Debian and weren&rsquo;t
much help. It finally dawned on me what was going on this morning&hellip; when I did a &ldquo;which perl&rdquo;,
I noticed that it was running from my MacPorts directory:</p>

<pre><code>~/Downloads/amazon-ses&gt; which perl
/opt/local/bin/perl
</code></pre>

<p>However, when I looked at the code in the script, the &ldquo;she-bang&rdquo; at the top of the script
was pointing to the perl in /usr/bin, which was installed with the operating system:</p>

<pre><code>#!/usr/bin/perl -w
</code></pre>

<p>So all of my dependency installations were ending up in my MacPorts version of Perl, but
the script was executing using the OSX version of Perl, and nothing worked. Changing the
first line to</p>

<pre><code>#!/opt/local/bin/perl -w
</code></pre>

<p>fixed the problem for me. It probably would make even more sense for me to make /usr/bin/perl
a symbolic link to my MacPorts installation. I hope this can help someone else out there
suffering through the same problem!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Development : The Basics]]></title>
    <link href="http://mdesjardins.github.io/2011/06/28/android-development-the-basics/"/>
    <updated>2011-06-28T00:00:00-04:00</updated>
    <id>http://mdesjardins.github.io/2011/06/28/android-development-the-basics</id>
    <content type="html"><![CDATA[<p>I presented &#8220;Android Development: The Basics&#8221; to TechMaine&#8217;s JUG on June 21st. I&#8217;ve posted the slides from the presentation to slideshare.net &#8211; sorry you missed it? Here&#8217;s your chance to almost be there!</p>

<div style="width:425px" id="__ss_8434906">
  <strong style="display:block;margin:12px 0 4px"><a href="http://www.slideshare.net/mdesjardins/android-development-the-basics" title="Android Development: The Basics">Android Development: The Basics</a></strong> <div style="padding:5px 0 12px">
    View more <a href="http://www.slideshare.net/">presentations</a> from <a href="http://www.slideshare.net/mdesjardins">Mike Desjardins</a>
  </div></p>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How I debugged a JRuby Stack Overflow]]></title>
    <link href="http://mdesjardins.github.io/2011/03/18/how-i-debugged-a-jruby-stack-overflow/"/>
    <updated>2011-03-18T00:00:00-04:00</updated>
    <id>http://mdesjardins.github.io/2011/03/18/how-i-debugged-a-jruby-stack-overflow</id>
    <content type="html"><![CDATA[<p>A little over a year ago, I inherited someone else&rsquo;s JRuby on Rails project. My initial role
on the team was the &lsquo;token Java guy,&rsquo; and knew almost zero about Ruby. I&rsquo;ve since grown to love
JRuby, but that&rsquo;s a story for another time.</p>

<p>Over the course of the project, I&rsquo;ve upgraded my JRuby version, upgraded gems, upgraded Java,
and who knows what else. One day, I went to do a migration, and they just plain didn&rsquo;t work
anymore. I discovered that most migration-related stuff didn&rsquo;t work, including tasks like
db:test:load. And by &ldquo;didn&rsquo;t work anymore,&rdquo; I mean this:</p>

<pre><code>Meep:~/_work/sonymusic/src/checkout&gt; rake db:test:load
(in /Users/mdesjardins/_work/sonymusic/src/checkout)
Invalid access of stack red zone 0x100401b20 rip=0x10a6ceb6e
Bus error
</code></pre>

<p>My initial reaction to this is what I expect most people&rsquo;s reaction would be: &ldquo;what in holy hell
is this?&rdquo; It&rsquo;s basically a blown stack &ndash; the stack has &ldquo;edges&rdquo; called red zones to which you should
never write, because it means you&rsquo;re getting too close to going off the end, and the OS is trying
to prevent you from being stupid.</p>

<p>Google was little help &ndash; <a href="http://stackoverflow.com/questions/1501770/invalid-access-of-stack-red-zone-from-java-vm" target="_blank">most people speculated</a> that similar errors were problems w/ OSX&rsquo;s JVM implementation.</p>

<p>So I flailed for a while. I tried backing up to version 1.5 of Apple&rsquo;s JVM (which itself is
<a href="http://hints.macworld.com/article.php?story=20100123192950640" target="_blank">nontrivial</a>,
and was made more complicated by the fact that json-jruby requires Java 6, but I digress). When
that failed, I tried rolling back random gems and versions of JRuby. I tried
<a href="http://stackoverflow.com/questions/2207233/how-to-enable-full-coredumps-on-os-x" target="_blank">enabling core files</a>
and reading stacks in gdb, but that ended up being useless. I tried increasing the stack to a whopping 2 Gig
(normal is 2M) by passing -J-Xss2048M, but it still crashed.</p>

<p>When I passed -J-d32 on JRuby&rsquo;s command line, I got a nice &ldquo;Stack Limit Exceeded&rdquo; error instead of the
nasty crash &ndash; so that was a start. Everything pointed to an infinite recursion problem, but where?</p>

<p>I was getting desperate. As it turns out, before I became a retread Ruby programmer, I worked in Java
enterprise stuff. This is the kind of stuff you do at banks and insurance companies, in hellish beige
cubicles, where you hang posters with diagrams of middleware and service busses and ORMs.</p>

<p>In beige cubicle hell, I learned about a few tools to monitor active JVMs (this comes in handy when
you&rsquo;re monitoring god-awful beasts like &ldquo;enterprise application servers.&rdquo;) I figured it was worth
a shot to try out <strong>jstack. </strong>jstack comes with the JVM. It shows you a stack dump of all the
threads running in a JVM. If you&rsquo;re using it on a local JVM, all you need to do is pass it the PID
of the process you&rsquo;d like to observe w/ the -l (for local?) command line switch.</p>

<p>The trick was going to be catching it just before it blew up. After a few tries, I caught this:</p>

<pre><code>"main" prio=5 tid=102801000 nid=0&amp;#215;100601000 runnable [10047d000]   java.lang.Thread.State: RUNNABLE 
at com.mysql.jdbc.util.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:123) 
at com.mysql.jdbc.util.ReadAheadInputStream.read(ReadAheadInputStream.java:188) - locked &lt;7fd39d7c8&gt; (a com.mysql.jdbc.util.ReadAheadInputStream) 
at com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:2329) 
at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:2774)
at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:2763)
at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3299)
at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1837)
at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1961)
at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2537) - locked &lt;7fd3992c0&gt; (a java.lang.Object)
at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2466)
at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1383) - locked &lt;7fd3992c0&gt; (a java.lang.Object)
at com.mysql.jdbc.DatabaseMetaData$9.forEach(DatabaseMetaData.java:4815)
at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
at com.mysql.jdbc.DatabaseMetaData.getTables(DatabaseMetaData.java:4793)
at arjdbc.jdbc.RubyJdbcConnection$16.call(RubyJdbcConnection.java:1015)
at arjdbc.jdbc.RubyJdbcConnection.withConnectionAndRetry(RubyJdbcConnection.java:1191)
at arjdbc.jdbc.RubyJdbcConnection.tables(RubyJdbcConnection.java:576)
at arjdbc.jdbc.RubyJdbcConnection.tables(RubyJdbcConnection.java:552)
at arjdbc.jdbc.RubyJdbcConnection$i$tables.call(RubyJdbcConnection$i$tables.gen:65535)
at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:103)
at rubyjit.tables_AA8BB5A33C226C4FACC724EF93DE8D1DF04792EB.__file__(/Users/mdesjardins/.rvm/gems/jruby-1.6.0@rails238/gems/activerecord-jdbc-adapter-1.1.1/lib/arjdbc/jdbc/adapter.rb:234)
at rubyjit.tables_AA8BB5A33C226C4FACC724EF93DE8D1DF04792EB.__file__(/Users/mdesjardins/.rvm/gems/jruby-1.6.0@rails238/gems/activerecord-jdbc-adapter-1.1.1/lib/arjdbc/jdbc/adapter.rb)
at org.jruby.ast.executable.AbstractScript.__file__(AbstractScript.java:37)
at org.jruby.internal.runtime.methods.JittedMethod.call(JittedMethod.java:127)
at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:103)
at rubyjit.auto_create_table_E1FB7FE0CE1D294ABA67860B81492049B1D6AE7F.__file__(/Users/mdesjardins/_work/sonymusic/src/checkout/vendor/plugins/auto_migrations/lib/auto_migrations.rb:70)
at rubyjit.auto_create_table_E1FB7FE0CE1D294ABA67860B81492049B1D6AE7F.__file__(/Users/mdesjardins/_work/sonymusic/src/checkout/vendor/plugins/auto_migrations/lib/auto_migrations.rb)
at org.jruby.internal.runtime.methods.JittedMethod.call(JittedMethod.java:87)
at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:78)
at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:84)
at rubyjit.method_missing_with_auto_migration_CA4124448766A2D0B44A8F3F5A4A9EC9908F2D02.__file__(/Users/mdesjardins/_work/sonymusic/src/checkout/vendor/plugins/auto_migrations/lib/auto_migrations.rb:55)
at rubyjit.method_missing_with_auto_migration_CA4124448766A2D0B44A8F3F5A4A9EC9908F2D02.__file__(/Users/mdesjardins/_work/sonymusic/src/checkout/vendor/plugins/auto_migrations/lib/auto_migrations.rb)
at org.jruby.internal.runtime.methods.JittedMethod.call(JittedMethod.java:87)
at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:148)
at org.jruby.internal.runtime.methods.AliasMethod.call(AliasMethod.java:101)
at org.jruby.internal.runtime.methods.AliasMethod.call(AliasMethod.java:101)
at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:78)
at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:84)
at rubyjit.auto_create_table_E1FB7FE0CE1D294ABA67860B81492049B1D6AE7F.__file__(/Users/mdesjardins/_work/sonymusic/src/checkout/vendor/plugins/auto_migrations/lib/auto_migrations.rb:71)
at rubyjit.auto_create_table_E1FB7FE0CE1D294ABA67860B81492049B1D6AE7F.__file__(/Users/mdesjardins/_work/sonymusic/src/checkout/vendor/plugins/auto_migrations/lib/auto_migrations.rb)
at org.jruby.internal.runtime.methods.JittedMethod.call(JittedMethod.java:87)
at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:78)
at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:84)
at rubyjit.method_missing_with_auto_migration_CA4124448766A2D0B44A8F3F5A4A9EC9908F2D02.__file__(/Users/mdesjardins/_work/sonymusic/src/checkout/vendor/plugins/auto_migrations/lib/auto_migrations.rb:55)
at rubyjit.method_missing_with_auto_migration_CA4124448766A2D0B44A8F3F5A4A9EC9908F2D02.__file__(/Users/mdesjardins/_work/sonymusic/src/checkout/vendor/plugins/auto_migrations/lib/auto_migrations.rb)
at org.jruby.internal.runtime.methods.JittedMethod.call(JittedMethod.java:87)
at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:148)
at org.jruby.internal.runtime.methods.AliasMethod.call(AliasMethod.java:101)
at org.jruby.internal.runtime.methods.AliasMethod.call(AliasMethod.java:101)
at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:78)
at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:84)
at rubyjit.auto_create_table_E1FB7FE0CE1D294ABA67860B81492049B1D6AE7F.__file__(/Users/mdesjardins/_work/sonymusic/src/checkout/vendor/plugins/auto_migrations/lib/auto_migrations.rb:71)
at rubyjit.auto_create_table_E1FB7FE0CE1D294ABA67860B81492049B1D6AE7F.__file__(/Users/mdesjardins/_work/sonymusic/src/checkout/vendor/plugins/auto_migrations/lib/auto_migrations.rb)
at org.jruby.internal.runtime.methods.JittedMethod.call(JittedMethod.java:87)
at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:78)
at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:84)
at rubyjit.method_missing_with_auto_migration_CA4124448766A2D0B44A8F3F5A4A9EC9908F2D02.__file__(/Users/mdesjardins/_work/sonymusic/src/checkout/vendor/plugins/auto_migrations/lib/auto_migrations.rb:55)
at rubyjit.method_missing_with_auto_migration_CA4124448766A2D0B44A8F3F5A4A9EC9908F2D02.__file__(/Users/mdesjardins/_work/sonymusic/src/checkout/vendor/plugins/auto_migrations/lib/auto_migrations.rb)
at org.jruby.internal.runtime.methods.JittedMethod.call(JittedMethod.java:87)
at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:148)
at org.jruby.internal.runtime.methods.AliasMethod.call(AliasMethod.java:101)
at org.jruby.internal.runtime.methods.AliasMethod.call(AliasMethod.java:101)
at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:78)
at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:84)
at rubyjit.auto_create_table_E1FB7FE0CE1D294ABA67860B81492049B1D6AE7F.__file__(/Users/mdesjardins/_work/sonymusic/src/checkout/vendor/plugins/auto_migrations/lib/auto_migrations.rb:71)
at rubyjit.auto_create_table_E1FB7FE0CE1D294ABA67860B81492049B1D6AE7F.__file__(/Users/mdesjardins/_work/sonymusic/src/checkout/vendor/plugins/auto_migrations/lib/auto_migrations.rb)
at org.jruby.internal.runtime.methods.JittedMethod.call(JittedMethod.java:87)
at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:78)
at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:84)
</code></pre>

<p>etc. etc. etc. ad infinitum. This was the &ldquo;Aha!&rdquo; moment. It turned out the problem was in
my vendor/auto_migration plugin. What does this plugin do? I honestly have no idea &ndash; from
the README, it looks like it&rsquo;s a tool that applies schema deltas based on schema.rb instead
of using migrations the intended way (hmm&hellip; that seems&hellip; misguided). As I said at the
start of this post, I inherited this project. I wasn&rsquo;t even using this thing anymore.</p>

<p>I deleted the plugin, and <em>voila</em>! My stack trace woes disappeared.</p>

<p><strong>TL;DR: Use jstack if you&rsquo;re stuck w/ a blown stack on JRuby. It works like a champ.</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Skicast Pro&#8230; now with widgets!]]></title>
    <link href="http://mdesjardins.github.io/2011/01/23/skicast-pro-now-with-widgets/"/>
    <updated>2011-01-23T00:00:00-05:00</updated>
    <id>http://mdesjardins.github.io/2011/01/23/skicast-pro-now-with-widgets</id>
    <content type="html"><![CDATA[<p>In a continuing effort to differentiate Skicast from the other ski condition
apps out there in Android-land, I&rsquo;ve released a new version of Skicast Pro
that features some spiffy new homescreen widgets.  These widgets allow you to
view the current conditions at your favorite resorts at-a-glance without opening
Skicast. Tapping the widget opens the main app&rsquo;s favorites screen.</p>

<center>
<img title="Skicast screen shot" src="http://mdesjardins.github.io/assets/uploads/2011/01/Screen-shot-2011-01-22-at-4.17.26-PM.png" alt="" width="192" height="288" />
</center>


<p>Skicast&rsquo;s sales have been, quite frankly, a bit disappointing. The data feed
for the app is kinda pricey, and it doesn&rsquo;t look like I&rsquo;m going to recoup that
expense.  I had assumed that there was a larger potential user base for Skicast
than my other app, Tidecast. That may still be the case, but right now Tidecast
downloads are outpacing Skicast Pro downloads almost 5-to-1.</p>

<p>So, to try to boost its flagging sales, I&rsquo;ve added the widgets. I&rsquo;ve also
introduced House Ads in the Free edition that try to upsell the Pro edition.
My AdMob ads only get about a 40% fill rate, so house ads seemed like an
obvious place to try to plug the upgrade &ndash; this is especially true for getting
the message out about the new features in the Pro version.</p>

<p>We&rsquo;ll see how it goes! I intend to slow down the pace of Android development for a
while to tackle a few other mobile platforms. I&rsquo;ve started ports of both
Skicast and Tidecast to iOS before, but I got distracted by other things and
abandoned them. I think I might revive those projects for a bit &hellip; I&rsquo;m anxious to
see how they perform in the App Store vs. the Android Market.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Skicast Android Application Released]]></title>
    <link href="http://mdesjardins.github.io/2010/10/25/skicast-1-0-released/"/>
    <updated>2010-10-25T00:00:00-04:00</updated>
    <id>http://mdesjardins.github.io/2010/10/25/skicast-1-0-released</id>
    <content type="html"><![CDATA[<p>Ceres Logic is proud to announce the follow-up to its first Android application,
Tidecast, with Skicast.</p>

<center>
<img title="Skicast screenshot Sunday River" src="http://mdesjardins.github.io/assets/uploads/2010/10/screenshot-sunday-river-150x150.png" alt="Skicast screenshot Sunday River" width="150" height="150" />
</center>


<p>Skicast is amobile application that allows users to get the latest information on
ski resorts in real-time. Through a partnership with
<a href="http://www.snocountry.com" target="_blank">SnoCountry.com</a>, Skicast is
able to provide the following information on ski areas in North America, Europe,
and other ski areas in the southern hemisphere:</p>

<ul>
<li>Open Alpine and Nordic trails</li>
<li>Trail conditions</li>
<li>Night Grooming</li>
<li>Trail Maps</li>
<li>Web Cam Views</li>
<li>Contact Information and Driving Directions</li>
<li>Weather Forecasts and Recent Snowfall totals</li>
</ul>


<p>Enhancements to geo-locate nearby resorts are already underway, as well as Blackberry
and iPhone versions. You can get to the Google Market page for Skicast by following
the QR Code below.</p>

<center>
<img title="qrcode" src="http://mdesjardins.github.io/assets/uploads/2010/10/qrcode-150x150.png" alt="qrcode" width="150" height="150" />
</center>

]]></content>
  </entry>
  
</feed>
