#!/bin/bash
#
# Builds blog posts by reading all of the markdown files in ./_posts,
# and using pandoc to convert to html in the ./posts directory. Also
# builds an index file in the ./posts directory named index.
#
SOURCE_DIR=_posts/
TARGET_DIR=posts/
INDEX_PAGE_TITLE="Writing"

# Start a post index page
INDEX_MD_DIRECTORY=$(mktemp -d -t blog-post-builder)
touch "${INDEX_MD_DIRECTORY}/index.md"

clean_up() {
    echo "Cleaning up."
    test -d "${INDEX_MD_DIRECTORY}" && rm -fr "${INDEX_MD_DIRECTORY}"
}
trap "clean_up" EXIT

# Parses the title from the Jekyll comments at the top.
parse_title() {
    MD_FILENAME=${1}
    # Add to the post index, stripping leading and trailing single and double
    # quotation marks. For some reason I couldn't get a single sed command to
    # to strip both single and double, getting the right escaping eluded me.
    TITLE=$(grep "title: " "${SOURCE_DIR}/${MD_FILENAME}" | \
            cut -d ":" -f 2 | \
            sed -e 's/^[" ]*//' -e 's/[" ]*$//' -e "s/^[' ]*//" -e "s/[' ]*$//")
    echo "${TITLE}"
}

# Parses date out of the filename.
parse_date() {
    MD_FILENAME=${1}
    DATE=$(echo "$MD_FILENAME"|cut -c1-10)
    echo "${DATE}"
}

# Converts the source markdown filename into an html output filename.
html_filename() {
    MD_FILENAME=${1}
    HTML_FILENAME=$(echo "${MD_FILENAME}" | cut -d "." -f 1)
    echo "${HTML_FILENAME}.html"
}

# Convert all the markdown posts. Sort newest first for the index.
declare -a MD_POST_FILENAMES=($(ls -1r ${SOURCE_DIR}/))
declare -i INDEX=0
FILE_COUNT=${#MD_POST_FILENAMES[@]}
for MD_POST_FILENAME in "${MD_POST_FILENAMES[@]}"; do
    HTML_POST_FILENAME=$(html_filename "${MD_POST_FILENAME}")

    POST_TITLE=$(parse_title "${MD_POST_FILENAME}")
    POST_DATE=$(parse_date "${MD_POST_FILENAME}")

    if [ "${SOURCE_DIR}/${MD_POST_FILENAME}" -nt "${TARGET_DIR}/${HTML_POST_FILENAME}" ]; then
        echo "${MD_POST_FILENAME} -> ${HTML_POST_FILENAME}"

        if [ $INDEX -gt 0 ] ; then
            NEXT_INDEX=$((INDEX-1))
            NEXT_TITLE=$(parse_title "${MD_POST_FILENAMES[${NEXT_INDEX}]}")
            NEXT_POST_FILENAME=$(html_filename "${MD_POST_FILENAMES[${NEXT_INDEX}]}")
        fi

        if [ $INDEX -lt $((FILE_COUNT-1)) ] ; then
            PREVIOUS_INDEX=$((INDEX+1))
            PREVIOUS_TITLE=$(parse_title "${MD_POST_FILENAMES[${PREVIOUS_INDEX}]}")
            PREVIOUS_POST_FILENAME=$(html_filename "${MD_POST_FILENAMES[${PREVIOUS_INDEX}]}")
        fi

        # convert the post
        pandoc -s \
               -o "${TARGET_DIR}/${HTML_POST_FILENAME}" \
               --template=_templates/post.html \
               --metadata date="${POST_DATE}" \
               --metadata next_title="${NEXT_TITLE}" \
               --metadata next_url="${NEXT_POST_FILENAME}" \
               --metadata previous_title="${PREVIOUS_TITLE}" \
               --metadata previous_url="${PREVIOUS_POST_FILENAME}" \
               --css=style.css \
               --css="https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap" \
               --css="https://fonts.googleapis.com/css2?family=VT323&display=swap" \
               --embed-resources \
               "${SOURCE_DIR}/${MD_POST_FILENAME}"
    fi
    echo "* [${POST_TITLE}](/posts/${HTML_POST_FILENAME}) <span class=\"date\">${POST_DATE}</span>" >> "${INDEX_MD_DIRECTORY}/index.md"

    INDEX=$((INDEX+1))
done

# convert the index page
echo "Converting index page."
pandoc -s \
       -o "${TARGET_DIR}/index.html" \
       --template=_templates/post.html \
       --metadata title="${INDEX_PAGE_TITLE}" \
       --css=/style.css \
       --css="https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap" \
       --css="https://fonts.googleapis.com/css2?family=VT323&display=swap" \
       "${INDEX_MD_DIRECTORY}/index.md"

